{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/InfoBox.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport closeIcon from \"../images/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoBox = ({\n  infoBoxOpen,\n  toggleInfoBox,\n  selectedAlgo\n}) => {\n  _s();\n\n  const [dragging, setDragging] = useState(false);\n  const [prevMouseCord, setPrevMouseCord] = useState([0, 0]);\n  const [boxCord, setBoxCord] = useState([0, 0]);\n  const boxStyle = {\n    left: boxCord[0],\n    top: boxCord[1]\n  };\n\n  const enableDragging = e => {\n    setDragging(true);\n    setPrevMouseCord([e.clientX, e.clientY]);\n  };\n\n  const beingDragged = e => {\n    const xDiff = e.clientX - prevMouseCord[0];\n    const yDiff = e.clientY - prevMouseCord[1];\n    setBoxCord(prevState => [prevState[0] + xDiff, prevState[1] + yDiff]);\n  };\n\n  const disableDragging = e => {\n    setDragging(false);\n    console.log(\"dragging enabled\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boxStyle,\n    className: `info-box ${infoBoxOpen ? 'visible' : 'hidden'}`,\n    onMouseDown: enableDragging,\n    onMouseMove: beingDragged,\n    onMouseUp: disableDragging,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"close-info-icon\",\n      src: closeIcon,\n      onClick: toggleInfoBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selectedAlgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), \"SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoBox, \"DboB0XeZ1kZGz89ZuLBiHkL1cmY=\");\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/InfoBox.js"],"names":["useState","InfoBox","infoBoxOpen","toggleInfoBox","selectedAlgo","dragging","setDragging","prevMouseCord","setPrevMouseCord","boxCord","setBoxCord","boxStyle","left","top","enableDragging","e","clientX","clientY","beingDragged","xDiff","yDiff","prevState","disableDragging","console","log","closeIcon"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAD,KAAkD;AAAA;;AAC9D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAlD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAtC;AAEA,QAAMW,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAEH,OAAO,CAAC,CAAD,CADA;AAEbI,IAAAA,GAAG,EAAEJ,OAAO,CAAC,CAAD;AAFC,GAAjB;;AAKA,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC1BT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,gBAAgB,CAAC,CAACO,CAAC,CAACC,OAAH,EAAYD,CAAC,CAACE,OAAd,CAAD,CAAhB;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxB,UAAMI,KAAK,GAAGJ,CAAC,CAACC,OAAF,GAAYT,aAAa,CAAC,CAAD,CAAvC;AACA,UAAMa,KAAK,GAAGL,CAAC,CAACE,OAAF,GAAYV,aAAa,CAAC,CAAD,CAAvC;AAEAG,IAAAA,UAAU,CAACW,SAAS,IAAI,CAACA,SAAS,CAAC,CAAD,CAAT,GAAeF,KAAhB,EAAuBE,SAAS,CAAC,CAAD,CAAT,GAAeD,KAAtC,CAAd,CAAV;AACH,GALD;;AAOA,QAAME,eAAe,GAAIP,CAAD,IAAO;AAC3BT,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAEb,QAAZ;AAAsB,IAAA,SAAS,EAAG,YAAWT,WAAW,GAAG,SAAH,GAAe,QAAS,EAAhF;AAAmF,IAAA,WAAW,EAAEY,cAAhG;AAAgH,IAAA,WAAW,EAAEI,YAA7H;AAA2I,IAAA,SAAS,EAAEI,eAAtJ;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEG,SAAtC;AAAiD,MAAA,OAAO,EAAEtB;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlCD;;GAAMH,O;;KAAAA,O;AAoCN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\nimport closeIcon from '../images/close.svg'\n\nconst InfoBox = ({ infoBoxOpen, toggleInfoBox, selectedAlgo }) => {\n    const [dragging, setDragging] = useState(false);\n    const [prevMouseCord, setPrevMouseCord] = useState([0, 0]);\n    const [boxCord, setBoxCord] = useState([0, 0]);\n\n    const boxStyle = {\n        left: boxCord[0],\n        top: boxCord[1]\n    }\n\n    const enableDragging = (e) => {\n        setDragging(true);\n        setPrevMouseCord([e.clientX, e.clientY]);\n    };\n\n    const beingDragged = (e) => {\n        const xDiff = e.clientX - prevMouseCord[0];\n        const yDiff = e.clientY - prevMouseCord[1];\n\n        setBoxCord(prevState => [prevState[0] + xDiff, prevState[1] + yDiff]);\n    };\n\n    const disableDragging = (e) => {\n        setDragging(false);\n        console.log(\"dragging enabled\");\n    };\n\n    return (\n        <div style={boxStyle} className={`info-box ${infoBoxOpen ? 'visible' : 'hidden'}`} onMouseDown={enableDragging} onMouseMove={beingDragged} onMouseUp={disableDragging}>\n            <img className='close-info-icon' src={closeIcon} onClick={toggleInfoBox} />\n            <h1>{selectedAlgo}</h1>\nSAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text SAmple text text text\n        </div >\n    )\n}\n\nexport default InfoBox\n"]},"metadata":{},"sourceType":"module"}