{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/components/Node.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Node = ({\n  size,\n  isStart,\n  isTarget,\n  selectingStart,\n  setSelectingStart\n}) => {\n  _s();\n\n  const [isStartNode, setStart] = useState(isStart);\n  let bColor = 'none';\n\n  if (isStart) {\n    bColor = 'green';\n  } else if (isTarget) {\n    bColor = 'red';\n  }\n\n  const nodeStyle = {\n    width: size,\n    height: size,\n    backgroundColor: bColor\n  };\n\n  const mouseDown = () => {\n    if (isStartNode) {\n      setSelectingStart(true);\n      return;\n    }\n\n    if (selectingStart) {\n      nodeStyle.backgroundColor = 'red';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: nodeStyle,\n    className: \"node\",\n    onMouseDown: mouseDown\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Node, \"7hlDOZKQ+AHNrDUr8xv9CyHRaQc=\");\n\n_c = Node;\nexport default Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/components/Node.js"],"names":["useState","React","Node","size","isStart","isTarget","selectingStart","setSelectingStart","isStartNode","setStart","bColor","nodeStyle","width","height","backgroundColor","mouseDown"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,cAA3B;AAA2CC,EAAAA;AAA3C,CAAD,KAAoE;AAAA;;AAC7E,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BT,QAAQ,CAACI,OAAD,CAAxC;AACA,MAAIM,MAAM,GAAG,MAAb;;AAEA,MAAIN,OAAJ,EAAa;AACTM,IAAAA,MAAM,GAAG,OAAT;AACH,GAFD,MAGK,IAAIL,QAAJ,EAAc;AACfK,IAAAA,MAAM,GAAG,KAAT;AACH;;AAED,QAAMC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAET,IADO;AAEdU,IAAAA,MAAM,EAAEV,IAFM;AAGdW,IAAAA,eAAe,EAAEJ;AAHH,GAAlB;;AAMA,QAAMK,SAAS,GAAG,MAAM;AACpB,QAAIP,WAAJ,EAAiB;AACbD,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA;AACH;;AAED,QAAID,cAAJ,EAAoB;AAChBK,MAAAA,SAAS,CAACG,eAAV,GAA4B,KAA5B;AACH;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,KAAK,EAAEH,SAAZ;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAwC,IAAA,WAAW,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA/BD;;GAAMb,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import { useState } from 'react'\nimport React from 'react'\n\nconst Node = ({ size, isStart, isTarget, selectingStart, setSelectingStart }) => {\n    const [isStartNode, setStart] = useState(isStart)\n    let bColor = 'none'\n\n    if (isStart) {\n        bColor = 'green'\n    }\n    else if (isTarget) {\n        bColor = 'red'\n    }\n\n    const nodeStyle = {\n        width: size,\n        height: size,\n        backgroundColor: bColor\n    }\n\n    const mouseDown = () => {\n        if (isStartNode) {\n            setSelectingStart(true);\n            return;\n        }\n\n        if (selectingStart) {\n            nodeStyle.backgroundColor = 'red'\n        }\n    };\n\n    return (\n        <div style={nodeStyle} className=\"node\" onMouseDown={mouseDown} />\n    )\n}\n\nexport default Node\n"]},"metadata":{},"sourceType":"module"}