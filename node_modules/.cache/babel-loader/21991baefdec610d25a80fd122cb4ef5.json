{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js\",\n    _s = $RefreshSig$();\n\nimport Visualize from './Visualize.js';\nimport CustomDropdown from './CustomDropdown.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseAlgorithm = ({\n  rows,\n  cols,\n  setGridState,\n  startCord,\n  targetCord,\n  clearForReRun,\n  runningAlgo,\n  setRunningAlgo\n}) => {\n  _s();\n\n  const [selectedAlgo, setSelectedAlgo] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `choose-algo`,\n    children: [/*#__PURE__*/_jsxDEV(CustomDropdown, {\n      setSelection: setSelectedAlgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Visualize, {\n      rows: rows,\n      cols: cols,\n      setGridState: setGridState,\n      startCord: startCord,\n      targetCord: targetCord,\n      clearForReRun: clearForReRun,\n      runningAlgo: runningAlgo,\n      setRunningAlgo: setRunningAlgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseAlgorithm, \"Bt9pxEfQT/PqlHDTghizfyWunIk=\");\n\n_c = ChooseAlgorithm;\nexport default ChooseAlgorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseAlgorithm\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js"],"names":["Visualize","CustomDropdown","useState","ChooseAlgorithm","rows","cols","setGridState","startCord","targetCord","clearForReRun","runningAlgo","setRunningAlgo","selectedAlgo","setSelectedAlgo"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA,aAAnD;AAAkEC,EAAAA,WAAlE;AAA+EC,EAAAA;AAA/E,CAAD,KAAqG;AAAA;;AACzH,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEW;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAET,IAAjB;AAAuB,MAAA,IAAI,EAAEC,IAA7B;AAAmC,MAAA,YAAY,EAAEC,YAAjD;AAA+D,MAAA,SAAS,EAAEC,SAA1E;AAAqF,MAAA,UAAU,EAAEC,UAAjG;AAA6G,MAAA,aAAa,EAAEC,aAA5H;AAA2I,MAAA,WAAW,EAAEC,WAAxJ;AAAqK,MAAA,cAAc,EAAEC;AAArL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CATD;;GAAMR,e;;KAAAA,e;AAWN,eAAeA,eAAf","sourcesContent":["import Visualize from './Visualize.js'\nimport CustomDropdown from './CustomDropdown.js'\nimport { useState } from 'react'\n\nconst ChooseAlgorithm = ({ rows, cols, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo }) => {\n    const [selectedAlgo, setSelectedAlgo] = useState('');\n\n    return (\n        <div className={`choose-algo`}>\n            <CustomDropdown setSelection={setSelectedAlgo} />\n            <Visualize rows={rows} cols={cols} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearForReRun={clearForReRun} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} />\n        </div >\n    )\n}\n\nexport default ChooseAlgorithm\n"]},"metadata":{},"sourceType":"module"}