{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Visualize from'./Visualize.js';import CustomDropdown from'./CustomDropdown.js';import{useState}from'react';import{getPathAlgos}from'../utils/util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChooseAlgorithm=function ChooseAlgorithm(_ref){var rows=_ref.rows,cols=_ref.cols,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,clearForReRun=_ref.clearForReRun,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo;var _useState=useState(getPathAlgos()[0]),_useState2=_slicedToArray(_useState,2),selectedAlgo=_useState2[0],setSelectedAlgo=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"choose-algo\",children:[/*#__PURE__*/_jsx(CustomDropdown,{setSelection:setSelectedAlgo,items:getPathAlgos()}),/*#__PURE__*/_jsx(Visualize,{rows:rows,cols:cols,selectedAlgo:selectedAlgo,setGridState:setGridState,startCord:startCord,targetCord:targetCord,clearForReRun:clearForReRun,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo})]});};export default ChooseAlgorithm;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js"],"names":["Visualize","CustomDropdown","useState","getPathAlgos","ChooseAlgorithm","rows","cols","setGridState","startCord","targetCord","clearForReRun","runningAlgo","setRunningAlgo","selectedAlgo","setSelectedAlgo"],"mappings":"6LAAA,MAAOA,CAAAA,SAAP,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,YAAT,KAA6B,kBAA7B,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAqG,IAAlGC,CAAAA,IAAkG,MAAlGA,IAAkG,CAA5FC,IAA4F,MAA5FA,IAA4F,CAAtFC,YAAsF,MAAtFA,YAAsF,CAAxEC,SAAwE,MAAxEA,SAAwE,CAA7DC,UAA6D,MAA7DA,UAA6D,CAAjDC,aAAiD,MAAjDA,aAAiD,CAAlCC,WAAkC,MAAlCA,WAAkC,CAArBC,cAAqB,MAArBA,cAAqB,eACjFV,QAAQ,CAACC,YAAY,GAAG,CAAH,CAAb,CADyE,wCAClHU,YADkH,eACpGC,eADoG,eAGzH,mBACI,aAAK,SAAS,cAAd,wBACI,KAAC,cAAD,EAAgB,YAAY,CAAEA,eAA9B,CAA+C,KAAK,CAAEX,YAAY,EAAlE,EADJ,cAEI,KAAC,SAAD,EAAW,IAAI,CAAEE,IAAjB,CAAuB,IAAI,CAAEC,IAA7B,CAAmC,YAAY,CAAEO,YAAjD,CAA+D,YAAY,CAAEN,YAA7E,CAA2F,SAAS,CAAEC,SAAtG,CAAiH,UAAU,CAAEC,UAA7H,CAAyI,aAAa,CAAEC,aAAxJ,CAAuK,WAAW,CAAEC,WAApL,CAAiM,cAAc,CAAEC,cAAjN,EAFJ,GADJ,CAMH,CATD,CAWA,cAAeR,CAAAA,eAAf","sourcesContent":["import Visualize from './Visualize.js'\nimport CustomDropdown from './CustomDropdown.js'\nimport { useState } from 'react'\nimport { getPathAlgos } from '../utils/util.js'\n\nconst ChooseAlgorithm = ({ rows, cols, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo }) => {\n    const [selectedAlgo, setSelectedAlgo] = useState(getPathAlgos()[0]);\n\n    return (\n        <div className={`choose-algo`}>\n            <CustomDropdown setSelection={setSelectedAlgo} items={getPathAlgos()} />\n            <Visualize rows={rows} cols={cols} selectedAlgo={selectedAlgo} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearForReRun={clearForReRun} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} />\n        </div >\n    )\n}\n\nexport default ChooseAlgorithm\n"]},"metadata":{},"sourceType":"module"}