{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{getPathAlgos,isAlgoUnweighted,isAlgoOptimal}from'../utils/util.js';import downArrow from\"../images/down_arrow.svg\";import weight from\"../images/weight.svg\";import weightUnfilled from\"../images/weight_unfilled.svg\";import optimal from\"../images/optimal.svg\";import optimalUnfilled from\"../images/optimal_unfilled.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomDropdown=function CustomDropdown(_ref){var setSelection=_ref.setSelection,items=_ref.items,disabled=_ref.disabled,dropDownWidth=_ref.dropDownWidth;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropDownOpen=_useState2[0],setDropDownOpen=_useState2[1];var _useState3=useState(items[0]),_useState4=_slicedToArray(_useState3,2),selectedVal=_useState4[0],setSelectedVal=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedId=_useState6[0],setSelectedId=_useState6[1];var isAlgoSelector=getPathAlgos()===items;useEffect(function(){if(disabled){setSelectedVal(items[0]);setSelectedId(0);setDropDownOpen(false);setSelection(items[0]);}},[disabled]);var toggle=function toggle(){setDropDownOpen(function(prevState){return!prevState;});};var madeSelection=function madeSelection(id){setDropDownOpen(function(prevState){return!prevState;});setSelectedVal(items[id]);setSelectedId(id);setSelection(items[id]);};var style={width:dropDownWidth};var dropdownItems=[];var _loop=function _loop(i){dropdownItems.push(/*#__PURE__*/_jsxs(\"div\",{style:style,className:\"dropdown-list-item \".concat(i===selectedId&&'selected',\" \").concat(i===items.length-1&&'last'),onClick:function onClick(){madeSelection(i);},children:[items[i],isAlgoSelector&&!isAlgoUnweighted(items[i])?/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:weight,title:\"\".concat(items[i],\" is a weighted path-finding algorithm.\")}):/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:weightUnfilled,title:\"\".concat(items[i],\" is not a weighted path-finding algorithm.\")}),isAlgoSelector&&isAlgoOptimal(items[i])?/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:optimal,title:\"\".concat(items[i],\" guarantees shortest path.\")}):/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:optimalUnfilled,title:\"\".concat(items[i],\" does not guarantee shortest path.\")})]},i));};for(var i=0;i<items.length;i++){_loop(i);}return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/_jsxs(\"div\",{style:style,className:\"dropdown-header \".concat(dropDownOpen&&'open',\" \").concat(disabled&&'disabled'),onClick:disabled?null:toggle,children:[selectedVal,!disabled&&/*#__PURE__*/_jsx(\"img\",{className:\"down-arrow\",src:downArrow})]}),dropDownOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-list\",children:dropdownItems})]});};export default CustomDropdown;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js"],"names":["useState","useEffect","getPathAlgos","isAlgoUnweighted","isAlgoOptimal","CustomDropdown","setSelection","items","disabled","dropDownWidth","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","selectedId","setSelectedId","isAlgoSelector","toggle","prevState","madeSelection","id","style","width","dropdownItems","i","push","length","weight","weightUnfilled","optimal","optimalUnfilled","downArrow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { getPathAlgos, isAlgoUnweighted, isAlgoOptimal } from '../utils/util.js'\nimport downArrow from '../images/down_arrow.svg';\nimport weight from '../images/weight.svg'\nimport weightUnfilled from '../images/weight_unfilled.svg'\nimport optimal from '../images/optimal.svg'\nimport optimalUnfilled from '../images/optimal_unfilled.svg'\n\nconst CustomDropdown = ({ setSelection, items, disabled, dropDownWidth }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n    const [selectedId, setSelectedId] = useState(0);\n    const isAlgoSelector = (getPathAlgos() === items);\n\n    useEffect(() => {\n        if (disabled) {\n            setSelectedVal(items[0]);\n            setSelectedId(0);\n            setDropDownOpen(false);\n            setSelection(items[0]);\n        }\n    }, [disabled])\n\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (id) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(items[id]);\n        setSelectedId(id);\n        setSelection(items[id]);\n    };\n\n    const style = {\n        width: dropDownWidth\n    }\n\n    const dropdownItems = [];\n    for (let i = 0; i < items.length; i++) {\n        dropdownItems.push(<div style={style} className={`dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`} onClick={() => { madeSelection(i) }} key={i}>\n            {items[i]}\n            {isAlgoSelector && !isAlgoUnweighted(items[i]) ? <img className=\"algo-property-badge\" src={weight} title={`${items[i]} is a weighted path-finding algorithm.`}></img> : <img className=\"algo-property-badge\" src={weightUnfilled} title={`${items[i]} is not a weighted path-finding algorithm.`}></img>}\n            {isAlgoSelector && isAlgoOptimal(items[i]) ? <img className=\"algo-property-badge\" src={optimal} title={`${items[i]} guarantees shortest path.`}></img> : <img className=\"algo-property-badge\" src={optimalUnfilled} title={`${items[i]} does not guarantee shortest path.`}></img>}\n        </div>)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div style={style} className={`dropdown-header ${dropDownOpen && 'open'} ${disabled && 'disabled'}`} onClick={disabled ? null : toggle}>\n                {selectedVal}\n                {!disabled && <img className=\"down-arrow\" src={downArrow}></img>}\n            </div>\n            {dropDownOpen &&\n                <div className='dropdown-list'>\n                    {dropdownItems}\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default CustomDropdown\n"]},"metadata":{},"sourceType":"module"}