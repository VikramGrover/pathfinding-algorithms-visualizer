{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import closeIcon from\"../images/close.svg\";import{pathfindingAlgoInfo}from'../utils/constants.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoBox=function InfoBox(_ref){var infoBoxOpen=_ref.infoBoxOpen,toggleInfoBox=_ref.toggleInfoBox,selectedAlgo=_ref.selectedAlgo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dragging=_useState2[0],setDragging=_useState2[1];var _useState3=useState([0,0]),_useState4=_slicedToArray(_useState3,2),prevMouseCord=_useState4[0],setPrevMouseCord=_useState4[1];var _useState5=useState([300,0]),_useState6=_slicedToArray(_useState5,2),boxCord=_useState6[0],setBoxCord=_useState6[1];var boxStyle={left:boxCord[0],top:boxCord[1]};var enableDragging=function enableDragging(e){setDragging(true);setPrevMouseCord([e.clientX,e.clientY]);};var beingDragged=function beingDragged(e){if(dragging){var xDiff=e.clientX-prevMouseCord[0];var yDiff=e.clientY-prevMouseCord[1];setBoxCord(function(prevState){return[prevState[0]+xDiff,prevState[1]+yDiff];});setPrevMouseCord([e.clientX,e.clientY]);}};var disableDragging=function disableDragging(e){setDragging(false);console.log(\"dragging enabled\");};return/*#__PURE__*/_jsxs(\"div\",{style:boxStyle,className:\"info-box \".concat(infoBoxOpen?'visible':'hidden'),onMouseMove:beingDragged,onMouseUp:disableDragging,children:[/*#__PURE__*/_jsx(\"img\",{className:\"close-info-icon\",src:closeIcon,onClick:toggleInfoBox}),/*#__PURE__*/_jsx(\"h1\",{onMouseDown:enableDragging,children:selectedAlgo}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].description||/*#__PURE__*/_jsx(\"p\",{children:\"No information.\"}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].optimality]});};export default InfoBox;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/InfoBox.js"],"names":["useState","pathfindingAlgoInfo","InfoBox","infoBoxOpen","toggleInfoBox","selectedAlgo","dragging","setDragging","prevMouseCord","setPrevMouseCord","boxCord","setBoxCord","boxStyle","left","top","enableDragging","e","clientX","clientY","beingDragged","xDiff","yDiff","prevState","disableDragging","console","log","closeIcon","description","optimality"],"mappings":"6LAAA,OAASA,QAAT,KAAyB,OAAzB,C,2CAEA,OAASC,mBAAT,KAAoC,uBAApC,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAkD,IAA/CC,CAAAA,WAA+C,MAA/CA,WAA+C,CAAlCC,aAAkC,MAAlCA,aAAkC,CAAnBC,YAAmB,MAAnBA,YAAmB,eAC9BL,QAAQ,CAAC,KAAD,CADsB,wCACvDM,QADuD,eAC7CC,WAD6C,8BAEpBP,QAAQ,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAD,CAFY,yCAEvDQ,aAFuD,eAExCC,gBAFwC,8BAGhCT,QAAQ,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAHwB,yCAGvDU,OAHuD,eAG9CC,UAH8C,eAK9D,GAAMC,CAAAA,QAAQ,CAAG,CACbC,IAAI,CAAEH,OAAO,CAAC,CAAD,CADA,CAEbI,GAAG,CAAEJ,OAAO,CAAC,CAAD,CAFC,CAAjB,CAKA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC1BT,WAAW,CAAC,IAAD,CAAX,CACAE,gBAAgB,CAAC,CAACO,CAAC,CAACC,OAAH,CAAYD,CAAC,CAACE,OAAd,CAAD,CAAhB,CACH,CAHD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAO,CACxB,GAAIV,QAAJ,CAAc,CACV,GAAMc,CAAAA,KAAK,CAAGJ,CAAC,CAACC,OAAF,CAAYT,aAAa,CAAC,CAAD,CAAvC,CACA,GAAMa,CAAAA,KAAK,CAAGL,CAAC,CAACE,OAAF,CAAYV,aAAa,CAAC,CAAD,CAAvC,CAEAG,UAAU,CAAC,SAAAW,SAAS,QAAI,CAACA,SAAS,CAAC,CAAD,CAAT,CAAeF,KAAhB,CAAuBE,SAAS,CAAC,CAAD,CAAT,CAAeD,KAAtC,CAAJ,EAAV,CAAV,CACAZ,gBAAgB,CAAC,CAACO,CAAC,CAACC,OAAH,CAAYD,CAAC,CAACE,OAAd,CAAD,CAAhB,CACH,CACJ,CARD,CAUA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACP,CAAD,CAAO,CAC3BT,WAAW,CAAC,KAAD,CAAX,CACAiB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CAHD,CAKA,mBACI,aAAK,KAAK,CAAEb,QAAZ,CAAsB,SAAS,oBAAcT,WAAW,CAAG,SAAH,CAAe,QAAxC,CAA/B,CAAmF,WAAW,CAAEgB,YAAhG,CAA8G,SAAS,CAAEI,eAAzH,wBACI,YAAK,SAAS,CAAC,iBAAf,CAAiC,GAAG,CAAEG,SAAtC,CAAiD,OAAO,CAAEtB,aAA1D,EADJ,cAEI,WAAI,WAAW,CAAEW,cAAjB,UAAmCV,YAAnC,EAFJ,CAGMJ,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCsB,WAAxE,eAAwF,sCAH7F,CAIM1B,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCuB,UAJ7E,GADJ,CAQH,CAtCD,CAwCA,cAAe1B,CAAAA,OAAf","sourcesContent":["import { useState } from 'react'\nimport closeIcon from '../images/close.svg'\nimport { pathfindingAlgoInfo } from '../utils/constants.js'\n\nconst InfoBox = ({ infoBoxOpen, toggleInfoBox, selectedAlgo }) => {\n    const [dragging, setDragging] = useState(false);\n    const [prevMouseCord, setPrevMouseCord] = useState([0, 0]);\n    const [boxCord, setBoxCord] = useState([300, 0]);\n\n    const boxStyle = {\n        left: boxCord[0],\n        top: boxCord[1]\n    }\n\n    const enableDragging = (e) => {\n        setDragging(true);\n        setPrevMouseCord([e.clientX, e.clientY]);\n    };\n\n    const beingDragged = (e) => {\n        if (dragging) {\n            const xDiff = e.clientX - prevMouseCord[0];\n            const yDiff = e.clientY - prevMouseCord[1];\n\n            setBoxCord(prevState => [prevState[0] + xDiff, prevState[1] + yDiff]);\n            setPrevMouseCord([e.clientX, e.clientY]);\n        }\n    };\n\n    const disableDragging = (e) => {\n        setDragging(false);\n        console.log(\"dragging enabled\");\n    };\n\n    return (\n        <div style={boxStyle} className={`info-box ${infoBoxOpen ? 'visible' : 'hidden'}`} onMouseMove={beingDragged} onMouseUp={disableDragging}>\n            <img className='close-info-icon' src={closeIcon} onClick={toggleInfoBox} />\n            <h1 onMouseDown={enableDragging} >{selectedAlgo}</h1>\n            {(pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].description) || <p>No information.</p>}\n            {(pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].optimality)}\n        </div >\n    )\n}\n\nexport default InfoBox\n"]},"metadata":{},"sourceType":"module"}