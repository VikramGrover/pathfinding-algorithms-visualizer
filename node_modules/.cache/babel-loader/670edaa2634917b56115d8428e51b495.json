{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport downArrow from \"../images/down_arrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomDropdown = ({\n  setSelection,\n  items,\n  disabled\n}) => {\n  _s();\n\n  const [dropDownOpen, setDropDownOpen] = useState(false);\n  const [selectedVal, setSelectedVal] = useState(items[0]);\n  const [selectedId, setSelectedId] = useState(0);\n  useEffect(() => {\n    console.log(\"EFFECT CHANGED\");\n  }, [disabled]);\n\n  const toggle = () => {\n    setDropDownOpen(prevState => !prevState);\n  };\n\n  const madeSelection = id => {\n    setDropDownOpen(prevState => !prevState);\n    setSelectedVal(items[id]);\n    setSelectedId(id);\n    setSelection(items[id]);\n  };\n\n  const dropdownItems = [];\n\n  for (let i = 0; i < items.length; i++) {\n    dropdownItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`,\n      onClick: () => {\n        madeSelection(i);\n      },\n      children: items[i]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-header ${dropDownOpen && !disabled && 'open'} ${disabled && 'disabled'}`,\n      onClick: disabled ? null : toggle,\n      children: [disabled ? items[0] : selectedVal, !disabled && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"down-arrow\",\n        src: downArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), dropDownOpen && !disabled && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-list\",\n      children: dropdownItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomDropdown, \"mZjW6nGYZ0s16q3knITHUccviNE=\");\n\n_c = CustomDropdown;\nexport default CustomDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js"],"names":["useState","useEffect","CustomDropdown","setSelection","items","disabled","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","selectedId","setSelectedId","console","log","toggle","prevState","madeSelection","id","dropdownItems","i","length","push","downArrow"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AAAA;;AAC1D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAFQ,EAEN,CAACR,QAAD,CAFM,CAAT;;AAIA,QAAMS,MAAM,GAAG,MAAM;AACjBP,IAAAA,eAAe,CAACQ,SAAS,IAAI,CAACA,SAAf,CAAf;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC1BV,IAAAA,eAAe,CAACQ,SAAS,IAAI,CAACA,SAAf,CAAf;AACAN,IAAAA,cAAc,CAACL,KAAK,CAACa,EAAD,CAAN,CAAd;AACAN,IAAAA,aAAa,CAACM,EAAD,CAAb;AACAd,IAAAA,YAAY,CAACC,KAAK,CAACa,EAAD,CAAN,CAAZ;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,CAACgB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,IAAAA,aAAa,CAACG,IAAd,eAAmB;AAAK,MAAA,SAAS,EAAG,sBAAqBF,CAAC,KAAKT,UAAN,IAAoB,UAAW,IAAGS,CAAC,KAAKf,KAAK,CAACgB,MAAN,GAAe,CAArB,IAA0B,MAAO,EAAzG;AAA4G,MAAA,OAAO,EAAE,MAAM;AAAEJ,QAAAA,aAAa,CAACG,CAAD,CAAb;AAAkB,OAA/I;AAAA,gBACdf,KAAK,CAACe,CAAD;AADS,OAAsJA,CAAtJ;AAAA;AAAA;AAAA;AAAA,YAAnB;AAGH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,mBAAkBb,YAAY,IAAI,CAACD,QAAjB,IAA6B,MAAO,IAAGA,QAAQ,IAAI,UAAW,EAAjG;AAAoG,MAAA,OAAO,EAAEA,QAAQ,GAAG,IAAH,GAAUS,MAA/H;AAAA,iBACKT,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAAR,GAAcI,WAD3B,EAEK,CAACH,QAAD,iBAAa;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEiB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKhB,YAAY,IAAI,CAACD,QAAjB,iBACG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKa;AADL;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAxCD;;GAAMhB,c;;KAAAA,c;AA0CN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport downArrow from '../images/down_arrow.svg';\n\nconst CustomDropdown = ({ setSelection, items, disabled }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    useEffect(() => {\n        console.log(\"EFFECT CHANGED\");\n    }, [disabled])\n\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (id) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(items[id]);\n        setSelectedId(id);\n        setSelection(items[id]);\n    };\n\n    const dropdownItems = [];\n    for (let i = 0; i < items.length; i++) {\n        dropdownItems.push(<div className={`dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`} onClick={() => { madeSelection(i) }} key={i}>\n            {items[i]}\n        </div>)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div className={`dropdown-header ${dropDownOpen && !disabled && 'open'} ${disabled && 'disabled'}`} onClick={disabled ? null : toggle}>\n                {disabled ? items[0] : selectedVal}\n                {!disabled && <img className=\"down-arrow\" src={downArrow}></img>}\n            </div>\n            {dropDownOpen && !disabled &&\n                <div className='dropdown-list'>\n                    {dropdownItems}\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default CustomDropdown\n"]},"metadata":{},"sourceType":"module"}