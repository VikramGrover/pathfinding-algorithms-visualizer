{"ast":null,"code":"import _defineProperty from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _nodeColorClass,_nodeWeight;var nodeTypeEnum={'none':0,'target':1,'path':2,'start':3,'remObstacle':4,'visited':5,'obstacle':6};Object.freeze(nodeTypeEnum);var nodeColorClass=(_nodeColorClass={},_defineProperty(_nodeColorClass,nodeTypeEnum.none,'empty'),_defineProperty(_nodeColorClass,nodeTypeEnum.target,'target'),_defineProperty(_nodeColorClass,nodeTypeEnum.obstacle,'obstacle'),_defineProperty(_nodeColorClass,nodeTypeEnum.start,'start'),_defineProperty(_nodeColorClass,nodeTypeEnum.visited,'visited'),_defineProperty(_nodeColorClass,nodeTypeEnum.path,'path'),_nodeColorClass);Object.freeze(nodeColorClass);var nodeWeight=(_nodeWeight={},_defineProperty(_nodeWeight,nodeTypeEnum.none,1),_defineProperty(_nodeWeight,nodeTypeEnum.target,1),_defineProperty(_nodeWeight,nodeTypeEnum.obstacle,Infinity),_defineProperty(_nodeWeight,nodeTypeEnum.start,1),_nodeWeight);Object.freeze(nodeWeight);var pathAlgos=[\"Dijkstra's\",\"A-Star\",\"BFS\",\"DFS\"];var terrainAlgos=[\"Algo 1\",\"Algo 2\"];var obstacleTypes=['Wall (∞)','Weighted (100)','Weighted (80)','Weighted (60)','Weighted (40)','Weighted (20)'];export var getNodeTypeEnum=function getNodeTypeEnum(key){return nodeTypeEnum[key];};export var getNodeColorClass=function getNodeColorClass(key){return nodeColorClass[key];};export var getNodeWeight=function getNodeWeight(key){return nodeWeight[key];};export var shuffleArray=function shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}};export var getPathAlgos=function getPathAlgos(){return pathAlgos;};export var getTerrainAlgos=function getTerrainAlgos(){return terrainAlgos;};export var getObstacleTypes=function getObstacleTypes(){return obstacleTypes;};","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/utils/util.js"],"names":["nodeTypeEnum","Object","freeze","nodeColorClass","none","target","obstacle","start","visited","path","nodeWeight","Infinity","pathAlgos","terrainAlgos","obstacleTypes","getNodeTypeEnum","key","getNodeColorClass","getNodeWeight","shuffleArray","array","i","length","j","Math","floor","random","temp","getPathAlgos","getTerrainAlgos","getObstacleTypes"],"mappings":"+NAAA,GAAMA,CAAAA,YAAY,CAAG,CACjB,OAAQ,CADS,CAEjB,SAAU,CAFO,CAGjB,OAAQ,CAHS,CAIjB,QAAS,CAJQ,CAKjB,cAAe,CALE,CAMjB,UAAW,CANM,CAOjB,WAAY,CAPK,CAArB,CASAC,MAAM,CAACC,MAAP,CAAcF,YAAd,EAEA,GAAMG,CAAAA,cAAc,qDACfH,YAAY,CAACI,IADE,CACK,OADL,kCAEfJ,YAAY,CAACK,MAFE,CAEO,QAFP,kCAGfL,YAAY,CAACM,QAHE,CAGS,UAHT,kCAIfN,YAAY,CAACO,KAJE,CAIM,OAJN,kCAKfP,YAAY,CAACQ,OALE,CAKQ,SALR,kCAMfR,YAAY,CAACS,IANE,CAMK,MANL,kBAApB,CAQAR,MAAM,CAACC,MAAP,CAAcC,cAAd,EAEA,GAAMO,CAAAA,UAAU,6CACXV,YAAY,CAACI,IADF,CACS,CADT,8BAEXJ,YAAY,CAACK,MAFF,CAEW,CAFX,8BAGXL,YAAY,CAACM,QAHF,CAGaK,QAHb,8BAIXX,YAAY,CAACO,KAJF,CAIU,CAJV,cAAhB,CAMAN,MAAM,CAACC,MAAP,CAAcQ,UAAd,EAEA,GAAME,CAAAA,SAAS,CAAG,CAAC,YAAD,CAAe,QAAf,CAAyB,KAAzB,CAAgC,KAAhC,CAAlB,CACA,GAAMC,CAAAA,YAAY,CAAG,CAAC,QAAD,CAAW,QAAX,CAArB,CACA,GAAMC,CAAAA,aAAa,CAAG,CAAC,UAAD,CAAa,gBAAb,CAA+B,eAA/B,CAAgD,eAAhD,CAAiE,eAAjE,CAAkF,eAAlF,CAAtB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CACpC,MAAOhB,CAAAA,YAAY,CAACgB,GAAD,CAAnB,CACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACD,GAAD,CAAS,CACtC,MAAOb,CAAAA,cAAc,CAACa,GAAD,CAArB,CACH,CAFM,CAIP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,GAAD,CAAS,CAClC,MAAON,CAAAA,UAAU,CAACM,GAAD,CAAjB,CACH,CAFM,CAIP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACnC,IAAK,GAAIC,CAAAA,CAAC,CAAGD,KAAK,CAACE,MAAN,CAAe,CAA5B,CAA+BD,CAAC,CAAG,CAAnC,CAAsCA,CAAC,EAAvC,CAA2C,CACvC,GAAIE,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBL,CAAC,CAAG,CAArB,CAAX,CAAR,CACA,GAAIM,CAAAA,IAAI,CAAGP,KAAK,CAACC,CAAD,CAAhB,CACAD,KAAK,CAACC,CAAD,CAAL,CAAWD,KAAK,CAACG,CAAD,CAAhB,CACAH,KAAK,CAACG,CAAD,CAAL,CAAWI,IAAX,CACH,CACJ,CAPM,CASP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAC9B,MAAOhB,CAAAA,SAAP,CACH,CAFM,CAIP,MAAO,IAAMiB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAOhB,CAAAA,YAAP,CACH,CAFM,CAIP,MAAO,IAAMiB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAClC,MAAOhB,CAAAA,aAAP,CACH,CAFM","sourcesContent":["const nodeTypeEnum = {\n    'none': 0,\n    'target': 1,\n    'path': 2,\n    'start': 3,\n    'remObstacle': 4,\n    'visited': 5,\n    'obstacle': 6\n};\nObject.freeze(nodeTypeEnum);\n\nconst nodeColorClass = {\n    [nodeTypeEnum.none]: 'empty',\n    [nodeTypeEnum.target]: 'target',\n    [nodeTypeEnum.obstacle]: 'obstacle',\n    [nodeTypeEnum.start]: 'start',\n    [nodeTypeEnum.visited]: 'visited',\n    [nodeTypeEnum.path]: 'path'\n}\nObject.freeze(nodeColorClass);\n\nconst nodeWeight = {\n    [nodeTypeEnum.none]: 1,\n    [nodeTypeEnum.target]: 1,\n    [nodeTypeEnum.obstacle]: Infinity,\n    [nodeTypeEnum.start]: 1\n}\nObject.freeze(nodeWeight);\n\nconst pathAlgos = [\"Dijkstra's\", \"A-Star\", \"BFS\", \"DFS\"];\nconst terrainAlgos = [\"Algo 1\", \"Algo 2\"];\nconst obstacleTypes = ['Wall (∞)', 'Weighted (100)', 'Weighted (80)', 'Weighted (60)', 'Weighted (40)', 'Weighted (20)'];\n\nexport const getNodeTypeEnum = (key) => {\n    return nodeTypeEnum[key];\n};\n\nexport const getNodeColorClass = (key) => {\n    return nodeColorClass[key];\n};\n\nexport const getNodeWeight = (key) => {\n    return nodeWeight[key];\n};\n\nexport const shuffleArray = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n};\n\nexport const getPathAlgos = () => {\n    return pathAlgos;\n};\n\nexport const getTerrainAlgos = () => {\n    return terrainAlgos;\n};\n\nexport const getObstacleTypes = () => {\n    return obstacleTypes;\n}\n"]},"metadata":{},"sourceType":"module"}