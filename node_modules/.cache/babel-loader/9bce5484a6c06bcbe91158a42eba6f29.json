{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{isAlgoUnweighted,isAlgoOptimal}from'../utils/helper.js';import{nodeColors,nodeTypeEnum,obsEnum}from'../utils/constants.js';import downArrow from\"../images/down_arrow.svg\";import weight from\"../images/weight.svg\";import weightUnfilled from\"../images/weight_unfilled.svg\";import optimal from\"../images/optimal.svg\";import optimalUnfilled from\"../images/optimal_unfilled.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomDropdown=function CustomDropdown(_ref){var setSelection=_ref.setSelection,items=_ref.items,disabled=_ref.disabled,dropDownWidth=_ref.dropDownWidth,isAlgoSelector=_ref.isAlgoSelector,isObstacleSelector=_ref.isObstacleSelector;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropDownOpen=_useState2[0],setDropDownOpen=_useState2[1];var _useState3=useState(items[0]),_useState4=_slicedToArray(_useState3,2),selectedVal=_useState4[0],setSelectedVal=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedId=_useState6[0],setSelectedId=_useState6[1];useEffect(function(){if(disabled){setSelectedVal(items[0]);setSelectedId(0);setDropDownOpen(false);setSelection(items[0]);}},[disabled]);var toggle=function toggle(){setDropDownOpen(function(prevState){return!prevState;});};var madeSelection=function madeSelection(id){setDropDownOpen(function(prevState){return!prevState;});setSelectedVal(items[id]);setSelectedId(id);setSelection(items[id]);};var style={width:dropDownWidth};var dropdownItems=[];var _loop=function _loop(i){dropdownItems.push(/*#__PURE__*/_jsxs(\"div\",{style:style,className:\"dropdown-list-item \".concat(i===selectedId&&'selected',\" \").concat(i===items.length-1&&'last'),onClick:function onClick(){madeSelection(i);},children:[items[i],isAlgoSelector&&(!isAlgoUnweighted(items[i])?/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:weight,title:\"\".concat(items[i],\" is a weighted path-finding algorithm.\"),alt:\"\".concat(items[i],\" is a weighted path-finding algorithm.\")}):/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:weightUnfilled,title:\"\".concat(items[i],\" is not a weighted path-finding algorithm.\"),alt:\"\".concat(items[i],\" is not a weighted path-finding algorithm.\")})),isAlgoSelector&&(isAlgoOptimal(items[i])?/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:optimal,title:\"\".concat(items[i],\" guarantees shortest path.\"),alt:\"\".concat(items[i],\" guarantees shortest path.\")}):/*#__PURE__*/_jsx(\"img\",{className:\"algo-property-badge\",src:optimalUnfilled,title:\"\".concat(items[i],\" does not guarantee shortest path.\"),alt:\"\".concat(items[i],\" does not guarantee shortest path.\")})),isObstacleSelector&&/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:nodeColors[nodeTypeEnum[obsEnum[items[i]]]]},className:\"obstacle-preview\",children:\" \"})]},i));};for(var i=0;i<items.length;i++){_loop(i);}return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/_jsxs(\"div\",{style:style,className:\"dropdown-header \".concat(dropDownOpen&&'open',\" \").concat(disabled&&'disabled'),onClick:disabled?null:toggle,children:[selectedVal,!disabled&&/*#__PURE__*/_jsx(\"img\",{className:\"down-arrow\",src:downArrow,alt:\"\"})]}),dropDownOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-list\",children:dropdownItems})]});};export default CustomDropdown;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js"],"names":["useState","useEffect","isAlgoUnweighted","isAlgoOptimal","nodeColors","nodeTypeEnum","obsEnum","CustomDropdown","setSelection","items","disabled","dropDownWidth","isAlgoSelector","isObstacleSelector","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","selectedId","setSelectedId","toggle","prevState","madeSelection","id","style","width","dropdownItems","i","push","length","weight","weightUnfilled","optimal","optimalUnfilled","backgroundColor","downArrow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { isAlgoUnweighted, isAlgoOptimal } from '../utils/helper.js'\nimport { nodeColors, nodeTypeEnum, obsEnum } from '../utils/constants.js'\nimport downArrow from '../images/down_arrow.svg';\nimport weight from '../images/weight.svg'\nimport weightUnfilled from '../images/weight_unfilled.svg'\nimport optimal from '../images/optimal.svg'\nimport optimalUnfilled from '../images/optimal_unfilled.svg'\n\nconst CustomDropdown = ({ setSelection, items, disabled, dropDownWidth, isAlgoSelector, isObstacleSelector }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    useEffect(() => {\n        if (disabled) {\n            setSelectedVal(items[0]);\n            setSelectedId(0);\n            setDropDownOpen(false);\n            setSelection(items[0]);\n        }\n    }, [disabled])\n\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (id) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(items[id]);\n        setSelectedId(id);\n        setSelection(items[id]);\n    };\n\n    const style = {\n        width: dropDownWidth\n    }\n\n    const dropdownItems = [];\n    for (let i = 0; i < items.length; i++) {\n        dropdownItems.push(<div style={style} className={`dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`} onClick={() => { madeSelection(i) }} key={i}>\n            {items[i]}\n            {isAlgoSelector && (!isAlgoUnweighted(items[i]) ? <img className=\"algo-property-badge\" src={weight} title={`${items[i]} is a weighted path-finding algorithm.`} alt={`${items[i]} is a weighted path-finding algorithm.`}></img> : <img className=\"algo-property-badge\" src={weightUnfilled} title={`${items[i]} is not a weighted path-finding algorithm.`} alt={`${items[i]} is not a weighted path-finding algorithm.`}></img>)}\n            {isAlgoSelector && (isAlgoOptimal(items[i]) ? <img className=\"algo-property-badge\" src={optimal} title={`${items[i]} guarantees shortest path.`} alt={`${items[i]} guarantees shortest path.`}></img> : <img className=\"algo-property-badge\" src={optimalUnfilled} title={`${items[i]} does not guarantee shortest path.`} alt={`${items[i]} does not guarantee shortest path.`}></img>)}\n            {isObstacleSelector && <div style={{ backgroundColor: nodeColors[nodeTypeEnum[obsEnum[items[i]]]] }} className=\"obstacle-preview\"> </div>}\n        </div >)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div style={style} className={`dropdown-header ${dropDownOpen && 'open'} ${disabled && 'disabled'}`} onClick={disabled ? null : toggle}>\n                {selectedVal}\n                {!disabled && <img className=\"down-arrow\" src={downArrow} alt=\"\"></img>}\n            </div>\n            {dropDownOpen &&\n                <div className='dropdown-list'>\n                    {dropdownItems}\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default CustomDropdown\n"]},"metadata":{},"sourceType":"module"}