{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import downArrow from\"../images/down_arrow.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomDropdown=function CustomDropdown(_ref){var setSelection=_ref.setSelection,items=_ref.items;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropDownOpen=_useState2[0],setDropDownOpen=_useState2[1];var _useState3=useState(items[0]),_useState4=_slicedToArray(_useState3,2),selectedVal=_useState4[0],setSelectedVal=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedId=_useState6[0],setSelectedId=_useState6[1];var toggle=function toggle(){setDropDownOpen(function(prevState){return!prevState;});};var madeSelection=function madeSelection(id){setDropDownOpen(function(prevState){return!prevState;});setSelectedVal(items[id]);setSelectedId(id);setSelection(items[id]);};var dropdownItems=[];var _loop=function _loop(i){dropdownItems.push(/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-list-item \".concat(i===selectedId&&'selected',\" \").concat(i===items.length-1&&'last'),onClick:function onClick(){madeSelection(i);},children:items[i]},i));};for(var i=0;i<items.length;i++){_loop(i);}return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-header \".concat(dropDownOpen&&'open'),onClick:toggle,children:[selectedVal,/*#__PURE__*/_jsx(\"img\",{className:\"down-arrow\",src:downArrow})]}),dropDownOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-list\",children:dropdownItems})]});};export default CustomDropdown;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js"],"names":["useState","CustomDropdown","setSelection","items","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","selectedId","setSelectedId","toggle","prevState","madeSelection","id","dropdownItems","i","push","length","downArrow"],"mappings":"6LAAA,OAASA,QAAT,KAAyB,OAAzB,C,wIAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA6B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAZC,KAAY,MAAZA,KAAY,eACRH,QAAQ,CAAC,KAAD,CADA,wCACzCI,YADyC,eAC3BC,eAD2B,8BAEVL,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAFE,yCAEzCG,WAFyC,eAE5BC,cAF4B,8BAGZP,QAAQ,CAAC,CAAD,CAHI,yCAGzCQ,UAHyC,eAG7BC,aAH6B,eAIhD,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBL,eAAe,CAAC,SAAAM,SAAS,QAAI,CAACA,SAAL,EAAV,CAAf,CACH,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,CAAQ,CAC1BR,eAAe,CAAC,SAAAM,SAAS,QAAI,CAACA,SAAL,EAAV,CAAf,CACAJ,cAAc,CAACJ,KAAK,CAACU,EAAD,CAAN,CAAd,CACAJ,aAAa,CAACI,EAAD,CAAb,CACAX,YAAY,CAACC,KAAK,CAACU,EAAD,CAAN,CAAZ,CACH,CALD,CAOA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAfgD,yBAgBvCC,CAhBuC,EAiB5CD,aAAa,CAACE,IAAd,cAAmB,YAAK,SAAS,8BAAwBD,CAAC,GAAKP,UAAN,EAAoB,UAA5C,aAA0DO,CAAC,GAAKZ,KAAK,CAACc,MAAN,CAAe,CAArB,EAA0B,MAApF,CAAd,CAA4G,OAAO,CAAE,kBAAM,CAAEL,aAAa,CAACG,CAAD,CAAb,CAAkB,CAA/I,UACdZ,KAAK,CAACY,CAAD,CADS,EAAsJA,CAAtJ,CAAnB,EAjB4C,EAgBhD,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,KAAK,CAACc,MAA1B,CAAkCF,CAAC,EAAnC,CAAuC,OAA9BA,CAA8B,EAItC,CAED,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,aAAK,SAAS,2BAAqBX,YAAY,EAAI,MAArC,CAAd,CAA6D,OAAO,CAAEM,MAAtE,WACKJ,WADL,cAEI,YAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAEY,SAAjC,EAFJ,GADJ,CAKKd,YAAY,eACT,YAAK,SAAS,CAAC,eAAf,UACKU,aADL,EANR,GADJ,CAaH,CAnCD,CAqCA,cAAeb,CAAAA,cAAf","sourcesContent":["import { useState } from 'react'\nimport downArrow from '../images/down_arrow.svg';\n\nconst CustomDropdown = ({ setSelection, items }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n    const [selectedId, setSelectedId] = useState(0);\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (id) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(items[id]);\n        setSelectedId(id);\n        setSelection(items[id]);\n    };\n\n    const dropdownItems = [];\n    for (let i = 0; i < items.length; i++) {\n        dropdownItems.push(<div className={`dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`} onClick={() => { madeSelection(i) }} key={i}>\n            {items[i]}\n        </div>)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div className={`dropdown-header ${dropDownOpen && 'open'}`} onClick={toggle}>\n                {selectedVal}\n                <img className=\"down-arrow\" src={downArrow}></img>\n            </div>\n            {dropDownOpen &&\n                <div className='dropdown-list'>\n                    {dropdownItems}\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default CustomDropdown\n"]},"metadata":{},"sourceType":"module"}