{"ast":null,"code":"import _defineProperty from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{nodeTypeEnum}from'../../utils/constants.js';import{sleep,getRandomNum}from'../../utils/helper.js';var HORIZONTAL=0;var VERTICAL=1;export var recursiveDivision=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(startCord,targetCord,gridState,setGridState,rows,cols,timeout){var y,currCord,_y,_currCord,_y2,_currCord2,_y3,_currCord3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:y=0;case 1:if(!(y<cols)){_context.next=9;break;}currCord=\"\".concat(0,\":\",y);setWall(currCord,startCord,targetCord,gridState,setGridState);_context.next=6;return sleep(timeout);case 6:y++;_context.next=1;break;case 9:_y=1;case 10:if(!(_y<rows)){_context.next=18;break;}_currCord=\"\".concat(_y,\":\").concat(cols-1);setWall(_currCord,startCord,targetCord,gridState,setGridState);_context.next=15;return sleep(timeout);case 15:_y++;_context.next=10;break;case 18:_y2=cols-2;case 19:if(!(_y2>=0)){_context.next=27;break;}_currCord2=\"\".concat(rows-1,\":\").concat(_y2);setWall(_currCord2,startCord,targetCord,gridState,setGridState);_context.next=24;return sleep(timeout);case 24:_y2--;_context.next=19;break;case 27:_y3=rows-2;case 28:if(!(_y3>0)){_context.next=36;break;}_currCord3=\"\".concat(_y3,\":\",0);setWall(_currCord3,startCord,targetCord,gridState,setGridState);_context.next=33;return sleep(timeout);case 33:_y3--;_context.next=28;break;case 36:_context.next=38;return divide(startCord,targetCord,gridState,setGridState,1,rows-2,1,cols-2,timeout,rows,cols);case 38:case\"end\":return _context.stop();}}},_callee);}));return function recursiveDivision(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();var divide=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(startCord,targetCord,gridState,setGridState,startRow,endRow,startCol,endCol,timeout,rows,cols){var width,height,orientation,sCol,sRow,skip,randRow,_loop,i,_ret,_sRow,_sCol,_skip,randCol,_loop2,_i,_ret2;return _regeneratorRuntime.wrap(function _callee2$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:width=endCol-startCol+1;height=endRow-startRow+1;orientation=HORIZONTAL;if(width<height){orientation=HORIZONTAL;}else if(height<width){orientation=VERTICAL;}else{orientation=getRandomNum(HORIZONTAL,VERTICAL);}if(!(orientation===HORIZONTAL)){_context4.next=30;break;}if(!(height<3||startRow%2===1&&height===3)){_context4.next=7;break;}return _context4.abrupt(\"return\");case 7:sCol=startCol;if(startCol%2===1){sCol+=1;}sRow=startRow+2;if(startRow%2===0){sRow=startRow+1;}skip=Math.floor(getRandomNum(sCol,endCol)/2)*2;randRow=getRandomNum(sRow,endRow-2);randRow=Math.floor(randRow/2)*2+1;_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(i){var currCord,nodeStateFunc,state;return _regeneratorRuntime.wrap(function _loop$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(i===skip)){_context2.next=2;break;}return _context2.abrupt(\"return\",\"continue\");case 2:currCord=\"\".concat(randRow,\":\").concat(i);nodeStateFunc=gridState[currCord][1];state=[nodeTypeEnum.wall,nodeTypeEnum.none];if(currCord===startCord){state=[nodeTypeEnum.start,nodeTypeEnum.wall,nodeTypeEnum.none];}else if(currCord===targetCord){state=[nodeTypeEnum.target,nodeTypeEnum.wall,nodeTypeEnum.none];}nodeStateFunc(function(prevState){return state;});setGridState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},currCord,[state,prevState[currCord][1]]));});_context2.next=10;return sleep(timeout);case 10:case\"end\":return _context2.stop();}}},_loop);});i=startCol;case 16:if(!(i<=endCol)){_context4.next=24;break;}return _context4.delegateYield(_loop(i),\"t0\",18);case 18:_ret=_context4.t0;if(!(_ret===\"continue\")){_context4.next=21;break;}return _context4.abrupt(\"continue\",21);case 21:i++;_context4.next=16;break;case 24:_context4.next=26;return divide(startCord,targetCord,gridState,setGridState,startRow,randRow-1,startCol,endCol,timeout,rows,cols);case 26:_context4.next=28;return divide(startCord,targetCord,gridState,setGridState,randRow+1,endRow,startCol,endCol,timeout,rows,cols);case 28:_context4.next=54;break;case 30:if(!(orientation===VERTICAL)){_context4.next=54;break;}if(!(width<3||startCol%2===1&&width===3)){_context4.next=33;break;}return _context4.abrupt(\"return\");case 33:_sRow=startRow;if(startRow%2===1){_sRow+=1;}_sCol=startCol+2;if(startCol%2===0){_sCol=startCol+1;}_skip=Math.floor(getRandomNum(_sRow,endRow)/2)*2;randCol=getRandomNum(_sCol,endCol-2);randCol=Math.floor(randCol/2)*2+1;_loop2=/*#__PURE__*/_regeneratorRuntime.mark(function _loop2(_i){var currCord,nodeStateFunc,state;return _regeneratorRuntime.wrap(function _loop2$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(_i===_skip)){_context3.next=2;break;}return _context3.abrupt(\"return\",\"continue\");case 2:currCord=\"\".concat(_i,\":\").concat(randCol);nodeStateFunc=gridState[currCord][1];state=[nodeTypeEnum.wall,nodeTypeEnum.none];if(currCord===startCord){state=[nodeTypeEnum.start,nodeTypeEnum.wall,nodeTypeEnum.none];}else if(currCord===targetCord){state=[nodeTypeEnum.target,nodeTypeEnum.wall,nodeTypeEnum.none];}nodeStateFunc(function(prevState){return state;});setGridState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},currCord,[state,prevState[currCord][1]]));});_context3.next=10;return sleep(timeout);case 10:case\"end\":return _context3.stop();}}},_loop2);});_i=startRow;case 42:if(!(_i<=endRow)){_context4.next=50;break;}return _context4.delegateYield(_loop2(_i),\"t1\",44);case 44:_ret2=_context4.t1;if(!(_ret2===\"continue\")){_context4.next=47;break;}return _context4.abrupt(\"continue\",47);case 47:_i++;_context4.next=42;break;case 50:_context4.next=52;return divide(startCord,targetCord,gridState,setGridState,startRow,endRow,startCol,randCol-1,timeout,rows,cols);case 52:_context4.next=54;return divide(startCord,targetCord,gridState,setGridState,startRow,endRow,randCol+1,endCol,timeout,rows,cols);case 54:case\"end\":return _context4.stop();}}},_callee2);}));return function divide(_x8,_x9,_x10,_x11,_x12,_x13,_x14,_x15,_x16,_x17,_x18){return _ref2.apply(this,arguments);};}();var setWall=function setWall(currCord,startCord,targetCord,gridState,setGridState){var nodeStateFunc=gridState[currCord][1];var state=[nodeTypeEnum.wall,nodeTypeEnum.none];if(currCord===startCord){state=[nodeTypeEnum.start,nodeTypeEnum.wall,nodeTypeEnum.none];}else if(currCord===targetCord){state=[nodeTypeEnum.target,nodeTypeEnum.wall,nodeTypeEnum.none];}nodeStateFunc(function(prevState){return state;});setGridState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},currCord,[state,prevState[currCord][1]]));});};","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/terrain/recursiveDivision.js"],"names":["nodeTypeEnum","sleep","getRandomNum","HORIZONTAL","VERTICAL","recursiveDivision","startCord","targetCord","gridState","setGridState","rows","cols","timeout","y","currCord","setWall","divide","startRow","endRow","startCol","endCol","width","height","orientation","sCol","sRow","skip","Math","floor","randRow","i","nodeStateFunc","state","wall","none","start","target","prevState","randCol"],"mappings":"kvBAAA,OAASA,YAAT,KAA6B,0BAA7B,CACA,OAASC,KAAT,CAAgBC,YAAhB,KAAoC,uBAApC,CAEA,GAAMC,CAAAA,UAAU,CAAG,CAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAAjB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,0FAAG,iBAAOC,SAAP,CAAkBC,UAAlB,CAA8BC,SAA9B,CAAyCC,YAAzC,CAAuDC,IAAvD,CAA6DC,IAA7D,CAAmEC,OAAnE,4KAEpBC,CAFoB,CAEhB,CAFgB,aAEbA,CAAC,CAAGF,IAFS,0BAGnBG,QAHmB,WAGL,CAHK,KAGAD,CAHA,EAIzBE,OAAO,CAACD,QAAD,CAAWR,SAAX,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,YAA7C,CAAP,CAJyB,sBAKnBR,CAAAA,KAAK,CAACW,OAAD,CALc,QAEHC,CAAC,EAFE,8BAQpBA,EARoB,CAQhB,CARgB,cAQbA,EAAC,CAAGH,IARS,2BASnBI,SATmB,WASLD,EATK,aASAF,IAAI,CAAG,CATP,EAUzBI,OAAO,CAACD,SAAD,CAAWR,SAAX,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,YAA7C,CAAP,CAVyB,uBAWnBR,CAAAA,KAAK,CAACW,OAAD,CAXc,SAQHC,EAAC,EARE,gCAcpBA,GAdoB,CAchBF,IAAI,CAAG,CAdS,cAcNE,GAAC,EAAI,CAdC,2BAenBC,UAfmB,WAeLJ,IAAI,CAAG,CAfF,aAeOG,GAfP,EAgBzBE,OAAO,CAACD,UAAD,CAAWR,SAAX,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,YAA7C,CAAP,CAhByB,uBAiBnBR,CAAAA,KAAK,CAACW,OAAD,CAjBc,SAcEC,GAAC,EAdH,gCAoBpBA,GApBoB,CAoBhBH,IAAI,CAAG,CApBS,cAoBNG,GAAC,CAAG,CApBE,2BAqBnBC,UArBmB,WAqBLD,GArBK,KAqBA,CArBA,EAsBzBE,OAAO,CAACD,UAAD,CAAWR,SAAX,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,YAA7C,CAAP,CAtByB,uBAuBnBR,CAAAA,KAAK,CAACW,OAAD,CAvBc,SAoBCC,GAAC,EApBF,uDA2BvBG,CAAAA,MAAM,CAACV,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiD,CAAjD,CAAoDC,IAAI,CAAG,CAA3D,CAA8D,CAA9D,CAAiEC,IAAI,CAAG,CAAxE,CAA2EC,OAA3E,CAAoFF,IAApF,CAA0FC,IAA1F,CA3BiB,wDAAH,kBAAjBN,CAAAA,iBAAiB,oEAAvB,CA8BP,GAAMW,CAAAA,MAAM,2FAAG,kBAAOV,SAAP,CAAkBC,UAAlB,CAA8BC,SAA9B,CAAyCC,YAAzC,CAAuDQ,QAAvD,CAAiEC,MAAjE,CAAyEC,QAAzE,CAAmFC,MAAnF,CAA2FR,OAA3F,CAAoGF,IAApG,CAA0GC,IAA1G,iOACLU,KADK,CACGD,MAAM,CAAGD,QAAT,CAAoB,CADvB,CAELG,MAFK,CAEIJ,MAAM,CAAGD,QAAT,CAAoB,CAFxB,CAIPM,WAJO,CAIOpB,UAJP,CAKX,GAAIkB,KAAK,CAAGC,MAAZ,CAAoB,CAChBC,WAAW,CAAGpB,UAAd,CACH,CAFD,IAGK,IAAImB,MAAM,CAAGD,KAAb,CAAoB,CACrBE,WAAW,CAAGnB,QAAd,CACH,CAFI,IAGA,CACDmB,WAAW,CAAGrB,YAAY,CAACC,UAAD,CAAaC,QAAb,CAA1B,CACH,CAbU,KAePmB,WAAW,GAAKpB,UAfT,iCAiBHmB,MAAM,CAAG,CAAT,EAAeL,QAAQ,CAAG,CAAX,GAAiB,CAAjB,EAAsBK,MAAM,GAAK,CAjB7C,oEAoBHE,IApBG,CAoBIL,QApBJ,CAqBP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBK,IAAI,EAAI,CAAR,CACH,CAEGC,IAzBG,CAyBIR,QAAQ,CAAG,CAzBf,CA0BP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBQ,IAAI,CAAGR,QAAQ,CAAG,CAAlB,CACH,CAEKS,IA9BC,CA8BMC,IAAI,CAACC,KAAL,CAAW1B,YAAY,CAACsB,IAAD,CAAOJ,MAAP,CAAZ,CAA6B,CAAxC,EAA6C,CA9BnD,CA+BHS,OA/BG,CA+BO3B,YAAY,CAACuB,IAAD,CAAOP,MAAM,CAAG,CAAhB,CA/BnB,CAgCPW,OAAO,CAAIF,IAAI,CAACC,KAAL,CAAWC,OAAO,CAAG,CAArB,EAA0B,CAA3B,CAAgC,CAA1C,CAhCO,2DAkCEC,CAlCF,yJAmCCA,CAAC,GAAKJ,IAnCP,+EAsCGZ,QAtCH,WAsCiBe,OAtCjB,aAsC4BC,CAtC5B,EAuCGC,aAvCH,CAuCmBvB,SAAS,CAACM,QAAD,CAAT,CAAoB,CAApB,CAvCnB,CAwCCkB,KAxCD,CAwCS,CAAChC,YAAY,CAACiC,IAAd,CAAoBjC,YAAY,CAACkC,IAAjC,CAxCT,CAyCH,GAAIpB,QAAQ,GAAKR,SAAjB,CAA4B,CACxB0B,KAAK,CAAG,CAAChC,YAAY,CAACmC,KAAd,CAAqBnC,YAAY,CAACiC,IAAlC,CAAwCjC,YAAY,CAACkC,IAArD,CAAR,CACH,CAFD,IAGK,IAAIpB,QAAQ,GAAKP,UAAjB,CAA6B,CAC9ByB,KAAK,CAAG,CAAChC,YAAY,CAACoC,MAAd,CAAsBpC,YAAY,CAACiC,IAAnC,CAAyCjC,YAAY,CAACkC,IAAtD,CAAR,CACH,CACDH,aAAa,CAAC,SAAAM,SAAS,QAAIL,CAAAA,KAAJ,EAAV,CAAb,CACAvB,YAAY,CAAC,SAAA4B,SAAS,wCAAUA,SAAV,wBAAsBvB,QAAtB,CAAiC,CAACkB,KAAD,CAAQK,SAAS,CAACvB,QAAD,CAAT,CAAoB,CAApB,CAAR,CAAjC,IAAV,CAAZ,CAhDG,wBAiDGb,CAAAA,KAAK,CAACW,OAAD,CAjDR,yDAkCEkB,CAlCF,CAkCMX,QAlCN,cAkCgBW,CAAC,EAAIV,MAlCrB,iEAkCEU,CAlCF,sIAkC6BA,CAAC,EAlC9B,yDAoDDd,CAAAA,MAAM,CAACV,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDQ,QAAjD,CAA2DY,OAAO,CAAG,CAArE,CAAwEV,QAAxE,CAAkFC,MAAlF,CAA0FR,OAA1F,CAAmGF,IAAnG,CAAyGC,IAAzG,CApDL,iCAqDDK,CAAAA,MAAM,CAACV,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDoB,OAAO,CAAG,CAA3D,CAA8DX,MAA9D,CAAsEC,QAAtE,CAAgFC,MAAhF,CAAwFR,OAAxF,CAAiGF,IAAjG,CAAuGC,IAAvG,CArDL,8CAuDFY,WAAW,GAAKnB,QAvDd,iCAyDHiB,KAAK,CAAG,CAAR,EAAcF,QAAQ,CAAG,CAAX,GAAiB,CAAjB,EAAsBE,KAAK,GAAK,CAzD3C,sEA4DHI,KA5DG,CA4DIR,QA5DJ,CA6DP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBQ,KAAI,EAAI,CAAR,CACH,CAEGD,KAjEG,CAiEIL,QAAQ,CAAG,CAjEf,CAkEP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBK,KAAI,CAAGL,QAAQ,CAAG,CAAlB,CACH,CACKO,KArEC,CAqEMC,IAAI,CAACC,KAAL,CAAW1B,YAAY,CAACuB,KAAD,CAAOP,MAAP,CAAZ,CAA6B,CAAxC,EAA6C,CArEnD,CAsEHoB,OAtEG,CAsEOpC,YAAY,CAACsB,KAAD,CAAOJ,MAAM,CAAG,CAAhB,CAtEnB,CAuEPkB,OAAO,CAAIX,IAAI,CAACC,KAAL,CAAWU,OAAO,CAAG,CAArB,EAA0B,CAA3B,CAAgC,CAA1C,CAvEO,6DAyEER,EAzEF,0JA0ECA,EAAC,GAAKJ,KA1EP,+EA6EGZ,QA7EH,WA6EiBgB,EA7EjB,aA6EsBQ,OA7EtB,EA8EGP,aA9EH,CA8EmBvB,SAAS,CAACM,QAAD,CAAT,CAAoB,CAApB,CA9EnB,CA+ECkB,KA/ED,CA+ES,CAAChC,YAAY,CAACiC,IAAd,CAAoBjC,YAAY,CAACkC,IAAjC,CA/ET,CAgFH,GAAIpB,QAAQ,GAAKR,SAAjB,CAA4B,CACxB0B,KAAK,CAAG,CAAChC,YAAY,CAACmC,KAAd,CAAqBnC,YAAY,CAACiC,IAAlC,CAAwCjC,YAAY,CAACkC,IAArD,CAAR,CACH,CAFD,IAGK,IAAIpB,QAAQ,GAAKP,UAAjB,CAA6B,CAC9ByB,KAAK,CAAG,CAAChC,YAAY,CAACoC,MAAd,CAAsBpC,YAAY,CAACiC,IAAnC,CAAyCjC,YAAY,CAACkC,IAAtD,CAAR,CACH,CACDH,aAAa,CAAC,SAAAM,SAAS,QAAIL,CAAAA,KAAJ,EAAV,CAAb,CACAvB,YAAY,CAAC,SAAA4B,SAAS,wCAAUA,SAAV,wBAAsBvB,QAAtB,CAAiC,CAACkB,KAAD,CAAQK,SAAS,CAACvB,QAAD,CAAT,CAAoB,CAApB,CAAR,CAAjC,IAAV,CAAZ,CAvFG,wBAwFGb,CAAAA,KAAK,CAACW,OAAD,CAxFR,0DAyEEkB,EAzEF,CAyEMb,QAzEN,cAyEgBa,EAAC,EAAIZ,MAzErB,kEAyEEY,EAzEF,wIAyE6BA,EAAC,EAzE9B,yDA2FDd,CAAAA,MAAM,CAACV,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDQ,QAAjD,CAA2DC,MAA3D,CAAmEC,QAAnE,CAA6EmB,OAAO,CAAG,CAAvF,CAA0F1B,OAA1F,CAAmGF,IAAnG,CAAyGC,IAAzG,CA3FL,iCA6FDK,CAAAA,MAAM,CAACV,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDQ,QAAjD,CAA2DC,MAA3D,CAAmEoB,OAAO,CAAG,CAA7E,CAAgFlB,MAAhF,CAAwFR,OAAxF,CAAiGF,IAAjG,CAAuGC,IAAvG,CA7FL,0DAAH,kBAANK,CAAAA,MAAM,+FAAZ,CAiGA,GAAMD,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACD,QAAD,CAAWR,SAAX,CAAsBC,UAAtB,CAAkCC,SAAlC,CAA6CC,YAA7C,CAA8D,CAC1E,GAAMsB,CAAAA,aAAa,CAAGvB,SAAS,CAACM,QAAD,CAAT,CAAoB,CAApB,CAAtB,CAEA,GAAIkB,CAAAA,KAAK,CAAG,CAAChC,YAAY,CAACiC,IAAd,CAAoBjC,YAAY,CAACkC,IAAjC,CAAZ,CACA,GAAIpB,QAAQ,GAAKR,SAAjB,CAA4B,CACxB0B,KAAK,CAAG,CAAChC,YAAY,CAACmC,KAAd,CAAqBnC,YAAY,CAACiC,IAAlC,CAAwCjC,YAAY,CAACkC,IAArD,CAAR,CACH,CAFD,IAGK,IAAIpB,QAAQ,GAAKP,UAAjB,CAA6B,CAC9ByB,KAAK,CAAG,CAAChC,YAAY,CAACoC,MAAd,CAAsBpC,YAAY,CAACiC,IAAnC,CAAyCjC,YAAY,CAACkC,IAAtD,CAAR,CACH,CAEDH,aAAa,CAAC,SAAAM,SAAS,QAAIL,CAAAA,KAAJ,EAAV,CAAb,CACAvB,YAAY,CAAC,SAAA4B,SAAS,wCAAUA,SAAV,wBAAsBvB,QAAtB,CAAiC,CAACkB,KAAD,CAAQK,SAAS,CAACvB,QAAD,CAAT,CAAoB,CAApB,CAAR,CAAjC,IAAV,CAAZ,CACH,CAbD","sourcesContent":["import { nodeTypeEnum } from '../../utils/constants.js'\nimport { sleep, getRandomNum } from '../../utils/helper.js'\n\nconst HORIZONTAL = 0;\nconst VERTICAL = 1;\n\nexport const recursiveDivision = async (startCord, targetCord, gridState, setGridState, rows, cols, timeout) => {\n    // make border around the screen\n    for (let y = 0; y < cols; y++) {\n        const currCord = `${0}:${y}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = 1; y < rows; y++) {\n        const currCord = `${y}:${cols - 1}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = cols - 2; y >= 0; y--) {\n        const currCord = `${rows - 1}:${y}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = rows - 2; y > 0; y--) {\n        const currCord = `${y}:${0}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    // await divide(1, 1, rows - 2, cols - 2, gridState, setGridState, timeout);\n    await divide(startCord, targetCord, gridState, setGridState, 1, rows - 2, 1, cols - 2, timeout, rows, cols);\n};\n\nconst divide = async (startCord, targetCord, gridState, setGridState, startRow, endRow, startCol, endCol, timeout, rows, cols) => {\n    const width = endCol - startCol + 1;\n    const height = endRow - startRow + 1;\n\n    let orientation = HORIZONTAL;\n    if (width < height) {\n        orientation = HORIZONTAL;\n    }\n    else if (height < width) {\n        orientation = VERTICAL;\n    }\n    else {\n        orientation = getRandomNum(HORIZONTAL, VERTICAL);\n    }\n\n    if (orientation === HORIZONTAL) {\n        // cutting horizontally\n        if (height < 3 || (startRow % 2 === 1 && height === 3)) {\n            return;\n        }\n        let sCol = startCol;\n        if (startCol % 2 === 1) {\n            sCol += 1;\n        }\n\n        let sRow = startRow + 2;\n        if (startRow % 2 === 0) {\n            sRow = startRow + 1;\n        }\n\n        const skip = Math.floor(getRandomNum(sCol, endCol) / 2) * 2;\n        let randRow = getRandomNum(sRow, endRow - 2);\n        randRow = (Math.floor(randRow / 2) * 2) + 1;\n\n        for (let i = startCol; i <= endCol; i++) {\n            if (i === skip) {\n                continue;\n            }\n            const currCord = `${randRow}:${i}`;\n            const nodeStateFunc = gridState[currCord][1];\n            let state = [nodeTypeEnum.wall, nodeTypeEnum.none];\n            if (currCord === startCord) {\n                state = [nodeTypeEnum.start, nodeTypeEnum.wall, nodeTypeEnum.none];\n            }\n            else if (currCord === targetCord) {\n                state = [nodeTypeEnum.target, nodeTypeEnum.wall, nodeTypeEnum.none];\n            }\n            nodeStateFunc(prevState => state);\n            setGridState(prevState => ({ ...prevState, [currCord]: [state, prevState[currCord][1]] }));\n            await sleep(timeout);\n        }\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, randRow - 1, startCol, endCol, timeout, rows, cols);\n        await divide(startCord, targetCord, gridState, setGridState, randRow + 1, endRow, startCol, endCol, timeout, rows, cols);\n    }\n    else if (orientation === VERTICAL) {\n        // divide vertically \n        if (width < 3 || (startCol % 2 === 1 && width === 3)) {\n            return;\n        }\n        let sRow = startRow;\n        if (startRow % 2 === 1) {\n            sRow += 1;\n        }\n\n        let sCol = startCol + 2;\n        if (startCol % 2 === 0) {\n            sCol = startCol + 1;\n        }\n        const skip = Math.floor(getRandomNum(sRow, endRow) / 2) * 2;\n        let randCol = getRandomNum(sCol, endCol - 2);\n        randCol = (Math.floor(randCol / 2) * 2) + 1;\n\n        for (let i = startRow; i <= endRow; i++) {\n            if (i === skip) {\n                continue;\n            }\n            const currCord = `${i}:${randCol}`;\n            const nodeStateFunc = gridState[currCord][1];\n            let state = [nodeTypeEnum.wall, nodeTypeEnum.none];\n            if (currCord === startCord) {\n                state = [nodeTypeEnum.start, nodeTypeEnum.wall, nodeTypeEnum.none];\n            }\n            else if (currCord === targetCord) {\n                state = [nodeTypeEnum.target, nodeTypeEnum.wall, nodeTypeEnum.none];\n            }\n            nodeStateFunc(prevState => state);\n            setGridState(prevState => ({ ...prevState, [currCord]: [state, prevState[currCord][1]] }));\n            await sleep(timeout);\n        }\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, endRow, startCol, randCol - 1, timeout, rows, cols);\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, endRow, randCol + 1, endCol, timeout, rows, cols);\n    }\n};\n\nconst setWall = (currCord, startCord, targetCord, gridState, setGridState) => {\n    const nodeStateFunc = gridState[currCord][1];\n\n    let state = [nodeTypeEnum.wall, nodeTypeEnum.none];\n    if (currCord === startCord) {\n        state = [nodeTypeEnum.start, nodeTypeEnum.wall, nodeTypeEnum.none];\n    }\n    else if (currCord === targetCord) {\n        state = [nodeTypeEnum.target, nodeTypeEnum.wall, nodeTypeEnum.none];\n    }\n\n    nodeStateFunc(prevState => state);\n    setGridState(prevState => ({ ...prevState, [currCord]: [state, prevState[currCord][1]] }));\n};"]},"metadata":{},"sourceType":"module"}