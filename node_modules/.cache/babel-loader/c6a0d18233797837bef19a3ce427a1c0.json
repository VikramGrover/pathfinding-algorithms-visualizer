{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/App.js\";\nimport Grid from './components/Grid.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  console.log(window.innerHeight, window.innerWidth);\n  const nodeSize = 25;\n  const topMargin = 200;\n  const winHeight = window.innerHeight - topMargin;\n  const rows = parseInt(winHeight / nodeSize); // leave space on top and bottom of grid\n\n  const cols = parseInt(window.innerWidth / nodeSize) - 2; // leave 1 node spaces on left and right of grid\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      rows: rows,\n      cols: cols,\n      nodeSize: nodeSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/App.js"],"names":["Grid","App","console","log","window","innerHeight","innerWidth","nodeSize","topMargin","winHeight","rows","parseInt","cols"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,sBAAjB;;;;AAEA,SAASC,GAAT,GAAe;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,WAAnB,EAAgCD,MAAM,CAACE,UAAvC;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,GAAlB;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACC,WAAP,GAAqBG,SAAvC;AAEA,QAAME,IAAI,GAAGC,QAAQ,CAACF,SAAS,GAAGF,QAAb,CAArB,CANa,CAMgC;;AAC7C,QAAMK,IAAI,GAAGD,QAAQ,CAACP,MAAM,CAACE,UAAP,GAAoBC,QAArB,CAAR,GAAyC,CAAtD,CAPa,CAO4C;;AAEzD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEG,IAAZ;AAAkB,MAAA,IAAI,EAAEE,IAAxB;AAA8B,MAAA,QAAQ,EAAEL;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;KAdQN,G;AAgBT,eAAeA,GAAf","sourcesContent":["import Grid from './components/Grid.js'\n\nfunction App() {\n  console.log(window.innerHeight, window.innerWidth)\n  const nodeSize = 25;\n  const topMargin = 200;\n  const winHeight = window.innerHeight - topMargin;\n\n  const rows = parseInt(winHeight / nodeSize); // leave space on top and bottom of grid\n  const cols = parseInt(window.innerWidth / nodeSize) - 2; // leave 1 node spaces on left and right of grid\n\n  return (\n    <>\n      <Grid rows={rows} cols={cols} nodeSize={nodeSize} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}