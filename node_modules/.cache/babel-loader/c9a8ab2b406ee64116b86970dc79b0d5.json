{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{algoFunctions,nodeTypeEnum}from'../utils/constants.js';import{sleep}from'../utils/helper.js';import{jsx as _jsx}from\"react/jsx-runtime\";var Visualize=function Visualize(_ref){var rows=_ref.rows,cols=_ref.cols,selectedAlgo=_ref.selectedAlgo,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,clearForReRun=_ref.clearForReRun,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo;var run=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var path,timeout,_loop,i;return _regeneratorRuntime.wrap(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(startCord===targetCord)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:clearForReRun();setRunningAlgo(true);console.log(\"STARTING: \",selectedAlgo);path=[];timeout=5;_context2.next=9;return algoFunctions[selectedAlgo](startCord,targetCord,gridState,rows,cols,timeout);case 9:path=_context2.sent;console.log(\"ENDED: \",selectedAlgo);_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(i){var nodeStateFunc;return _regeneratorRuntime.wrap(function _loop$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return sleep(timeout);case 2:nodeStateFunc=gridState[path[i]][1];// setTimeout(() => {\nnodeStateFunc(function(prevState){return[nodeTypeEnum.path].concat(_toConsumableArray(gridState[path[i]][0]));});// }, timeout);\ncase 4:case\"end\":return _context.stop();}}},_loop);});i=path.length-1;case 13:if(!(i>=0)){_context2.next=18;break;}return _context2.delegateYield(_loop(i),\"t0\",15);case 15:i--;_context2.next=13;break;case 18:setRunningAlgo(false);case 19:case\"end\":return _context2.stop();}}},_callee);}));return function run(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"button \".concat(runningAlgo?'disabled':'green'),onClick:runningAlgo?null:run,children:\"Run\"});};export default Visualize;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Visualize.js"],"names":["algoFunctions","nodeTypeEnum","sleep","Visualize","rows","cols","selectedAlgo","gridState","setGridState","startCord","targetCord","clearForReRun","runningAlgo","setRunningAlgo","run","console","log","path","timeout","i","nodeStateFunc","prevState","length"],"mappings":"4jBAAA,OAASA,aAAT,CAAwBC,YAAxB,KAA4C,uBAA5C,CACA,OAASC,KAAT,KAAsB,oBAAtB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8H,IAA3HC,CAAAA,IAA2H,MAA3HA,IAA2H,CAArHC,IAAqH,MAArHA,IAAqH,CAA/GC,YAA+G,MAA/GA,YAA+G,CAAjGC,SAAiG,MAAjGA,SAAiG,CAAtFC,YAAsF,MAAtFA,YAAsF,CAAxEC,SAAwE,MAAxEA,SAAwE,CAA7DC,UAA6D,MAA7DA,UAA6D,CAAjDC,aAAiD,MAAjDA,aAAiD,CAAlCC,WAAkC,MAAlCA,WAAkC,CAArBC,cAAqB,MAArBA,cAAqB,CAC5I,GAAMC,CAAAA,GAAG,2FAAG,oKACJL,SAAS,GAAKC,UADV,oEAKRC,aAAa,GACbE,cAAc,CAAC,IAAD,CAAd,CACAE,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BV,YAA1B,EAEIW,IATI,CASG,EATH,CAUJC,OAVI,CAUM,CAVN,wBAWKlB,CAAAA,aAAa,CAACM,YAAD,CAAb,CAA4BG,SAA5B,CAAuCC,UAAvC,CAAmDH,SAAnD,CAA8DH,IAA9D,CAAoEC,IAApE,CAA0Ea,OAA1E,CAXL,QAWRD,IAXQ,gBAaRF,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBV,YAAvB,EAbQ,2DAeCa,CAfD,wJAgBEjB,CAAAA,KAAK,CAACgB,OAAD,CAhBP,QAiBEE,aAjBF,CAiBkBb,SAAS,CAACU,IAAI,CAACE,CAAD,CAAL,CAAT,CAAmB,CAAnB,CAjBlB,CAkBJ;AACAC,aAAa,CAAC,SAAAC,SAAS,SAAMpB,YAAY,CAACgB,IAAnB,4BAA4BV,SAAS,CAACU,IAAI,CAACE,CAAD,CAAL,CAAT,CAAmB,CAAnB,CAA5B,IAAV,CAAb,CACA;AApBI,sDAeCA,CAfD,CAeKF,IAAI,CAACK,MAAL,CAAc,CAfnB,cAesBH,CAAC,EAAI,CAf3B,iEAeCA,CAfD,mBAe8BA,CAAC,EAf/B,iCAuBRN,cAAc,CAAC,KAAD,CAAd,CAvBQ,wDAAH,kBAAHC,CAAAA,GAAG,2CAAT,CA0BA,mBACI,YAAK,SAAS,kBAAYF,WAAW,CAAG,UAAH,CAAgB,OAAvC,CAAd,CAAgE,OAAO,CAAEA,WAAW,CAAG,IAAH,CAAUE,GAA9F,iBADJ,CAKH,CAhCD,CAkCA,cAAeX,CAAAA,SAAf","sourcesContent":["import { algoFunctions, nodeTypeEnum } from '../utils/constants.js'\nimport { sleep } from '../utils/helper.js'\n\nconst Visualize = ({ rows, cols, selectedAlgo, gridState, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo }) => {\n    const run = async () => {\n        if (startCord === targetCord) {\n            return;\n        }\n\n        clearForReRun();\n        setRunningAlgo(true);\n        console.log(\"STARTING: \", selectedAlgo);\n\n        let path = [];\n        let timeout = 5;\n        path = await algoFunctions[selectedAlgo](startCord, targetCord, gridState, rows, cols, timeout);\n\n        console.log(\"ENDED: \", selectedAlgo);\n\n        for (let i = path.length - 1; i >= 0; i--) {\n            await sleep(timeout);\n            const nodeStateFunc = gridState[path[i]][1];\n            // setTimeout(() => {\n            nodeStateFunc(prevState => ([nodeTypeEnum.path, ...gridState[path[i]][0]]));\n            // }, timeout);\n        }\n\n        setRunningAlgo(false);\n    };\n\n    return (\n        <div className={`button ${runningAlgo ? 'disabled' : 'green'}`} onClick={runningAlgo ? null : run} >\n            Run\n        </div >\n    )\n}\n\nexport default Visualize\n"]},"metadata":{},"sourceType":"module"}