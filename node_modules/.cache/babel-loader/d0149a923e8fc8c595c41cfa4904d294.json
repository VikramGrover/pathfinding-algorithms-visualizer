{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/components/Grid.js\";\nimport React from 'react';\nimport Node from './Node.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  rows,\n  cols,\n  nodeSize\n}) => {\n  console.log(rows, cols, nodeSize); // fill nodes in the grid\n\n  const nodes = [];\n\n  for (let x = 0; x < rows; x++) {\n    isStart = x === 0 && y === 0 ? true : false;\n    isTarget = x === rows - 1 && y === cols - 1;\n\n    for (let y = 0; y < cols; y++) {\n      nodes.push( /*#__PURE__*/_jsxDEV(Node, {\n        size: nodeSize,\n        isStart: isStart,\n        isTarget: isTarget\n      }, [x, y], false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  const gridStyle = {\n    marginTop: 150,\n    width: cols * nodeSize + cols,\n    height: rows * nodeSize + rows\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    style: gridStyle,\n    children: nodes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/path-finding-visualizer/src/components/Grid.js"],"names":["React","Node","Grid","rows","cols","nodeSize","console","log","nodes","x","isStart","y","isTarget","push","gridStyle","marginTop","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,IAAlB,EAAwBC,QAAxB,EADuC,CAEvC;;AACA,QAAMG,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0BM,CAAC,EAA3B,EAA+B;AAC3BC,IAAAA,OAAO,GAAID,CAAC,KAAK,CAAN,IAAWE,CAAC,KAAK,CAAlB,GAAuB,IAAvB,GAA8B,KAAxC;AACAC,IAAAA,QAAQ,GAAIH,CAAC,KAAMN,IAAI,GAAG,CAAd,IAAoBQ,CAAC,KAAMP,IAAI,GAAG,CAA9C;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAApB,EAA0BO,CAAC,EAA3B,EAA+B;AAC3BH,MAAAA,KAAK,CAACK,IAAN,eAAW,QAAC,IAAD;AAAM,QAAA,IAAI,EAAER,QAAZ;AAAsB,QAAA,OAAO,EAAEK,OAA/B;AAAwC,QAAA,QAAQ,EAAEE;AAAlD,SAAiE,CAACH,CAAD,EAAIE,CAAJ,CAAjE;AAAA;AAAA;AAAA;AAAA,cAAX;AACH;AACJ;;AAED,QAAMG,SAAS,GAAG;AACdC,IAAAA,SAAS,EAAE,GADG;AAEdC,IAAAA,KAAK,EAAGZ,IAAI,GAAGC,QAAR,GAAoBD,IAFb;AAGda,IAAAA,MAAM,EAAGd,IAAI,GAAGE,QAAR,GAAoBF;AAHd,GAAlB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAEW,SAA7B;AAAA,cACMN;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;KAAMN,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport Node from './Node.js'\n\nconst Grid = ({ rows, cols, nodeSize }) => {\n    console.log(rows, cols, nodeSize)\n    // fill nodes in the grid\n    const nodes = [];\n    for (let x = 0; x < rows; x++) {\n        isStart = (x === 0 && y === 0) ? true : false\n        isTarget = (x === (rows - 1) && y === (cols - 1))\n        for (let y = 0; y < cols; y++) {\n            nodes.push(<Node size={nodeSize} isStart={isStart} isTarget={isTarget} key={[x, y]} />)\n        }\n    }\n\n    const gridStyle = {\n        marginTop: 150,\n        width: (cols * nodeSize) + cols,\n        height: (rows * nodeSize) + rows\n    }\n    return (\n        <div className='grid' style={gridStyle}>\n            { nodes}\n        </div >\n    )\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"module"}