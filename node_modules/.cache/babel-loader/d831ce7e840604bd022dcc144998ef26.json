{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import closeIcon from\"../images/close.svg\";import{pathfindingAlgoInfo}from'../utils/constants.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoBox=function InfoBox(_ref){var infoBoxOpen=_ref.infoBoxOpen,toggleInfoBox=_ref.toggleInfoBox,selectedAlgo=_ref.selectedAlgo,startingPos=_ref.startingPos;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dragging=_useState2[0],setDragging=_useState2[1];var _useState3=useState(startingPos),_useState4=_slicedToArray(_useState3,2),boxCord=_useState4[0],setBoxCord=_useState4[1];var enableDragging=function enableDragging(e){setDragging(true);};var beingDragged=function beingDragged(e){if(dragging){setBoxCord(function(prevState){return[prevState[0]+e.movementX,prevState[1]+e.movementY];});}};var disableDragging=function disableDragging(e){setDragging(false);};return/*#__PURE__*/_jsxs(\"div\",{style:{left:\"\".concat(boxCord[0],\"px\"),top:\"\".concat(boxCord[1],\"px\")},className:\"info-box \".concat(infoBoxOpen?'visible':'hidden'),onMouseMove:beingDragged,onMouseUp:disableDragging,onMouseLeave:disableDragging,children:[/*#__PURE__*/_jsx(\"img\",{className:\"close-info-icon\",src:closeIcon,onClick:toggleInfoBox,alt:\"Close info box\"}),/*#__PURE__*/_jsx(\"h1\",{onMouseDown:enableDragging,children:selectedAlgo}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].summary||/*#__PURE__*/_jsx(\"p\",{children:\"No information.\"}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].description,pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].pseudocode&&/*#__PURE__*/_jsx(\"p\",{className:\"identifier\",children:\"Pseudocode:\"}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].pseudocode]});};export default InfoBox;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/InfoBox.js"],"names":["useState","pathfindingAlgoInfo","InfoBox","infoBoxOpen","toggleInfoBox","selectedAlgo","startingPos","dragging","setDragging","boxCord","setBoxCord","enableDragging","e","beingDragged","prevState","movementX","movementY","disableDragging","left","top","closeIcon","summary","description","pseudocode"],"mappings":"6LAAA,OAASA,QAAT,KAAyB,OAAzB,C,2CAEA,OAASC,mBAAT,KAAoC,uBAApC,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA+D,IAA5DC,CAAAA,WAA4D,MAA5DA,WAA4D,CAA/CC,aAA+C,MAA/CA,aAA+C,CAAhCC,YAAgC,MAAhCA,YAAgC,CAAlBC,WAAkB,MAAlBA,WAAkB,eAC3CN,QAAQ,CAAC,KAAD,CADmC,wCACpEO,QADoE,eAC1DC,WAD0D,8BAE7CR,QAAQ,CAACM,WAAD,CAFqC,yCAEpEG,OAFoE,eAE3DC,UAF2D,eAI3E,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC1BJ,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,CAAD,CAAO,CACxB,GAAIL,QAAJ,CAAc,CACVG,UAAU,CAAC,SAAAI,SAAS,QAAI,CAACA,SAAS,CAAC,CAAD,CAAT,CAAeF,CAAC,CAACG,SAAlB,CAA6BD,SAAS,CAAC,CAAD,CAAT,CAAeF,CAAC,CAACI,SAA9C,CAAJ,EAAV,CAAV,CACH,CACJ,CAJD,CAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,CAAD,CAAO,CAC3BJ,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,CAIA,mBACI,aAAK,KAAK,CAAE,CAAEU,IAAI,WAAKT,OAAO,CAAC,CAAD,CAAZ,MAAN,CAA2BU,GAAG,WAAKV,OAAO,CAAC,CAAD,CAAZ,MAA9B,CAAZ,CAAiE,SAAS,oBAAcN,WAAW,CAAG,SAAH,CAAe,QAAxC,CAA1E,CAA8H,WAAW,CAAEU,YAA3I,CAAyJ,SAAS,CAAEI,eAApK,CAAqL,YAAY,CAAEA,eAAnM,wBACI,YAAK,SAAS,CAAC,iBAAf,CAAiC,GAAG,CAAEG,SAAtC,CAAiD,OAAO,CAAEhB,aAA1D,CAAyE,GAAG,CAAC,gBAA7E,EADJ,cAEI,WAAI,WAAW,CAAEO,cAAjB,UAAmCN,YAAnC,EAFJ,CAGMJ,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCgB,OAAxE,eAAoF,sCAHzF,CAIKpB,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCiB,WAJ5E,CAKKrB,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCkB,UAAvE,eAAqF,UAAG,SAAS,CAAC,YAAb,yBAL1F,CAMKtB,mBAAmB,CAACI,YAAD,CAAnB,EAAqCJ,mBAAmB,CAACI,YAAD,CAAnB,CAAkCkB,UAN5E,GADJ,CAUH,CA5BD,CA8BA,cAAerB,CAAAA,OAAf","sourcesContent":["import { useState } from 'react'\nimport closeIcon from '../images/close.svg'\nimport { pathfindingAlgoInfo } from '../utils/constants.js'\n\nconst InfoBox = ({ infoBoxOpen, toggleInfoBox, selectedAlgo, startingPos }) => {\n    const [dragging, setDragging] = useState(false);\n    const [boxCord, setBoxCord] = useState(startingPos);\n\n    const enableDragging = (e) => {\n        setDragging(true);\n    };\n\n    const beingDragged = (e) => {\n        if (dragging) {\n            setBoxCord(prevState => [prevState[0] + e.movementX, prevState[1] + e.movementY]);\n        }\n    };\n\n    const disableDragging = (e) => {\n        setDragging(false);\n    };\n\n    return (\n        <div style={{ left: `${boxCord[0]}px`, top: `${boxCord[1]}px` }} className={`info-box ${infoBoxOpen ? 'visible' : 'hidden'}`} onMouseMove={beingDragged} onMouseUp={disableDragging} onMouseLeave={disableDragging}>\n            <img className='close-info-icon' src={closeIcon} onClick={toggleInfoBox} alt='Close info box' />\n            <h1 onMouseDown={enableDragging} >{selectedAlgo}</h1>\n            {(pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].summary) || <p>No information.</p>}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].description}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].pseudocode && <p className='identifier'>Pseudocode:</p>}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].pseudocode}\n        </div >\n    )\n}\n\nexport default InfoBox\n"]},"metadata":{},"sourceType":"module"}