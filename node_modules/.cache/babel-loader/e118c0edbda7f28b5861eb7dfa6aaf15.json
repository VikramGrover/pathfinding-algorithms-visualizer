{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomDropdown = ({\n  setSelection,\n  items\n}) => {\n  _s();\n\n  const [dropDownOpen, setDropDownOpen] = useState(false);\n  const [selectedVal, setSelectedVal] = useState(items[0]);\n\n  const toggle = () => {\n    setDropDownOpen(prevState => !prevState);\n  };\n\n  const madeSelection = val => {\n    setDropDownOpen(prevState => !prevState);\n    setSelectedVal(val);\n    setSelection(selectedVal);\n  };\n\n  const dropdownItems = [];\n\n  for (const item in items) {\n    dropdownItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-list-item\",\n      onClick: () => {\n        madeSelection('YOOO 1');\n      },\n      children: \"YOOO 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-header ${dropDownOpen && 'open'}`,\n      onClick: toggle,\n      children: selectedVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), dropDownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-list-item\",\n        onClick: () => {\n          madeSelection('YOOO 1');\n        },\n        children: \"YOOO 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-list-item\",\n        onClick: () => {\n          madeSelection('YOOO)))))))))) 2');\n        },\n        children: \"YOOO)))))))))) 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomDropdown, \"Jx+f+N1t84ykLg+HrL+BKRMyCxU=\");\n\n_c = CustomDropdown;\nexport default CustomDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js"],"names":["useState","CustomDropdown","setSelection","items","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","toggle","prevState","madeSelection","val","dropdownItems","item","push"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAAA;;AAChD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAA9C;;AAEA,QAAMK,MAAM,GAAG,MAAM;AACjBH,IAAAA,eAAe,CAACI,SAAS,IAAI,CAACA,SAAf,CAAf;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC3BN,IAAAA,eAAe,CAACI,SAAS,IAAI,CAACA,SAAf,CAAf;AACAF,IAAAA,cAAc,CAACI,GAAD,CAAd;AACAT,IAAAA,YAAY,CAACI,WAAD,CAAZ;AACH,GAJD;;AAMA,QAAMM,aAAa,GAAG,EAAtB;;AACA,OAAK,MAAMC,IAAX,IAAmBV,KAAnB,EAA0B;AACtBS,IAAAA,aAAa,CAACE,IAAd,eAAmB;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,OAAO,EAAE,MAAM;AAAEJ,QAAAA,aAAa,CAAC,QAAD,CAAb;AAAyB,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAnB;AAGH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,mBAAkBN,YAAY,IAAI,MAAO,EAA1D;AAA6D,MAAA,OAAO,EAAEI,MAAtE;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKF,YAAY,iBACT;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,OAAO,EAAE,MAAM;AAAEM,UAAAA,aAAa,CAAC,QAAD,CAAb;AAAyB,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,OAAO,EAAE,MAAM;AAAEA,UAAAA,aAAa,CAAC,kBAAD,CAAb;AAAmC,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAvCD;;GAAMT,c;;KAAAA,c;AAyCN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react'\n\nconst CustomDropdown = ({ setSelection, items }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (val) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(val);\n        setSelection(selectedVal);\n    };\n\n    const dropdownItems = [];\n    for (const item in items) {\n        dropdownItems.push(<div className='dropdown-list-item' onClick={() => { madeSelection('YOOO 1') }}>\n            YOOO 1\n    </div>)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div className={`dropdown-header ${dropDownOpen && 'open'}`} onClick={toggle}>\n                {selectedVal}\n            </div>\n            {dropDownOpen &&\n                <div className='dropdown-list'>\n\n                    <div className='dropdown-list-item' onClick={() => { madeSelection('YOOO 1') }}>\n                        YOOO 1\n                    </div>\n                    <div className='dropdown-list-item' onClick={() => { madeSelection('YOOO)))))))))) 2') }}>\n                        YOOO)))))))))) 2\n                    </div>\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default CustomDropdown\n"]},"metadata":{},"sourceType":"module"}