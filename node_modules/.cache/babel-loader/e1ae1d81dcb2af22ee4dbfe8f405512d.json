{"ast":null,"code":"import _slicedToArray from\"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import CustomDropdown from'./CustomDropdown.js';import{useState}from'react';import{allTerrainAlgos,unweightedTerrainAlgos}from'../utils/constants.js';import{isAlgoUnweighted}from'../utils/helper.js';import GenerateTerrain from'./GenerateTerrain.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChooseTerrain=function ChooseTerrain(_ref){var rows=_ref.rows,cols=_ref.cols,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo,dropDownWidth=_ref.dropDownWidth,resetGrid=_ref.resetGrid,selectedAlgo=_ref.selectedAlgo;var _useState=useState(allTerrainAlgos[0]),_useState2=_slicedToArray(_useState,2),selectedTerrainAlgo=_useState2[0],setSelectedTerrainAlgo=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"choose-terrain\",children:[/*#__PURE__*/_jsx(CustomDropdown,{setSelection:setSelectedTerrainAlgo,items:isAlgoUnweighted(selectedAlgo)?unweightedTerrainAlgos:allTerrainAlgos,disabled:false,dropDownWidth:dropDownWidth,isAlgoSelector:false,isObstacleSelector:false,isTerrainSelector:true}),/*#__PURE__*/_jsx(GenerateTerrain,{rows:rows,cols:cols,selectedTerrainAlgo:selectedTerrainAlgo,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo,resetGrid:resetGrid})]});};export default ChooseTerrain;","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseTerrain.js"],"names":["CustomDropdown","useState","allTerrainAlgos","unweightedTerrainAlgos","isAlgoUnweighted","GenerateTerrain","ChooseTerrain","rows","cols","gridState","setGridState","startCord","targetCord","runningAlgo","setRunningAlgo","dropDownWidth","resetGrid","selectedAlgo","selectedTerrainAlgo","setSelectedTerrainAlgo"],"mappings":"6LAAA,MAAOA,CAAAA,cAAP,KAA2B,qBAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,eAAT,CAA0BC,sBAA1B,KAAwD,uBAAxD,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyI,IAAtIC,CAAAA,IAAsI,MAAtIA,IAAsI,CAAhIC,IAAgI,MAAhIA,IAAgI,CAA1HC,SAA0H,MAA1HA,SAA0H,CAA/GC,YAA+G,MAA/GA,YAA+G,CAAjGC,SAAiG,MAAjGA,SAAiG,CAAtFC,UAAsF,MAAtFA,UAAsF,CAA1EC,WAA0E,MAA1EA,WAA0E,CAA7DC,cAA6D,MAA7DA,cAA6D,CAA7CC,aAA6C,MAA7CA,aAA6C,CAA9BC,SAA8B,MAA9BA,SAA8B,CAAnBC,YAAmB,MAAnBA,YAAmB,eACrGhB,QAAQ,CAACC,eAAe,CAAC,CAAD,CAAhB,CAD6F,wCACpJgB,mBADoJ,eAC/HC,sBAD+H,eAG3J,mBACI,aAAK,SAAS,iBAAd,wBACI,KAAC,cAAD,EAAgB,YAAY,CAAEA,sBAA9B,CAAsD,KAAK,CAAEf,gBAAgB,CAACa,YAAD,CAAhB,CAAiCd,sBAAjC,CAA0DD,eAAvH,CAAwI,QAAQ,CAAE,KAAlJ,CAAyJ,aAAa,CAAEa,aAAxK,CAAuL,cAAc,CAAE,KAAvM,CAA8M,kBAAkB,CAAE,KAAlO,CAAyO,iBAAiB,CAAE,IAA5P,EADJ,cAEI,KAAC,eAAD,EAAiB,IAAI,CAAER,IAAvB,CAA6B,IAAI,CAAEC,IAAnC,CAAyC,mBAAmB,CAAEU,mBAA9D,CAAmF,SAAS,CAAET,SAA9F,CAAyG,YAAY,CAAEC,YAAvH,CAAqI,SAAS,CAAEC,SAAhJ,CAA2J,UAAU,CAAEC,UAAvK,CAAmL,WAAW,CAAEC,WAAhM,CAA6M,cAAc,CAAEC,cAA7N,CAA6O,SAAS,CAAEE,SAAxP,EAFJ,GADJ,CAMH,CATD,CAWA,cAAeV,CAAAA,aAAf","sourcesContent":["import CustomDropdown from './CustomDropdown.js'\nimport { useState } from 'react'\nimport { allTerrainAlgos, unweightedTerrainAlgos } from '../utils/constants.js'\nimport { isAlgoUnweighted } from '../utils/helper.js'\nimport GenerateTerrain from './GenerateTerrain.js'\n\nconst ChooseTerrain = ({ rows, cols, gridState, setGridState, startCord, targetCord, runningAlgo, setRunningAlgo, dropDownWidth, resetGrid, selectedAlgo }) => {\n    const [selectedTerrainAlgo, setSelectedTerrainAlgo] = useState(allTerrainAlgos[0]);\n\n    return (\n        <div className={`choose-terrain`}>\n            <CustomDropdown setSelection={setSelectedTerrainAlgo} items={isAlgoUnweighted(selectedAlgo) ? unweightedTerrainAlgos : allTerrainAlgos} disabled={false} dropDownWidth={dropDownWidth} isAlgoSelector={false} isObstacleSelector={false} isTerrainSelector={true} />\n            <GenerateTerrain rows={rows} cols={cols} selectedTerrainAlgo={selectedTerrainAlgo} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} resetGrid={resetGrid} />\n        </div >\n    )\n}\n\nexport default ChooseTerrain\n"]},"metadata":{},"sourceType":"module"}