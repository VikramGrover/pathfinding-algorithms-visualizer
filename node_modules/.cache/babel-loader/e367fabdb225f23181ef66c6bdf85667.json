{"ast":null,"code":"var _jsxFileName = \"/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseAlgorithm = ({\n  rows,\n  cols,\n  setGridState,\n  startCord,\n  targetCord,\n  clearForReRun,\n  runningAlgo,\n  setRunningAlgo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `choose-algo`,\n    children: [\"Choose Algorithm\", /*#__PURE__*/_jsxDEV(Visualize, {\n      rows: rows,\n      cols: cols,\n      setGridState: setGridState,\n      startCord: startCord,\n      targetCord: targetCord,\n      clearForReRun: clearForReRun,\n      runningAlgo: runningAlgo,\n      setRunningAlgo: setRunningAlgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChooseAlgorithm;\nexport default ChooseAlgorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseAlgorithm\");","map":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js"],"names":["ChooseAlgorithm","rows","cols","setGridState","startCord","targetCord","clearForReRun","runningAlgo","setRunningAlgo"],"mappings":";;;AAAA,MAAMA,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA,aAAnD;AAAkEC,EAAAA,WAAlE;AAA+EC,EAAAA;AAA/E,CAAD,KAAqG;AACzH,sBACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA,gDAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEP,IAAjB;AAAuB,MAAA,IAAI,EAAEC,IAA7B;AAAmC,MAAA,YAAY,EAAEC,YAAjD;AAA+D,MAAA,SAAS,EAAEC,SAA1E;AAAqF,MAAA,UAAU,EAAEC,UAAjG;AAA6G,MAAA,aAAa,EAAEC,aAA5H;AAA2I,MAAA,WAAW,EAAEC,WAAxJ;AAAqK,MAAA,cAAc,EAAEC;AAArL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMR,e;AASN,eAAeA,eAAf","sourcesContent":["const ChooseAlgorithm = ({ rows, cols, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo }) => {\n    return (\n        <div className={`choose-algo`}>\n            Choose Algorithm\n            <Visualize rows={rows} cols={cols} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearForReRun={clearForReRun} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} />\n        </div >\n    )\n}\n\nexport default ChooseAlgorithm\n"]},"metadata":{},"sourceType":"module"}