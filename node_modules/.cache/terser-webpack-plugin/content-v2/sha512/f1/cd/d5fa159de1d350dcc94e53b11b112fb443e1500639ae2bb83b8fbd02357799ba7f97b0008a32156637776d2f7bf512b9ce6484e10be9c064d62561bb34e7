{"code":"(this[\"webpackJsonppathfinding-algorithms-visualizer\"]=this[\"webpackJsonppathfinding-algorithms-visualizer\"]||[]).push([[0],{21:function(e,t,n){},215:function(e,t,n){\"use strict\";n.r(t);var r=n(2),a=n.n(r),c=n(14),o=n.n(c),i=(n(21),n(5)),s=n(7),u=n(1),d=n(4),l=n(3),b=n.n(l),h=n(8),g=n(6),f=function(e,t,n,r){var a=parseInt(e.split(\":\")[0]),c=parseInt(e.split(\":\")[1]),o=[];return a-1>=0&&r[\"\".concat(a-1,\":\").concat(c)][0][0]!==xe.wall&&o.push(\"\".concat(a-1,\":\").concat(c)),c+1<n&&r[\"\".concat(a,\":\").concat(c+1)][0][0]!==xe.wall&&o.push(\"\".concat(a,\":\").concat(c+1)),a+1<t&&r[\"\".concat(a+1,\":\").concat(c)][0][0]!==xe.wall&&o.push(\"\".concat(a+1,\":\").concat(c)),c-1>=0&&r[\"\".concat(a,\":\").concat(c-1)][0][0]!==xe.wall&&o.push(\"\".concat(a,\":\").concat(c-1)),o},j=function(e,t,n){for(var r=t,a=[];(r=n[r])!==e;)a.push(r);return a},p=function(e){var t=Math.min.apply(Math,Object(s.a)(Object.values(e)));for(var n in e)if(e[n]===t)return n},O=function(e){return ue.includes(e)},x=function(e){return je.includes(e)},v=function(e){return new Promise((function(t){return setTimeout(t,e)}))},w=function(e,t){if(e===t)return e;var n=Math.min(e,t),r=Math.max(e,t);return Math.floor(Math.random()*(r-n+1)+n)},m=function(e,t){if(e===t)return 0;var n=parseInt(e.split(\":\")[0]),r=parseInt(e.split(\":\")[1]),a=parseInt(t.split(\":\")[0]),c=parseInt(t.split(\":\")[1]);return Math.abs(n-a)+Math.abs(r-c)},y=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o){var i,u,d,l,g,O,x,w,m,y,S,k,_;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(u={},d={},l={},(i={})[t]=0,d[t]=0,g=0;g<a;g++)for(O=0;O<c;O++)(x=\"\".concat(g,\":\").concat(O))!==t&&(i[x]=1/0);case 7:if(!(Object.keys(d).length>0)){e.next=42;break}if(w=p(d),delete d[w],l[w]=1,w===t||w===n){e.next=16;break}(0,r[w][1])((function(e){return[xe.visited].concat(Object(s.a)(e.slice(1)))})),e.next=18;break;case 16:if(w!==n){e.next=18;break}return e.abrupt(\"return\",j(t,n,u));case 18:m=f(w,a,c,r),y=Object(h.a)(m),e.prev=20,y.s();case 22:if((S=y.n()).done){e.next=30;break}if(k=S.value,_=i[w]+me[r[k][0][0]],!(k in l)){e.next=27;break}return e.abrupt(\"continue\",28);case 27:(k in d&&_<i[k]||!(k in d))&&(i[k]=_,u[k]=w,d[k]=_,k!==n&&(0,r[k][1])((function(e){return[xe.visiting].concat(Object(s.a)(e))})));case 28:e.next=22;break;case 30:e.next=35;break;case 32:e.prev=32,e.t0=e.catch(20),y.e(e.t0);case 35:return e.prev=35,y.f(),e.finish(35);case 38:return e.next=40,v(o);case 40:e.next=7;break;case 42:return e.abrupt(\"return\",[]);case 43:case\"end\":return e.stop()}}),e,null,[[20,32,35,38]])})));return function(t,n,r,a,c,o){return e.apply(this,arguments)}}(),S=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o){var i,s,d,l,g,j,p,O;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=[t],s=Object(u.a)({},t,1);case 2:if(!(i.length>0)){e.next=37;break}if((d=i[0])!==n&&d!==t&&(0,r[d][1])((function(e){return[xe.visiting,xe.none]})),d!==n){e.next=9;break}return i.pop(),i.shift(),e.abrupt(\"return\",i);case 9:d!==t&&(s[d]=1,(0,r[d][1])((function(e){return[xe.visited,xe.none]}))),l=f(d,a,c,r),g=!1,j=Object(h.a)(l),e.prev=13,j.s();case 15:if((p=j.n()).done){e.next=24;break}if(!((O=p.value)in s)){e.next=19;break}return e.abrupt(\"continue\",22);case 19:return i.unshift(O),g=!0,e.abrupt(\"break\",24);case 22:e.next=15;break;case 24:e.next=29;break;case 26:e.prev=26,e.t0=e.catch(13),j.e(e.t0);case 29:return e.prev=29,j.f(),e.finish(29);case 32:return g||i.splice(0,1),e.next=35,v(o);case 35:e.next=2;break;case 37:return e.abrupt(\"return\",[]);case 38:case\"end\":return e.stop()}}),e,null,[[13,26,29,32]])})));return function(t,n,r,a,c,o){return e.apply(this,arguments)}}(),k=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o){var i,s,d,l,g,p,O,x;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=[t],s=Object(u.a)({},t,1),d={};case 3:if(!(i.length>0)){e.next=35;break}(l=i.pop())!==t&&l!==n&&(0,r[l][1])((function(e){return[xe.visited,xe.none]})),g=f(l,a,c,r),p=Object(h.a)(g),e.prev=8,p.s();case 10:if((O=p.n()).done){e.next=23;break}if(!((x=O.value)in s)){e.next=14;break}return e.abrupt(\"continue\",21);case 14:if(d[x]=l,i.unshift(x),s[x]=1,x!==n){e.next=19;break}return e.abrupt(\"return\",j(t,n,d));case 19:(0,r[x][1])((function(e){return[xe.visiting,xe.none]}));case 21:e.next=10;break;case 23:e.next=28;break;case 25:e.prev=25,e.t0=e.catch(8),p.e(e.t0);case 28:return e.prev=28,p.f(),e.finish(28);case 31:return e.next=33,v(o);case 33:e.next=3;break;case 35:return e.abrupt(\"return\",[]);case 36:case\"end\":return e.stop()}}),e,null,[[8,25,28,31]])})));return function(t,n,r,a,c,o){return e.apply(this,arguments)}}(),_=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o){var i,d,l,g,O,x,w,y,S,k,_,A,C,N,G;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(i=Object(u.a)({},t,0),d=Object(u.a)({},t,0),l=Object(u.a)({},t,0),g=Object(u.a)({},t,0),O={},x={},w=0;w<a;w++)for(y=0;y<c;y++)(S=\"\".concat(w,\":\").concat(y))!==t&&(g[S]=d[S]=l[S]=1/0);case 7:if(!(Object.keys(i).length>0)){e.next=24;break}if(k=p(i),delete i[k],k===t||k===n){e.next=15;break}(0,r[k][1])((function(e){return[xe.visited].concat(Object(s.a)(e.slice(1)))})),e.next=17;break;case 15:if(k!==n){e.next=17;break}return e.abrupt(\"return\",j(t,n,x));case 17:_=f(k,a,c,r),A=Object(h.a)(_);try{for(A.s();!(C=A.n()).done;)N=C.value,(G=d[k]+me[r[N][0][0]])<d[N]&&(N===t||N===n||N in O||(0,r[N][1])((function(e){return[xe.visiting].concat(Object(s.a)(e))})),O[N]=1,d[N]=G,l[N]=m(N,n),g[N]=d[N]+l[N],x[N]=k,i[N]=g[N])}catch(b){A.e(b)}finally{A.f()}return e.next=22,v(o);case 22:e.next=7;break;case 24:return e.abrupt(\"return\",[]);case 25:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o){return e.apply(this,arguments)}}(),A=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o){var i,d,l,g,O,x,w,y,S,k,_,A,C;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(i=Object(u.a)({},t,0),d=Object(u.a)({},t,0),l=Object(u.a)({},t,0),g={},O={},x=0;x<a;x++)for(w=0;w<c;w++)(y=\"\".concat(x,\":\").concat(w))!==t&&(l[y]=d[y]=1/0);case 6:if(!(Object.keys(i).length>0)){e.next=24;break}if(S=p(i),delete i[S],S===t||S===n){e.next=14;break}(0,r[S][1])((function(e){return[xe.visited].concat(Object(s.a)(e.slice(1)))})),e.next=17;break;case 14:if(S!==n){e.next=17;break}return console.log(\"DONNEE\"),e.abrupt(\"return\",j(t,n,g));case 17:k=f(S,a,c,r),_=Object(h.a)(k);try{for(_.s();!(A=_.n()).done;)(C=A.value)in O||(O[C]=1,C!==t&&C!==n&&(0,r[C][1])((function(e){return[xe.visiting].concat(Object(s.a)(e))})),d[C]=m(C,n),l[C]=d[C],g[C]=S,i[C]=l[C])}catch(b){_.e(b)}finally{_.f()}return e.next=22,v(o);case 22:e.next=6;break;case 24:return e.abrupt(\"return\",[]);case 25:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o){return e.apply(this,arguments)}}(),C=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o,i){var s,u,d,l,h,g,f,j;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s=0;case 1:if(!(s<o)){e.next=9;break}return u=\"\".concat(0,\":\",s),G(u,t,n,r,a),e.next=6,v(i);case 6:s++,e.next=1;break;case 9:d=1;case 10:if(!(d<c)){e.next=18;break}return l=\"\".concat(d,\":\").concat(o-1),G(l,t,n,r,a),e.next=15,v(i);case 15:d++,e.next=10;break;case 18:h=o-2;case 19:if(!(h>=0)){e.next=27;break}return g=\"\".concat(c-1,\":\").concat(h),G(g,t,n,r,a),e.next=24,v(i);case 24:h--,e.next=19;break;case 27:f=c-2;case 28:if(!(f>0)){e.next=36;break}return j=\"\".concat(f,\":\",0),G(j,t,n,r,a),e.next=33,v(i);case 33:f--,e.next=28;break;case 36:return e.next=38,N(t,n,r,a,1,c-2,1,o-2,i,c,o);case 38:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o,i){return e.apply(this,arguments)}}(),N=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o,i,s,u,d,l){var h,g,f,j,p,O,x,m,y,S,k,_,A,C,R;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(f=0,0!==(f=(h=s-i+1)<(g=o-c+1)?0:g<h?1:w(0,1))){e.next=31;break}if(!(g<3||c%2===1&&3===g)){e.next=7;break}return e.abrupt(\"return\");case 7:j=i,i%2===1&&(j+=1),p=c+2,c%2===0&&(p=c+1),O=2*Math.floor(w(j,s)/2),x=w(p,o-2),x=2*Math.floor(x/2)+1,m=i;case 15:if(!(m<=s)){e.next=25;break}if(m!==O){e.next=18;break}return e.abrupt(\"continue\",22);case 18:return y=\"\".concat(x,\":\").concat(m),G(y,t,n,r,a),e.next=22,v(u);case 22:m++,e.next=15;break;case 25:return e.next=27,N(t,n,r,a,c,x-1,i,s,u,d,l);case 27:return e.next=29,N(t,n,r,a,x+1,o,i,s,u,d,l);case 29:e.next=56;break;case 31:if(1!==f){e.next=56;break}if(!(h<3||i%2===1&&3===h)){e.next=34;break}return e.abrupt(\"return\");case 34:S=c,c%2===1&&(S+=1),k=i+2,i%2===0&&(k=i+1),_=2*Math.floor(w(S,o)/2),A=w(k,s-2),A=2*Math.floor(A/2)+1,C=c;case 42:if(!(C<=o)){e.next=52;break}if(C!==_){e.next=45;break}return e.abrupt(\"continue\",49);case 45:return R=\"\".concat(C,\":\").concat(A),G(R,t,n,r,a),e.next=49,v(u);case 49:C++,e.next=42;break;case 52:return e.next=54,N(t,n,r,a,c,o,i,A-1,u,d,l);case 54:return e.next=56,N(t,n,r,a,c,o,A+1,s,u,d,l);case 56:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o,i,s,u,d,l){return e.apply(this,arguments)}}(),G=function(e,t,n,r,a){var c=r[e][1],o=[xe.wall,xe.none];e===t?o=[xe.start,xe.wall,xe.none]:e===n&&(o=[xe.target,xe.wall,xe.none]),c((function(e){return o})),a((function(t){return Object(d.a)(Object(d.a)({},t),{},Object(u.a)({},e,[o,t[e][1]]))}))};function R(e,t,n){this.x=e,this.y=t,this.z=n}R.prototype.dot2=function(e,t){return this.x*e+this.y*t},R.prototype.dot3=function(e,t,n){return this.x*e+this.y*t+this.z*n};var I,M,D,z,T,F,W,E,B,H=[new R(1,1,0),new R(-1,1,0),new R(1,-1,0),new R(-1,-1,0),new R(1,0,1),new R(-1,0,1),new R(1,0,-1),new R(-1,0,-1),new R(0,1,1),new R(0,-1,1),new R(0,1,-1),new R(0,-1,-1)],L=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],q=new Array(512),P=new Array(512),U=function(e){e>0&&e<1&&(e*=65536),(e=Math.floor(e))<256&&(e|=e<<8);for(var t=0;t<256;t++){var n;n=1&t?L[t]^255&e:L[t]^e>>8&255,q[t]=q[t+256]=n,P[t]=P[t+256]=H[n%12]}},J=.5*(Math.sqrt(3)-1),Y=(3-Math.sqrt(3))/6,X=function(e,t){var n,r,a=(e+t)*J,c=Math.floor(e+a),o=Math.floor(t+a),i=(c+o)*Y,s=e-c+i,u=t-o+i;s>u?(n=1,r=0):(n=0,r=1);var d=s-n+Y,l=u-r+Y,b=s-1+2*Y,h=u-1+2*Y,g=P[(c&=255)+q[o&=255]],f=P[c+n+q[o+r]],j=P[c+1+q[o+1]],p=.5-s*s-u*u,O=.5-d*d-l*l,x=.5-b*b-h*h;return 70*((p<0?0:(p*=p)*p*g.dot2(s,u))+(O<0?0:(O*=O)*O*f.dot2(d,l))+(x<0?0:(x*=x)*x*j.dot2(b,h)))},K=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o,i){var s,u,d,l;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(U(Math.random()),s={},u=0;u<o;u++)for(d=function(e){var a=\"\".concat(e,\":\").concat(u),c=r[a][1],o=X(u/12,e/12),i=[xe.none];o>=-1&&o<=-.5?i.unshift(xe.wall):o>-.5&&o<=-.2?i.unshift(xe.weighted100):o>-.2&&o<=.1?i.unshift(xe.weighted80):o>.1&&o<=.4?i.unshift(xe.weighted60):o>.4&&o<=.7?i.unshift(xe.weighted40):o>.7&&o<=1&&i.unshift(xe.weighted20),a===t?i.unshift(xe.start):a===n&&i.unshift(xe.target),c((function(e){return i})),s[a]=[i,c]},l=0;l<c;l++)d(l);a((function(e){return s}));case 4:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o,i){return e.apply(this,arguments)}}(),Q=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o,i){var s,u,d,l;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s={},u=0;case 2:if(!(u<c)){e.next=15;break}d=function(e){var a=\"\".concat(u,\":\").concat(e),c=r[a][1];if(w(1,10)>=4){var o=[xe.none];return a===t?o.unshift(xe.start):a===n&&o.unshift(xe.target),s[a]=[o,c],\"continue\"}var i=[xe.wall,xe.none];a===t?i.unshift(xe.start):a===n&&i.unshift(xe.target),c((function(e){return i})),s[a]=[i,c]},l=0;case 5:if(!(l<o)){e.next=12;break}if(\"continue\"!==d(l)){e.next=9;break}return e.abrupt(\"continue\",9);case 9:l++,e.next=5;break;case 12:u++,e.next=2;break;case 15:a((function(e){return s}));case 16:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o,i){return e.apply(this,arguments)}}(),V=function(){var e=Object(g.a)(b.a.mark((function e(t,n,r,a,c,o,i){var s,u,d,l;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s={},u=0;case 2:if(!(u<c)){e.next=15;break}d=function(e){var a=\"\".concat(u,\":\").concat(e),c=r[a][1];if(w(1,10)>=5){var o=[xe.none];return a===t?o.unshift(xe.start):a===n&&o.unshift(xe.target),s[a]=[o,c],\"continue\"}var i=[w(xe.wall,xe.weighted20),xe.none];a===t?i.unshift(xe.start):a===n&&i.unshift(xe.target),c((function(e){return i})),s[a]=[i,c]},l=0;case 5:if(!(l<o)){e.next=12;break}if(\"continue\"!==d(l)){e.next=9;break}return e.abrupt(\"continue\",9);case 9:l++,e.next=5;break;case 12:u++,e.next=2;break;case 15:a((function(e){return s}));case 16:case\"end\":return e.stop()}}),e)})));return function(t,n,r,a,c,o,i){return e.apply(this,arguments)}}(),Z=n(219),$=n(218),ee=n(0),te=\"Dijkstra's\",ne=\"A* (A-Star)\",re=\"Breadth-first Search\",ae=\"Depth-first Search\",ce=\"Greedy Best-first Search\",oe=(I={},Object(u.a)(I,te,y),Object(u.a)(I,ne,_),Object(u.a)(I,re,k),Object(u.a)(I,ae,S),Object(u.a)(I,ce,A),I);Object.freeze(oe);var ie=(M={},Object(u.a)(M,te,1),Object(u.a)(M,ne,4),Object(u.a)(M,re,5),Object(u.a)(M,ae,10),Object(u.a)(M,ce,11),M);Object.freeze(ie);var se=[te,ne,re,ae,ce];Object.freeze(se);var ue=[ae,re,ce];Object.freeze(ue);var de=[te,ne,re];Object.freeze(de);var le=\"Recursive Division\",be=\"Simplex Noise\",he=\"Random\",ge=\"Random (Weighted)\",fe=[le,be,he,ge];Object.freeze(fe);var je=[le,he];Object.freeze(je);var pe=(D={},Object(u.a)(D,le,C),Object(u.a)(D,be,K),Object(u.a)(D,he,Q),Object(u.a)(D,ge,V),D);Object.freeze(pe);var Oe=(z={},Object(u.a)(z,le,5),Object(u.a)(z,be,1),Object(u.a)(z,he,1),Object(u.a)(z,ge,1),z);Object.freeze(Oe);var xe={path:0,visited:1,visiting:2,none:3,target:4,start:5,remObstacle:6,wall:7,weighted100:8,weighted80:9,weighted60:10,weighted40:11,weighted20:12};Object.freeze(xe);var ve=(T={},Object(u.a)(T,xe.none,\"none\"),Object(u.a)(T,xe.target,\"target\"),Object(u.a)(T,xe.wall,\"wall\"),Object(u.a)(T,xe.visiting,\"visiting\"),Object(u.a)(T,xe.start,\"start\"),Object(u.a)(T,xe.visited,\"visited\"),Object(u.a)(T,xe.path,\"path\"),Object(u.a)(T,xe.weighted100,\"weighted100\"),Object(u.a)(T,xe.weighted80,\"weighted80\"),Object(u.a)(T,xe.weighted60,\"weighted60\"),Object(u.a)(T,xe.weighted40,\"weighted40\"),Object(u.a)(T,xe.weighted20,\"weighted20\"),T);Object.freeze(ve);var we=(F={},Object(u.a)(F,xe.none,\"transparent\"),Object(u.a)(F,xe.target,\"#f14846\"),Object(u.a)(F,xe.wall,\"#18191c\"),Object(u.a)(F,xe.visiting,\"#4988dc\"),Object(u.a)(F,xe.start,\"#43b581\"),Object(u.a)(F,xe.visited,\"#3f70dd\"),Object(u.a)(F,xe.path,\"#f9a719\"),Object(u.a)(F,xe.weighted100,\"#1b1c1e\"),Object(u.a)(F,xe.weighted80,\"#1c1e21\"),Object(u.a)(F,xe.weighted60,\"#222327\"),Object(u.a)(F,xe.weighted40,\"#26272b\"),Object(u.a)(F,xe.weighted20,\"#2b2c31\"),F);Object.freeze(we);var me=(W={},Object(u.a)(W,xe.none,1),Object(u.a)(W,xe.target,1),Object(u.a)(W,xe.wall,1/0),Object(u.a)(W,xe.start,1),Object(u.a)(W,xe.weighted100,100),Object(u.a)(W,xe.weighted80,80),Object(u.a)(W,xe.weighted60,60),Object(u.a)(W,xe.weighted40,40),Object(u.a)(W,xe.weighted20,20),W);Object.freeze(me);var ye=[\"Wall (\\u221e)\",\"Weighted (100)\",\"Weighted (80)\",\"Weighted (60)\",\"Weighted (40)\",\"Weighted (20)\"],Se=(E={},Object(u.a)(E,ye[0],ve[xe.wall]),Object(u.a)(E,ye[1],ve[xe.weighted100]),Object(u.a)(E,ye[2],ve[xe.weighted80]),Object(u.a)(E,ye[3],ve[xe.weighted60]),Object(u.a)(E,ye[4],ve[xe.weighted40]),Object(u.a)(E,ye[5],ve[xe.weighted20]),E);Object.freeze(Se);var ke={fontSize:13,backgroundColor:\"#18191c\",borderRadius:4,padding:20,lineHeight:1.5,maxHeight:250,marginTop:7,marginBottom:0},_e={fontSize:12,backgroundColor:\"#18191c\",borderRadius:4,padding:4,display:\"inline\",color:\"white\",fontWeight:600},Ae=(B={},Object(u.a)(B,te,{summary:Object(ee.jsxs)(\"h4\",{children:[te,\" is a \",Object(ee.jsx)(\"strong\",{children:\"greedy\"}),\" pathfinding algorithm that guarantees \",Object(ee.jsx)(\"strong\",{children:\"optimal (shortest)\"}),\" paths, even in \",Object(ee.jsx)(\"strong\",{children:\"weighted\"}),\" graphs\"]}),description:null,pseudocode:Object(ee.jsx)(Z.a,{language:\"python\",style:$.a,showLineNumbers:!0,wrapLines:!0,customStyle:ke,children:\"min_pq = min_heap(start_node: 0)\\ndist = { start_node: 0 }\\nprev = {}\\n\\nfor node in nodes:\\n    if node != start_node:\\n        dist[node] = Infinity\\n        min_pq[node] = Infinity\\n            \\nwhile min_pq.len:\\n    curr_node = min_pq.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev) # found path to target\\n        \\n    for neighbour in curr_node.neighbours:\\n        new_cost = distance[curr_node] + \\n                   edge(curr_node, neighbour).weight\\n\\n        if new_cost < dist[neighbour]:\\n            # found better path, update the distance\\n            dist[neighbour] = new_cost\\n            min_pq[neighbour] = new_cost\\n            prev[neighbour] = curr_node\\n\\n# no path found\\nreturn\"})}),Object(u.a)(B,ne,{summary:Object(ee.jsxs)(\"h4\",{children:[ne,\" is an \",Object(ee.jsx)(\"strong\",{children:\"informed\"}),\" pathfinding algorithm that guarantees \",Object(ee.jsx)(\"strong\",{children:\"optimal (shortest)\"}),\" paths, even in \",Object(ee.jsx)(\"strong\",{children:\"weighted\"}),\" graphs\"]}),description:Object(ee.jsxs)(ee.Fragment,{children:[Object(ee.jsxs)(\"p\",{children:[\"The algorithm explores paths that minimize the function \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"f(node) = g(node) + h(node)\"}),\" where \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"g(node)\"}),\" is the cost of the path from \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:Object(d.a)(Object(d.a)({},_e),{},{color:we[xe.start]}),children:\"start_node\"}),\" to \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"node\"}),\" and \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"h(node)\"}),\" is the \",Object(ee.jsx)(\"strong\",{children:\"heuristic function\"}),\" which estimates the cost of the path from \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"node\"}),\" to \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:Object(d.a)(Object(d.a)({},_e),{},{color:we[xe.target]}),children:\"target_node\"}),\".\"]}),Object(ee.jsxs)(\"p\",{children:[\"The current chosen heuristic function is known as \",Object(ee.jsx)(\"strong\",{children:\"Manhattan Distance\"}),\", which is just a sum of the differences in the \",Object(ee.jsx)(\"strong\",{children:\"x\"}),\" and \",Object(ee.jsx)(\"strong\",{children:\"y\"}),\" co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.\"]})]}),pseudocode:Object(ee.jsx)(Z.a,{language:\"python\",style:$.a,showLineNumbers:!0,wrapLines:!0,customStyle:ke,children:\"open_set = min_heap(start_node: 0)\\nG = { start_node: 0 } # G(n) => tell us the current shortest distance from start node to node n\\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\\nF = { start_node: 0 } # F(n) = G(n) + H(n)\\nprev = {}\\n\\nfor node in nodes:\\n    if node == start_node:\\n        continue\\n    \\n    F[node] = G[node] = H[node] = Infinity\\n    \\nwhile open_set not empty:\\n    curr_node = open_set.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev)\\n        \\n    for neighbour in curr_node.neighbours:\\n        new_G_score = G[curr_node] + weight(edge(curr_node, neighbour))\\n        \\n        if new_G_score < G[curr_node]:\\n            # update all scores\\n            G[neighbour] = new_G_score\\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\\n            F[neighbour] = G[neighbour] + H[neighbour];\\n            prev[neighbour] = curr_node;\\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\\n\\n# no path found\\nreturn\"})}),Object(u.a)(B,re,{summary:Object(ee.jsxs)(\"h4\",{children:[re,\" is an \",Object(ee.jsx)(\"strong\",{children:\"uninformed/blind\"}),\" search algorithm that gurantees finding the \",Object(ee.jsx)(\"strong\",{children:\"optimal (shortest)\"}),\" paths only in \",Object(ee.jsx)(\"strong\",{children:\"unweighted\"}),\" graphs\"]}),pseudocode:Object(ee.jsx)(Z.a,{language:\"python\",style:$.a,showLineNumbers:!0,wrapLines:!0,customStyle:ke,children:\"queue = [start_node]\\nvisited = { start_node: 1 }\\nprev = {}\\n\\nwhile queue.len:\\n    curr_node = queue.dequeue()\\n    \\n    for neighbour in curr_node.neighbours:\\n        if neighbour in visited:\\n            continue # skip nodes that are already visited\\n        \\n        prev[neighbour] = curr_node\\n        queue.enqueue(neighbour)\\n        visited[neighbour] = 1\\n\\n        if neighbour == target_node:\\n            # we path to target_node\\n            return create_path(prev)\\n\\n# no path found \\nreturn\"})}),Object(u.a)(B,ae,{summary:Object(ee.jsxs)(\"h4\",{children:[ae,\" is an \",Object(ee.jsx)(\"strong\",{children:\"uninformed/blind\"}),\" search algorithm that is \",Object(ee.jsx)(\"strong\",{children:\"unoptimal (may or may not find shortest path)\"}),\" and \",Object(ee.jsx)(\"strong\",{children:\"unweighted\"})]}),pseudocode:Object(ee.jsx)(Z.a,{language:\"python\",style:$.a,showLineNumbers:!0,wrapLines:!0,customStyle:ke,children:\"stack = [start_node]\\nvisited = { start_node: 1 }\\n\\nwhile stack.len:\\n    curr_node = stack.pop()\\n    stack.push(curr_node)\\n\\n    if curr_node == target_node:\\n        return stack # our stack is the path to target_node\\n    \\n    flag = False\\n    for neighbour in curr_node.neighbours:\\n        if neighbour in visited:\\n            continue # skip nodes that are already visited\\n        \\n        stack.push(neighbour)\\n        visited[neighbour] = 1\\n        flag = True\\n\\n    if flag:\\n        # no neighbours that need to be visited, pop the node from stack\\n        stack.pop()\\n\\n# no path found \\nreturn\"})}),Object(u.a)(B,ce,{summary:Object(ee.jsxs)(\"h4\",{children:[ce,\" is an \",Object(ee.jsx)(\"strong\",{children:\"informed\"}),\" and \",Object(ee.jsx)(\"strong\",{children:\"greedy\"}),\" pathfinding algorithm that is \",Object(ee.jsx)(\"strong\",{children:\"unoptimal\"}),\" (may or may not find the shortest paths) and \",Object(ee.jsx)(\"strong\",{children:\"unweighted\"})]}),description:Object(ee.jsxs)(ee.Fragment,{children:[Object(ee.jsxs)(\"p\",{children:[\"Similar to \",ne,\", this algorithm explores paths that minimize the function \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"f(node) = h(node)\"}),\" where \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"h(node)\"}),\" is the \",Object(ee.jsx)(\"strong\",{children:\"heuristic function\"}),\" which estimates the cost of the path from \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"node\"}),\" to \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:Object(d.a)(Object(d.a)({},_e),{},{color:we[xe.target]}),children:\"target_node\"}),\". Unlike \",ne,\", \",ce,\" does not perform optimally because it only cares about the estimated distance from \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"node\"}),\" to \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:Object(d.a)(Object(d.a)({},_e),{},{color:we[xe.target]}),children:\"target_node\"}),\", however, fails to optimize for the cost to get from \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:Object(d.a)(Object(d.a)({},_e),{},{color:we[xe.start]}),children:\"start_node\"}),\" to \",Object(ee.jsx)(Z.a,{language:\"text\",style:$.a,customStyle:_e,children:\"node\"}),\".\"]}),Object(ee.jsxs)(\"p\",{children:[\"The current chosen heuristic function is known as \",Object(ee.jsx)(\"strong\",{children:\"Manhattan Distance\"}),\", which is just a sum of the differences in the \",Object(ee.jsx)(\"strong\",{children:\"x\"}),\" and \",Object(ee.jsx)(\"strong\",{children:\"y\"}),\" co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.\"]})]}),pseudocode:Object(ee.jsx)(Z.a,{language:\"python\",style:$.a,showLineNumbers:!0,wrapLines:!0,customStyle:ke,children:\"open_set = min_heap(start_node: 0)\\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\\nF = { start_node: 0 } # F(n) = H(n)\\nprev = {}\\nvisited = {}\\n\\nfor node in nodes:\\n    if node == start_node:\\n        continue\\n    \\n    F[node] = H[node] = Infinity\\n    \\nwhile open_set not empty:\\n    curr_node = open_set.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev)\\n        \\n    for neighbour in curr_node.neighbours:  # check all unvisited neighbours \\n        if neighbout not in visited:\\n            # update all scores\\n            visited[neighbours] = 1\\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\\n            F[neighbour] = H[neighbour];\\n            prev[neighbour] = curr_node;\\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\\n\\n# no path found\\nreturn\"})}),B);Object.freeze(Ae);var Ce=function(e){var t=e.nodeId,n=e.size,a=e.setGridState,c=e.draggingSelection,o=e.setDraggingSelection,l=e.setStartCord,b=e.setTargetCord,h=e.runningAlgo,g=e.selectedObstacle,f=e.startingState,j=Object(r.useState)(f),p=Object(i.a)(j,2),O=p[0],x=p[1];Object(r.useEffect)((function(){a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[f,x]))}))}),[]);var v=function(e){if((e[0]===xe.visited||e[0]===xe.visiting)&&e[1]>xe.wall){var t=we[e[0]],n=we[e[1]],r=.78;e[0]===xe.visiting&&(t=we[xe.visited]);var a=t.match(/\\w\\w/g).map((function(e){return parseInt(e,16)})),c=Object(i.a)(a,3),o=c[0],s=c[1],u=c[2],d=n.match(/\\w\\w/g).map((function(e){return parseInt(e,16)})),l=Object(i.a)(d,3),b=l[0],h=l[1],g=l[2];return\"#\"+Math.round(o+(b-o)*r).toString(16).padStart(2,\"0\")+Math.round(s+(h-s)*r).toString(16).padStart(2,\"0\")+Math.round(u+(g-u)*r).toString(16).padStart(2,\"0\")}return we[e[0]]}(O),w={width:n,height:n,backgroundColor:v,border:\"1px solid \".concat(O[0]===xe.none?\"#3C4046\":v)};h||(c===xe.start||c===xe.target?w.cursor=\"grabbing\":c!==xe.none||O[0]!==xe.start&&O[0]!==xe.target||(w.cursor=\"grab\"));return Object(ee.jsx)(\"div\",{style:w,className:\"node \".concat((O[0]>=xe.wall&&c===xe.none||c===xe.remObstacle)&&\"erasing\",\"\\n        \").concat(c!==xe.remObstacle&&(O[0]<=xe.none||c>=xe.wall)&&!h&&\"ready-to-draw\"),onMouseDown:h?null:function(){return O[0]<=xe.none?(o(xe[g]),x((function(e){return[xe[g],xe.none]})),void a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[[xe[g],xe.none],x]))}))):O[0]>=xe.wall?(x((function(e){return e.slice(1)})),a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[O.slice(1),x]))})),void o(xe.remObstacle)):(O[0]!==xe.start&&O[0]!==xe.target||a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[O.slice(1),x]))})),void o(O[0]))},onMouseUp:h?null:function(){c===xe.start?(l(t),a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[O,x]))}))):c===xe.target&&(b(t),a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[O,x]))}))),c!==xe.none&&o(xe.none)},onMouseEnter:h?null:function(){c===xe.remObstacle&&O[0]>=xe.wall?(x((function(e){return e.slice(1)})),a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[O.slice(1),x]))}))):c===xe[g]&&O[0]<=xe.none?(x((function(e){return[xe[g],xe.none]})),a((function(e){return Object(d.a)(Object(d.a)({},e),{},Object(u.a)({},t,[[xe[g],xe.none],x]))}))):(c===xe.start||c===xe.target)&&x((function(e){return[c].concat(Object(s.a)(e))}))},onMouseLeave:h?null:function(){c!==xe.start&&c!==xe.target||x((function(e){return e.slice(1)}))}})},Ne=a.a.memo((function(e){var t=e.rows,n=e.cols,a=e.padding,c=e.nodeSize,o=e.setGridState,s=e.selectedObstacle,u=e.setStartCord,d=e.setTargetCord,l=e.runningAlgo,b=Object(r.useState)(xe.none),h=Object(i.a)(b,2),g=h[0],f=h[1];console.log(\"RERENDERING GRID\");for(var j=[],p=0;p<t;p++)for(var O=0;O<n;O++){var x=\"\".concat(p,\":\").concat(O),v=[xe.none];1===p&&1===O?v.unshift(xe.start):p===t-2&&O===n-2&&v.unshift(xe.target),j.push(Object(ee.jsx)(Ce,{nodeId:x,size:c,setGridState:o,draggingSelection:g,setDraggingSelection:f,setStartCord:u,setTargetCord:d,runningAlgo:l,selectedObstacle:s,startingState:v},x))}var w={width:n*c+n,height:t*c+t},m={paddingLeft:a,paddingRight:a};return Object(ee.jsx)(\"div\",{style:m,children:Object(ee.jsx)(\"div\",{className:\"grid\",style:w,children:j})})})),Ge=function(e){var t=e.clearObstacles,n=e.runningAlgo;return Object(ee.jsx)(\"div\",{className:\"button \".concat(n?\"disabled\":\"red\"),onClick:n?null:t,children:\"Clear Obstacles\"})},Re=function(e){var t=e.clearPath,n=e.runningAlgo;return Object(ee.jsx)(\"div\",{className:\"button \".concat(n?\"disabled\":\"orange\"),onClick:n?null:t,children:\"Clear Path\"})},Ie=function(e){var t=e.rows,n=e.cols,r=e.selectedAlgo,a=e.gridState,c=(e.setGridState,e.startCord),o=e.targetCord,i=e.clearForReRun,u=e.runningAlgo,d=e.setRunningAlgo,l=function(){var e=Object(g.a)(b.a.mark((function e(){var u,l,h;return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(c!==o){e.next=2;break}return e.abrupt(\"return\");case 2:return i(),d(!0),console.log(\"STARTING: \",r),u=[],e.next=8,oe[r](c,o,a,t,n,ie[r]);case 8:u=e.sent,console.log(\"ENDED: \",r),l=b.a.mark((function e(t){return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,v(7);case 2:(0,a[u[t]][1])((function(e){return[xe.path].concat(Object(s.a)(a[u[t]][0]))}));case 4:case\"end\":return e.stop()}}),e)})),h=u.length-1;case 12:if(!(h>=0)){e.next=17;break}return e.delegateYield(l(h),\"t0\",14);case 14:h--,e.next=12;break;case 17:d(!1);case 18:case\"end\":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return Object(ee.jsx)(\"div\",{className:\"button \".concat(u?\"disabled\":\"green\"),onClick:u?null:l,children:\"Run\"})},Me=n.p+\"static/media/down_arrow.8fed4a28.svg\",De=n.p+\"static/media/weight.e51e9729.svg\",ze=n.p+\"static/media/weight_unfilled.cc3c5f2f.svg\",Te=n.p+\"static/media/optimal.5649a19a.svg\",Fe=n.p+\"static/media/optimal_unfilled.e461ee2c.svg\",We=function(e){var t=e.setSelection,n=e.items,a=e.disabled,c=e.dropDownWidth,o=e.isAlgoSelector,s=e.isObstacleSelector,u=e.isTerrainSelector,d=Object(r.useState)(!1),l=Object(i.a)(d,2),b=l[0],h=l[1],g=Object(r.useState)(n[0]),f=Object(i.a)(g,2),j=f[0],p=f[1],v=Object(r.useState)(0),w=Object(i.a)(v,2),m=w[0],y=w[1];Object(r.useEffect)((function(){a&&s&&(p(n[0]),y(0),h(!1),t(n[0]))}),[a]),Object(r.useEffect)((function(){p(n[0]),y(0),h(!1),t(n[0])}),[n]);for(var S={width:c},k=[],_=function(e){var r;k.push(Object(ee.jsxs)(\"div\",{style:S,className:\"dropdown-list-item \".concat(e===m&&\"selected\",\" \").concat(e===n.length-1&&\"last\"),onClick:function(){var r;r=e,h((function(e){return!e})),p(n[r]),y(r),t(n[r])},children:[n[e],o&&(O(n[e])?Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:ze,title:\"\".concat(n[e],\" is not a weighted path-finding algorithm.\"),alt:\"\".concat(n[e],\" is not a weighted path-finding algorithm.\")}):Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:De,title:\"\".concat(n[e],\" is a weighted path-finding algorithm.\"),alt:\"\".concat(n[e],\" is a weighted path-finding algorithm.\")})),o&&(r=n[e],de.includes(r)?Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:Te,title:\"\".concat(n[e],\" guarantees shortest path.\"),alt:\"\".concat(n[e],\" guarantees shortest path.\")}):Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:Fe,title:\"\".concat(n[e],\" does not guarantee shortest path.\"),alt:\"\".concat(n[e],\" does not guarantee shortest path.\")})),s&&Object(ee.jsx)(\"div\",{style:{backgroundColor:we[xe[Se[n[e]]]]},className:\"obstacle-preview\",children:\" \"}),u&&(x(n[e])?Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:ze,title:\"\".concat(n[e],\" does not use weighted obstacles.\"),alt:\"\".concat(n[e],\" does not use weighted obstacles.\")}):Object(ee.jsx)(\"img\",{className:\"algo-property-badge\",src:De,title:\"\".concat(n[e],\" makes use of weighted obstacles.\"),alt:\"\".concat(n[e],\" makes use of weighted obstacles.\")}))]},e))},A=0;A<n.length;A++)_(A);return Object(ee.jsxs)(\"div\",{className:\"dropdown\",children:[Object(ee.jsxs)(\"div\",{style:S,className:\"dropdown-header \".concat(b&&\"open\",\" \").concat(a&&\"disabled\"),onClick:a?null:function(){h((function(e){return!e}))},children:[j,!a&&Object(ee.jsx)(\"img\",{className:\"down-arrow\",src:Me,alt:\"\"})]}),Object(ee.jsx)(\"div\",{style:{display:b?\"flex\":\"none\"},className:\"dropdown-list\",children:k})]})},Ee=function(e){var t=e.toggleInfoBox;return Object(ee.jsx)(\"div\",{className:\"button blue\",onClick:t,children:\"Info\"})},Be=function(e){var t=e.rows,n=e.cols,r=e.gridState,a=e.setGridState,c=e.startCord,o=e.targetCord,i=e.clearForReRun,s=e.runningAlgo,u=e.setRunningAlgo,d=e.dropDownWidth,l=e.toggleInfoBox,b=e.selectedAlgo,h=e.setSelectedAlgo;return Object(ee.jsxs)(\"div\",{className:\"choose-algo\",children:[Object(ee.jsx)(We,{setSelection:h,items:se,disabled:s,dropDownWidth:d,isAlgoSelector:!0,isObstacleSelector:!1}),Object(ee.jsx)(Ee,{toggleInfoBox:l}),Object(ee.jsx)(Ie,{rows:t,cols:n,selectedAlgo:b,gridState:r,setGridState:a,startCord:c,targetCord:o,clearForReRun:i,runningAlgo:s,setRunningAlgo:u})]})},He=function(e){var t=e.rows,n=e.cols,r=e.selectedTerrainAlgo,a=e.gridState,c=e.setGridState,o=e.startCord,i=e.targetCord,s=e.runningAlgo,u=e.setRunningAlgo,d=e.resetGrid,l=function(){var e=Object(g.a)(b.a.mark((function e(){return b.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d();case 2:return u(!0),console.log(\"STARTING: \",r),e.next=6,pe[r](o,i,a,c,t,n,Oe[r]);case 6:console.log(\"ENDED: \",r),u(!1);case 8:case\"end\":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return Object(ee.jsx)(\"div\",{className:\"button \".concat(s?\"disabled\":\"green\"),onClick:s?null:l,children:\"Run\"})},Le=function(e){var t=e.rows,n=e.cols,a=e.gridState,c=e.setGridState,o=e.startCord,s=e.targetCord,u=e.runningAlgo,d=e.setRunningAlgo,l=e.dropDownWidth,b=e.resetGrid,h=e.selectedAlgo,g=Object(r.useState)(fe[0]),f=Object(i.a)(g,2),j=f[0],p=f[1];return Object(ee.jsxs)(\"div\",{className:\"choose-terrain\",children:[Object(ee.jsx)(We,{setSelection:p,items:O(h)?je:fe,disabled:!1,dropDownWidth:l,isAlgoSelector:!1,isObstacleSelector:!1,isTerrainSelector:!0}),Object(ee.jsx)(He,{rows:t,cols:n,selectedTerrainAlgo:j,gridState:a,setGridState:c,startCord:o,targetCord:s,runningAlgo:u,setRunningAlgo:d,resetGrid:b})]})},qe=function(e){var t=e.setSelectedObstacle,n=e.weightedObsDisabled,r=e.dropDownWidth;return Object(ee.jsx)(\"div\",{className:\"choose-obstacle\",children:Object(ee.jsx)(We,{setSelection:function(e){console.log(\"selected obs: \",Se[e]),t(Se[e])},items:ye,disabled:n,dropDownWidth:r,isAlgoSelector:!1,isObstacleSelector:!0})})},Pe=function(e){var t=e.rows,n=e.cols,r=e.runningAlgo,a=e.setRunningAlgo,c=e.padding,o=e.height,i=e.gridState,s=e.setGridState,u=e.startCord,d=e.targetCord,l=e.clearObstacles,b=e.clearPath,h=e.setSelectedObstacle,g=e.weightedObsDisabled,f=e.toggleInfoBox,j=e.selectedAlgo,p=e.setSelectedAlgo,O=e.resetGrid,x={padding:c,paddingBottom:c/2,height:o};return Object(ee.jsxs)(\"div\",{style:x,className:\"header\",children:[Object(ee.jsx)(Ge,{clearObstacles:l,runningAlgo:r}),Object(ee.jsx)(Re,{clearPath:b,runningAlgo:r}),Object(ee.jsx)(Be,{rows:t,cols:n,gridState:i,setGridState:s,startCord:u,targetCord:d,clearForReRun:b,runningAlgo:r,setRunningAlgo:a,dropDownWidth:260,toggleInfoBox:f,selectedAlgo:j,setSelectedAlgo:p}),Object(ee.jsx)(qe,{setSelectedObstacle:h,weightedObsDisabled:g,dropDownWidth:190}),Object(ee.jsx)(Le,{rows:t,cols:n,gridState:i,setGridState:s,startCord:u,targetCord:d,runningAlgo:r,setRunningAlgo:a,resetGrid:O,selectedAlgo:j,dropDownWidth:200})]})},Ue=n.p+\"static/media/close.494fd48f.svg\",Je=function(e){var t=e.infoBoxOpen,n=e.toggleInfoBox,a=e.selectedAlgo,c=e.startingPos,o=Object(r.useState)(!1),s=Object(i.a)(o,2),u=s[0],d=s[1],l=Object(r.useState)(c),b=Object(i.a)(l,2),h=b[0],g=b[1],f=function(e){d(!1)};return Object(ee.jsxs)(\"div\",{style:{left:\"\".concat(h[0],\"px\"),top:\"\".concat(h[1],\"px\")},className:\"info-box \".concat(t?\"visible\":\"hidden\"),onMouseMove:function(e){u&&g((function(t){return[t[0]+e.movementX,t[1]+e.movementY]}))},onMouseUp:f,onMouseLeave:f,children:[Object(ee.jsx)(\"img\",{className:\"close-info-icon\",src:Ue,onClick:n,alt:\"Close info box\"}),Object(ee.jsx)(\"h1\",{onMouseDown:function(e){d(!0)},children:a}),Ae[a]&&Ae[a].summary||Object(ee.jsx)(\"p\",{children:\"No information.\"}),Ae[a]&&Ae[a].description,Ae[a]&&Ae[a].pseudocode&&Object(ee.jsx)(\"p\",{className:\"identifier\",children:\"Pseudocode:\"}),Ae[a]&&Ae[a].pseudocode]})};var Ye=function(){var e=Object(r.useState)({}),t=Object(i.a)(e,2),n=t[0],a=t[1],c=Object(r.useState)(\"wall\"),o=Object(i.a)(c,2),s=o[0],u=o[1],d=Object(r.useState)(!1),l=Object(i.a)(d,2),b=l[0],h=l[1],g=Object(r.useState)(se[0]),f=Object(i.a)(g,2),j=f[0],p=f[1],x=Object(r.useState)(0),v=Object(i.a)(x,2),w=v[0],m=v[1],y=Object(r.useState)(0),S=Object(i.a)(y,2),k=S[0],_=S[1],A=Object(r.useState)(\"0:0\"),C=Object(i.a)(A,2),N=C[0],G=C[1],R=Object(r.useState)(\"0:0\"),I=Object(i.a)(R,2),M=I[0],D=I[1],z=Object(r.useState)(!1),T=Object(i.a)(z,2),F=T[0],W=T[1],E=Object(r.useState)(!1),B=Object(i.a)(E,2),H=B[0],L=B[1];Object(r.useEffect)((function(){console.log(\"RESETTING BOARD\"),q()}),[]);var q=function(){var e=window.innerHeight-180,t=window.innerWidth-60,n=parseInt(e/29),r=parseInt(t/29);W(!1),m(n),_(r),G(\"1:1\"),D(\"\".concat(n-2,\":\").concat(r-2))},P=function(){console.log(\"CLEARING PATH\");for(var e=0;e<w;e++)for(var t=function(t){var r=\"\".concat(e,\":\").concat(t),a=n[r][0],c=n[r][1],o=a[0];(o===xe.start||o===xe.target)&&a[1]<=xe.visiting?a.splice(1,1):o<=xe.visiting&&a.splice(0,1),c((function(e){return a}))},r=0;r<k;r++)t(r)},U=function(){h((function(e){return!e}))};return Object(ee.jsxs)(ee.Fragment,{children:[Object(ee.jsx)(Pe,{rows:w,cols:k,runningAlgo:F,setRunningAlgo:W,padding:30,height:90,gridState:n,setGridState:a,startCord:N,targetCord:M,clearObstacles:function(){for(var e={},t=!1,r=0;r<w;r++)for(var c=function(a){var c=\"\".concat(r,\":\").concat(a),o=n[c][0],i=n[c][1],s=o[0];if(e[c]=[o,i],(s===xe.start||s===xe.target)&&o[1]>=xe.wall)return t=!0,o.splice(1,1),i((function(e){return o})),e[c]=[o,i],\"continue\";s<=xe.visiting&&(s=o[1]),s>=xe.wall&&(t=!0,i((function(e){return[xe.none]})),e[c]=[[xe.none],i])},o=0;o<k;o++)c(o);t&&a((function(t){return e}))},clearPath:P,setSelectedObstacle:u,weightedObsDisabled:H,toggleInfoBox:U,selectedAlgo:j,setSelectedAlgo:function(e){var t=O(e);L(t),p(e),t&&(P(),function(){for(var e={},t=!1,r=0;r<w;r++)for(var c=function(a){var c=\"\".concat(r,\":\").concat(a),o=n[c][0],i=n[c][1],s=o[0];if(e[c]=[o,i],(s===xe.start||s===xe.target)&&o[1]>xe.wall)return t=!0,o.splice(1,1),i((function(e){return o})),e[c]=[o,i],\"continue\";s<=xe.visiting&&(s=o[1]),s>xe.wall&&(t=!0,i((function(e){return[xe.none]})),e[c]=[[xe.none],i])},o=0;o<k;o++)c(o);t&&a((function(t){return e}))}())},resetGrid:function(){for(var e={},t=0;t<w;t++)for(var r=function(r){var a=\"\".concat(t,\":\").concat(r),c=n[a][0],o=n[a][1],i=c[0],s=[xe.none];i!==xe.start&&i!==xe.target||s.unshift(i),o((function(e){return s})),e[a]=[s,o]},c=0;c<k;c++)r(c);a((function(t){return e}))}}),Object(ee.jsx)(Ne,{rows:w,cols:k,padding:30,nodeSize:28,setGridState:a,selectedObstacle:s,setStartCord:G,setTargetCord:D,runningAlgo:F}),Object(ee.jsx)(Je,{infoBoxOpen:b,toggleInfoBox:U,selectedAlgo:j,startingPos:[window.innerWidth/2-285,150]})]})},Xe=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,220)).then((function(t){var n=t.getCLS,r=t.getFID,a=t.getFCP,c=t.getLCP,o=t.getTTFB;n(e),r(e),a(e),c(e),o(e)}))};o.a.render(Object(ee.jsx)(a.a.StrictMode,{children:Object(ee.jsx)(Ye,{})}),document.getElementById(\"root\")),Xe()}},[[215,1,2]]]);","name":"static/js/main.5eb9b1fb.chunk.js","map":{"version":3,"sources":["static/js/main.5eb9b1fb.chunk.js"],"names":["this","push","21","module","exports","__webpack_require__","215","__webpack_exports__","r","react","react_default","n","react_dom","react_dom_default","slicedToArray","toConsumableArray","defineProperty","objectSpread2","regenerator","regenerator_default","createForOfIteratorHelper","asyncToGenerator","helper_getNeighbourNodes","node","rows","cols","gridState","row","parseInt","split","col","res","concat","nodeTypeEnum","wall","createPath","startCord","targetCord","prevNodes","cord","path","helper_findMinPriorityNode","minPQ","minPriority","Math","min","apply","Object","values","key","helper_isAlgoUnweighted","algo","unweightedPathAlgos","includes","helper_isTerrainAlgoUnweighted","unweightedTerrainAlgos","sleep","ms","Promise","resolve","setTimeout","getRandomNum","num1","num2","max","floor","random","manhattanDistanceHeuristic","currNodeCord","currRow","currCol","targetRow","targetCol","abs","dijkstras","_ref","a","mark","_callee","timeout","distance","visited","x","y","minKey","neighbours","_iterator","_step","neighbour","currPath","wrap","_context","prev","next","Infinity","keys","length","nodeStateFunc","prevState","slice","abrupt","s","done","value","nodeWeight","_nodeStateFunc","visiting","t0","e","f","finish","stop","_x","_x2","_x3","_x4","_x5","_x6","arguments","dfs","stack","currCord","unvisitedNeighbourFound","none","pop","shift","unshift","splice","bfs","queue","aStar","openSet","G","H","F","currNode","currGScore","err","greedyBestFirstSearch","console","log","recursiveDivision","setGridState","_y","_currCord","_y2","_currCord2","_y3","_currCord3","recursiveDivision_setWall","divide","_x7","_ref2","_callee2","startRow","endRow","startCol","endCol","width","height","orientation","sCol","sRow","skip","randRow","i","_sRow","_sCol","_skip","randCol","_i","_currCord4","_context2","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","_x18","state","start","target","Grad","z","prototype","dot2","dot3","_algoFunctions","_algoSleepTimes","_terrainFunctions","_terrainAlgoSleepTime","_nodeColorClass","_nodeColors","_nodeWeight","_obsEnum","_pathfindingAlgoInfo","grad3","p","perm","Array","gradP","seed","_seed","v","F2","sqrt","G2","simplex2","xin","yin","i1","j1","j","t","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t1","t2","simplexNoise","gridMap","_loop","weighted100","weighted80","weighted60","weighted40","weighted20","_newState","newState","randomWeighted","default_highlight","atom_one_dark","jsx_runtime","DIJKSTRAS","ASTAR","BFS","DFS","GREEDY_BEST_FIRST_SEARCH","algoFunctions","freeze","algoSleepTimes","allPathAlgos","optimalPathAlgos","RECURSIVE_DIVISION","SIMPLEX_NOISE","RANDOM_UNWEIGHTED","RANDOM_WEIGHTED","allTerrainAlgos","terrainFunctions","terrainAlgoSleepTimes","remObstacle","nodeColorClass","nodeColors","obstacleTypes","obsEnum","codeBlockCustomStyle","fontSize","backgroundColor","borderRadius","padding","lineHeight","maxHeight","marginTop","marginBottom","inLineCodeBlockCustomStyle","display","color","fontWeight","pathfindingAlgoInfo","summary","children","description","pseudocode","language","style","showLineNumbers","wrapLines","customStyle","components_Node","nodeId","size","draggingSelection","setDraggingSelection","setStartCord","setTargetCord","runningAlgo","selectedObstacle","startingState","_useState","_useState2","nodeState","setNodeState","nodeColor","colorA","colorB","amount","_colorA$match$map","match","map","c","_colorA$match$map2","rA","gA","bA","_colorB$match$map","_colorB$match$map2","rB","gB","bB","round","toString","padStart","helper_getNodeColor","nodeStyle","border","cursor","className","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","components_Grid","memo","nodeSize","nodes","gridDimensions","containerStyle","paddingLeft","paddingRight","components_Reset","clearObstacles","onClick","components_Clear","clearPath","components_Visualize","selectedAlgo","clearForReRun","setRunningAlgo","run","sent","delegateYield","down_arrow","weight","weight_unfilled","optimal","optimal_unfilled","components_CustomDropdown","setSelection","items","disabled","dropDownWidth","isAlgoSelector","isObstacleSelector","isTerrainSelector","dropDownOpen","setDropDownOpen","_useState3","_useState4","selectedVal","setSelectedVal","_useState5","_useState6","selectedId","setSelectedId","dropdownItems","id","src","title","alt","components_ShowInfo","toggleInfoBox","components_ChooseAlgorithm","setSelectedAlgo","components_GenerateTerrain","selectedTerrainAlgo","resetGrid","components_ChooseTerrain","setSelectedTerrainAlgo","components_ChooseObstacle","setSelectedObstacle","weightedObsDisabled","obstacleName","components_Header","paddingBottom","images_close","components_InfoBox","infoBoxOpen","startingPos","dragging","setDragging","boxCord","setBoxCord","disableDragging","left","top","onMouseMove","movementX","movementY","src_App","setInfoBoxOpen","_useState7","_useState8","_useState9","_useState10","setRows","_useState11","_useState12","setCols","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","setWeightedObsDisabled","initializeGrid","adjustedWinHeight","window","innerHeight","adjustedWinWidth","innerWidth","currRows","currCols","currState","updateGrid","_loop2","algoName","unweightedAlgo","_loop3","clearWeightedObstacles","_loop4","navBarHeight","src_reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonppathfinding-algorithms-visualizer\"] = this[\"webpackJsonppathfinding-algorithms-visualizer\"] || []).push([[0],{\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(2);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(14);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./src/index.css\nvar src = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules\nvar toConsumableArray = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(3);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\nvar createForOfIteratorHelper = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/utils/helper.js\nvar helper_getNodeColor=function getNodeColor(nodeState){if((nodeState[0]===nodeTypeEnum.visited||nodeState[0]===nodeTypeEnum.visiting)&&nodeState[1]>nodeTypeEnum.wall){var colorA=nodeColors[nodeState[0]];var colorB=nodeColors[nodeState[1]];var amount=0.78;if(nodeState[0]===nodeTypeEnum.visiting){colorA=nodeColors[nodeTypeEnum.visited];}// we need to mix colors\nvar _colorA$match$map=colorA.match(/\\w\\w/g).map(function(c){return parseInt(c,16);}),_colorA$match$map2=Object(slicedToArray[\"a\" /* default */])(_colorA$match$map,3),rA=_colorA$match$map2[0],gA=_colorA$match$map2[1],bA=_colorA$match$map2[2];var _colorB$match$map=colorB.match(/\\w\\w/g).map(function(c){return parseInt(c,16);}),_colorB$match$map2=Object(slicedToArray[\"a\" /* default */])(_colorB$match$map,3),rB=_colorB$match$map2[0],gB=_colorB$match$map2[1],bB=_colorB$match$map2[2];var r=Math.round(rA+(rB-rA)*amount).toString(16).padStart(2,'0');var g=Math.round(gA+(gB-gA)*amount).toString(16).padStart(2,'0');var b=Math.round(bA+(bB-bA)*amount).toString(16).padStart(2,'0');return'#'+r+g+b;}return nodeColors[nodeState[0]];};var helper_getNeighbourNodes=function getNeighbourNodes(node,rows,cols,gridState){var row=parseInt(node.split(':')[0]);var col=parseInt(node.split(':')[1]);var res=[];if(row-1>=0&&gridState[\"\".concat(row-1,\":\").concat(col)][0][0]!==nodeTypeEnum.wall){res.push(\"\".concat(row-1,\":\").concat(col));}if(col+1<cols&&gridState[\"\".concat(row,\":\").concat(col+1)][0][0]!==nodeTypeEnum.wall){res.push(\"\".concat(row,\":\").concat(col+1));}if(row+1<rows&&gridState[\"\".concat(row+1,\":\").concat(col)][0][0]!==nodeTypeEnum.wall){res.push(\"\".concat(row+1,\":\").concat(col));}if(col-1>=0&&gridState[\"\".concat(row,\":\").concat(col-1)][0][0]!==nodeTypeEnum.wall){res.push(\"\".concat(row,\":\").concat(col-1));}return res;};var createPath=function createPath(startCord,targetCord,prevNodes){var cord=targetCord;var path=[];while(true){cord=prevNodes[cord];if(cord===startCord){break;}path.push(cord);}return path;};var helper_findMinPriorityNode=function findMinPriorityNode(minPQ){var minPriority=Math.min.apply(Math,Object(toConsumableArray[\"a\" /* default */])(Object.values(minPQ)));for(var key in minPQ){if(minPQ[key]===minPriority){return key;}}};var helper_isAlgoUnweighted=function isAlgoUnweighted(algo){return unweightedPathAlgos.includes(algo);};var helper_isTerrainAlgoUnweighted=function isTerrainAlgoUnweighted(algo){return unweightedTerrainAlgos.includes(algo);};var helper_isAlgoOptimal=function isAlgoOptimal(algo){return optimalPathAlgos.includes(algo);};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};var getRandomNum=function getRandomNum(num1,num2){if(num1===num2){return num1;}var min=Math.min(num1,num2);var max=Math.max(num1,num2);return Math.floor(Math.random()*(max-min+1)+min);};// this implements our H score heuristic\n// current heuristic: take the absolute sum of the difference in node N's co-ordinates and target's co-ordinates. Hence, the greater the distance between N and target, the greater the H score for node N. This is known as the \"Manhattan Distance\"\nvar manhattanDistanceHeuristic=function manhattanDistanceHeuristic(currNodeCord,targetCord){if(currNodeCord===targetCord){return 0;}var currRow=parseInt(currNodeCord.split(':')[0]);var currCol=parseInt(currNodeCord.split(':')[1]);var targetRow=parseInt(targetCord.split(':')[0]);var targetCol=parseInt(targetCord.split(':')[1]);return Math.abs(currRow-targetRow)+Math.abs(currCol-targetCol);};\n// CONCATENATED MODULE: ./src/algorithms/path_finding/dijkstras.js\nvar dijkstras=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,rows,cols,timeout){var distance,prevNodes,minPQ,visited,x,y,cord,minKey,nodeStateFunc,neighbours,_iterator,_step,neighbour,currPath,_nodeStateFunc;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:distance={};prevNodes={};minPQ={};visited={};distance[startCord]=0;minPQ[startCord]=0;for(x=0;x<rows;x++){for(y=0;y<cols;y++){cord=\"\".concat(x,\":\").concat(y);if(cord!==startCord){distance[cord]=Infinity;}}}case 7:if(!(Object.keys(minPQ).length>0)){_context.next=42;break;}minKey=helper_findMinPriorityNode(minPQ);delete minPQ[minKey];visited[minKey]=1;if(!(minKey!==startCord&&minKey!==targetCord)){_context.next=16;break;}nodeStateFunc=gridState[minKey][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.visited].concat(Object(toConsumableArray[\"a\" /* default */])(prevState.slice(1)));});_context.next=18;break;case 16:if(!(minKey===targetCord)){_context.next=18;break;}return _context.abrupt(\"return\",createPath(startCord,targetCord,prevNodes));case 18:neighbours=helper_getNeighbourNodes(minKey,rows,cols,gridState);_iterator=Object(createForOfIteratorHelper[\"a\" /* default */])(neighbours);_context.prev=20;_iterator.s();case 22:if((_step=_iterator.n()).done){_context.next=30;break;}neighbour=_step.value;currPath=distance[minKey]+nodeWeight[gridState[neighbour][0][0]];if(!(neighbour in visited)){_context.next=27;break;}return _context.abrupt(\"continue\",28);case 27:if(neighbour in minPQ&&currPath<distance[neighbour]||!(neighbour in minPQ)){distance[neighbour]=currPath;prevNodes[neighbour]=minKey;minPQ[neighbour]=currPath;if(neighbour!==targetCord){_nodeStateFunc=gridState[neighbour][1];_nodeStateFunc(function(prevState){return[nodeTypeEnum.visiting].concat(Object(toConsumableArray[\"a\" /* default */])(prevState));});}}case 28:_context.next=22;break;case 30:_context.next=35;break;case 32:_context.prev=32;_context.t0=_context[\"catch\"](20);_iterator.e(_context.t0);case 35:_context.prev=35;_iterator.f();return _context.finish(35);case 38:_context.next=40;return sleep(timeout);case 40:_context.next=7;break;case 42:return _context.abrupt(\"return\",[]);case 43:case\"end\":return _context.stop();}}},_callee,null,[[20,32,35,38]]);}));return function dijkstras(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/path_finding/dfs.js\nvar dfs=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,rows,cols,timeout){var stack,visited,currCord,nodeStateFunc,_nodeStateFunc,neighbours,unvisitedNeighbourFound,_iterator,_step,neighbour;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:stack=[startCord];visited=Object(defineProperty[\"a\" /* default */])({},startCord,1);case 2:if(!(stack.length>0)){_context.next=37;break;}currCord=stack[0];if(currCord!==targetCord&&currCord!==startCord){nodeStateFunc=gridState[currCord][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.visiting,nodeTypeEnum.none];});}if(!(currCord===targetCord)){_context.next=9;break;}stack.pop();stack.shift();return _context.abrupt(\"return\",stack);case 9:if(currCord!==startCord){visited[currCord]=1;_nodeStateFunc=gridState[currCord][1];_nodeStateFunc(function(prevState){return[nodeTypeEnum.visited,nodeTypeEnum.none];});}neighbours=helper_getNeighbourNodes(currCord,rows,cols,gridState);unvisitedNeighbourFound=false;_iterator=Object(createForOfIteratorHelper[\"a\" /* default */])(neighbours);_context.prev=13;_iterator.s();case 15:if((_step=_iterator.n()).done){_context.next=24;break;}neighbour=_step.value;if(!(neighbour in visited)){_context.next=19;break;}return _context.abrupt(\"continue\",22);case 19:stack.unshift(neighbour);unvisitedNeighbourFound=true;return _context.abrupt(\"break\",24);case 22:_context.next=15;break;case 24:_context.next=29;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](13);_iterator.e(_context.t0);case 29:_context.prev=29;_iterator.f();return _context.finish(29);case 32:if(!unvisitedNeighbourFound){stack.splice(0,1);}_context.next=35;return sleep(timeout);case 35:_context.next=2;break;case 37:return _context.abrupt(\"return\",[]);case 38:case\"end\":return _context.stop();}}},_callee,null,[[13,26,29,32]]);}));return function dfs(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/path_finding/bfs.js\nvar bfs=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,rows,cols,timeout){var queue,visited,prevNodes,currCord,nodeStateFunc,neighbours,_iterator,_step,neighbour,_nodeStateFunc;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queue=[startCord];visited=Object(defineProperty[\"a\" /* default */])({},startCord,1);prevNodes={};case 3:if(!(queue.length>0)){_context.next=35;break;}currCord=queue.pop();if(currCord!==startCord&&currCord!==targetCord){nodeStateFunc=gridState[currCord][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.visited,nodeTypeEnum.none];});}neighbours=helper_getNeighbourNodes(currCord,rows,cols,gridState);_iterator=Object(createForOfIteratorHelper[\"a\" /* default */])(neighbours);_context.prev=8;_iterator.s();case 10:if((_step=_iterator.n()).done){_context.next=23;break;}neighbour=_step.value;if(!(neighbour in visited)){_context.next=14;break;}return _context.abrupt(\"continue\",21);case 14:prevNodes[neighbour]=currCord;queue.unshift(neighbour);visited[neighbour]=1;if(!(neighbour===targetCord)){_context.next=19;break;}return _context.abrupt(\"return\",createPath(startCord,targetCord,prevNodes));case 19:_nodeStateFunc=gridState[neighbour][1];_nodeStateFunc(function(prevState){return[nodeTypeEnum.visiting,nodeTypeEnum.none];});case 21:_context.next=10;break;case 23:_context.next=28;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](8);_iterator.e(_context.t0);case 28:_context.prev=28;_iterator.f();return _context.finish(28);case 31:_context.next=33;return sleep(timeout);case 33:_context.next=3;break;case 35:return _context.abrupt(\"return\",[]);case 36:case\"end\":return _context.stop();}}},_callee,null,[[8,25,28,31]]);}));return function bfs(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/path_finding/aStar.js\nvar aStar=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,rows,cols,timeout){var openSet,G,H,F,visited,prevNodes,x,y,cord,currNode,nodeStateFunc,neighbours,_iterator,_step,neighbour,currGScore,_nodeStateFunc;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:openSet=Object(defineProperty[\"a\" /* default */])({},startCord,0);G=Object(defineProperty[\"a\" /* default */])({},startCord,0);// G(n) => tell us the current shortest distance from start node to node n\nH=Object(defineProperty[\"a\" /* default */])({},startCord,0);// H(n) => tells us the estimated distance from node n to target node\nF=Object(defineProperty[\"a\" /* default */])({},startCord,0);// F(n) = G(n) + H(n)\nvisited={};prevNodes={};// intialize all the scores to infinity for all nodes !== start_node\nfor(x=0;x<rows;x++){for(y=0;y<cols;y++){cord=\"\".concat(x,\":\").concat(y);if(cord!==startCord){F[cord]=G[cord]=H[cord]=Infinity;}}}case 7:if(!(Object.keys(openSet).length>0)){_context.next=24;break;}currNode=helper_findMinPriorityNode(openSet);delete openSet[currNode];if(!(currNode!==startCord&&currNode!==targetCord)){_context.next=15;break;}nodeStateFunc=gridState[currNode][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.visited].concat(Object(toConsumableArray[\"a\" /* default */])(prevState.slice(1)));});_context.next=17;break;case 15:if(!(currNode===targetCord)){_context.next=17;break;}return _context.abrupt(\"return\",createPath(startCord,targetCord,prevNodes));case 17:neighbours=helper_getNeighbourNodes(currNode,rows,cols,gridState);_iterator=Object(createForOfIteratorHelper[\"a\" /* default */])(neighbours);try{for(_iterator.s();!(_step=_iterator.n()).done;){neighbour=_step.value;currGScore=G[currNode]+nodeWeight[gridState[neighbour][0][0]];if(currGScore<G[neighbour]){if(neighbour!==startCord&&neighbour!==targetCord&&!(neighbour in visited)){_nodeStateFunc=gridState[neighbour][1];_nodeStateFunc(function(prevState){return[nodeTypeEnum.visiting].concat(Object(toConsumableArray[\"a\" /* default */])(prevState));});}visited[neighbour]=1;// newly calculated G score of neighbour is lower than the one in the table\n// update all the scores\nG[neighbour]=currGScore;H[neighbour]=manhattanDistanceHeuristic(neighbour,targetCord);F[neighbour]=G[neighbour]+H[neighbour];prevNodes[neighbour]=currNode;openSet[neighbour]=F[neighbour];}}}catch(err){_iterator.e(err);}finally{_iterator.f();}_context.next=22;return sleep(timeout);case 22:_context.next=7;break;case 24:return _context.abrupt(\"return\",[]);case 25:case\"end\":return _context.stop();}}},_callee);}));return function aStar(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/path_finding/greedyBestFirstSearch.js\nvar greedyBestFirstSearch=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,rows,cols,timeout){var openSet,H,F,prevNodes,visited,x,y,cord,currNode,nodeStateFunc,neighbours,_iterator,_step,neighbour,_nodeStateFunc;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:openSet=Object(defineProperty[\"a\" /* default */])({},startCord,0);H=Object(defineProperty[\"a\" /* default */])({},startCord,0);// H(n) => tells us the estimated distance from node n to target node\nF=Object(defineProperty[\"a\" /* default */])({},startCord,0);// F(n) = H(n)\nprevNodes={};visited={};// intialize all the scores to infinity for all node !== start node\nfor(x=0;x<rows;x++){for(y=0;y<cols;y++){cord=\"\".concat(x,\":\").concat(y);if(cord!==startCord){F[cord]=H[cord]=Infinity;}}}case 6:if(!(Object.keys(openSet).length>0)){_context.next=24;break;}currNode=helper_findMinPriorityNode(openSet);delete openSet[currNode];if(!(currNode!==startCord&&currNode!==targetCord)){_context.next=14;break;}nodeStateFunc=gridState[currNode][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.visited].concat(Object(toConsumableArray[\"a\" /* default */])(prevState.slice(1)));});_context.next=17;break;case 14:if(!(currNode===targetCord)){_context.next=17;break;}console.log(\"DONNEE\");// we have reached target, return path\nreturn _context.abrupt(\"return\",createPath(startCord,targetCord,prevNodes));case 17:neighbours=helper_getNeighbourNodes(currNode,rows,cols,gridState);_iterator=Object(createForOfIteratorHelper[\"a\" /* default */])(neighbours);try{for(_iterator.s();!(_step=_iterator.n()).done;){neighbour=_step.value;if(!(neighbour in visited)){visited[neighbour]=1;if(neighbour!==startCord&&neighbour!==targetCord){_nodeStateFunc=gridState[neighbour][1];_nodeStateFunc(function(prevState){return[nodeTypeEnum.visiting].concat(Object(toConsumableArray[\"a\" /* default */])(prevState));});}H[neighbour]=manhattanDistanceHeuristic(neighbour,targetCord);F[neighbour]=H[neighbour];prevNodes[neighbour]=currNode;openSet[neighbour]=F[neighbour];}}}catch(err){_iterator.e(err);}finally{_iterator.f();}_context.next=22;return sleep(timeout);case 22:_context.next=6;break;case 24:return _context.abrupt(\"return\",[]);case 25:case\"end\":return _context.stop();}}},_callee);}));return function greedyBestFirstSearch(_x,_x2,_x3,_x4,_x5,_x6){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/terrain/recursiveDivision.js\nvar HORIZONTAL=0;var VERTICAL=1;var recursiveDivision=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,setGridState,rows,cols,timeout){var y,currCord,_y,_currCord,_y2,_currCord2,_y3,_currCord3;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:y=0;case 1:if(!(y<cols)){_context.next=9;break;}currCord=\"\".concat(0,\":\",y);recursiveDivision_setWall(currCord,startCord,targetCord,gridState,setGridState);_context.next=6;return sleep(timeout);case 6:y++;_context.next=1;break;case 9:_y=1;case 10:if(!(_y<rows)){_context.next=18;break;}_currCord=\"\".concat(_y,\":\").concat(cols-1);recursiveDivision_setWall(_currCord,startCord,targetCord,gridState,setGridState);_context.next=15;return sleep(timeout);case 15:_y++;_context.next=10;break;case 18:_y2=cols-2;case 19:if(!(_y2>=0)){_context.next=27;break;}_currCord2=\"\".concat(rows-1,\":\").concat(_y2);recursiveDivision_setWall(_currCord2,startCord,targetCord,gridState,setGridState);_context.next=24;return sleep(timeout);case 24:_y2--;_context.next=19;break;case 27:_y3=rows-2;case 28:if(!(_y3>0)){_context.next=36;break;}_currCord3=\"\".concat(_y3,\":\",0);recursiveDivision_setWall(_currCord3,startCord,targetCord,gridState,setGridState);_context.next=33;return sleep(timeout);case 33:_y3--;_context.next=28;break;case 36:_context.next=38;return divide(startCord,targetCord,gridState,setGridState,1,rows-2,1,cols-2,timeout,rows,cols);case 38:case\"end\":return _context.stop();}}},_callee);}));return function recursiveDivision(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();var divide=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(startCord,targetCord,gridState,setGridState,startRow,endRow,startCol,endCol,timeout,rows,cols){var width,height,orientation,sCol,sRow,skip,randRow,i,currCord,_sRow,_sCol,_skip,randCol,_i,_currCord4;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:width=endCol-startCol+1;height=endRow-startRow+1;orientation=HORIZONTAL;if(width<height){orientation=HORIZONTAL;}else if(height<width){orientation=VERTICAL;}else{orientation=getRandomNum(HORIZONTAL,VERTICAL);}if(!(orientation===HORIZONTAL)){_context2.next=31;break;}if(!(height<3||startRow%2===1&&height===3)){_context2.next=7;break;}return _context2.abrupt(\"return\");case 7:sCol=startCol;if(startCol%2===1){sCol+=1;}sRow=startRow+2;if(startRow%2===0){sRow=startRow+1;}skip=Math.floor(getRandomNum(sCol,endCol)/2)*2;randRow=getRandomNum(sRow,endRow-2);randRow=Math.floor(randRow/2)*2+1;i=startCol;case 15:if(!(i<=endCol)){_context2.next=25;break;}if(!(i===skip)){_context2.next=18;break;}return _context2.abrupt(\"continue\",22);case 18:currCord=\"\".concat(randRow,\":\").concat(i);recursiveDivision_setWall(currCord,startCord,targetCord,gridState,setGridState);_context2.next=22;return sleep(timeout);case 22:i++;_context2.next=15;break;case 25:_context2.next=27;return divide(startCord,targetCord,gridState,setGridState,startRow,randRow-1,startCol,endCol,timeout,rows,cols);case 27:_context2.next=29;return divide(startCord,targetCord,gridState,setGridState,randRow+1,endRow,startCol,endCol,timeout,rows,cols);case 29:_context2.next=56;break;case 31:if(!(orientation===VERTICAL)){_context2.next=56;break;}if(!(width<3||startCol%2===1&&width===3)){_context2.next=34;break;}return _context2.abrupt(\"return\");case 34:_sRow=startRow;if(startRow%2===1){_sRow+=1;}_sCol=startCol+2;if(startCol%2===0){_sCol=startCol+1;}_skip=Math.floor(getRandomNum(_sRow,endRow)/2)*2;randCol=getRandomNum(_sCol,endCol-2);randCol=Math.floor(randCol/2)*2+1;_i=startRow;case 42:if(!(_i<=endRow)){_context2.next=52;break;}if(!(_i===_skip)){_context2.next=45;break;}return _context2.abrupt(\"continue\",49);case 45:_currCord4=\"\".concat(_i,\":\").concat(randCol);recursiveDivision_setWall(_currCord4,startCord,targetCord,gridState,setGridState);_context2.next=49;return sleep(timeout);case 49:_i++;_context2.next=42;break;case 52:_context2.next=54;return divide(startCord,targetCord,gridState,setGridState,startRow,endRow,startCol,randCol-1,timeout,rows,cols);case 54:_context2.next=56;return divide(startCord,targetCord,gridState,setGridState,startRow,endRow,randCol+1,endCol,timeout,rows,cols);case 56:case\"end\":return _context2.stop();}}},_callee2);}));return function divide(_x8,_x9,_x10,_x11,_x12,_x13,_x14,_x15,_x16,_x17,_x18){return _ref2.apply(this,arguments);};}();var recursiveDivision_setWall=function setWall(currCord,startCord,targetCord,gridState,setGridState){var nodeStateFunc=gridState[currCord][1];var state=[nodeTypeEnum.wall,nodeTypeEnum.none];if(currCord===startCord){state=[nodeTypeEnum.start,nodeTypeEnum.wall,nodeTypeEnum.none];}else if(currCord===targetCord){state=[nodeTypeEnum.target,nodeTypeEnum.wall,nodeTypeEnum.none];}nodeStateFunc(function(prevState){return state;});setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},currCord,[state,prevState[currCord][1]]));});};\n// CONCATENATED MODULE: ./src/algorithms/terrain/simplexNoise.js\nfunction Grad(x,y,z){this.x=x;this.y=y;this.z=z;}Grad.prototype.dot2=function(x,y){return this.x*x+this.y*y;};Grad.prototype.dot3=function(x,y,z){return this.x*x+this.y*y+this.z*z;};var grad3=[new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];var p=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];// To remove the need for index wrapping, double the permutation table length\nvar perm=new Array(512);var gradP=new Array(512);// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nvar seed=function seed(_seed){if(_seed>0&&_seed<1){// Scale the seed out\n_seed*=65536;}_seed=Math.floor(_seed);if(_seed<256){_seed|=_seed<<8;}for(var i=0;i<256;i++){var v;if(i&1){v=p[i]^_seed&255;}else{v=p[i]^_seed>>8&255;}perm[i]=perm[i+256]=v;gradP[i]=gradP[i+256]=grad3[v%12];}};// Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2=0.5*(Math.sqrt(3)-1);var G2=(3-Math.sqrt(3))/6;// 2D simplex noise\nvar simplex2=function simplex2(xin,yin){var n0,n1,n2;// Noise contributions from the three corners\n// Skew the input space to determine which simplex cell we're in\nvar s=(xin+yin)*F2;// Hairy factor for 2D\nvar i=Math.floor(xin+s);var j=Math.floor(yin+s);var t=(i+j)*G2;var x0=xin-i+t;// The x,y distances from the cell origin, unskewed.\nvar y0=yin-j+t;// For the 2D case, the simplex shape is an equilateral triangle.\n// Determine which simplex we are in.\nvar i1,j1;// Offsets for second (middle) corner of simplex in (i,j) coords\nif(x0>y0){// lower triangle, XY order: (0,0)->(1,0)->(1,1)\ni1=1;j1=0;}else{// upper triangle, YX order: (0,0)->(0,1)->(1,1)\ni1=0;j1=1;}// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n// c = (3-sqrt(3))/6\nvar x1=x0-i1+G2;// Offsets for middle corner in (x,y) unskewed coords\nvar y1=y0-j1+G2;var x2=x0-1+2*G2;// Offsets for last corner in (x,y) unskewed coords\nvar y2=y0-1+2*G2;// Work out the hashed gradient indices of the three simplex corners\ni&=255;j&=255;var gi0=gradP[i+perm[j]];var gi1=gradP[i+i1+perm[j+j1]];var gi2=gradP[i+1+perm[j+1]];// Calculate the contribution from the three corners\nvar t0=0.5-x0*x0-y0*y0;if(t0<0){n0=0;}else{t0*=t0;n0=t0*t0*gi0.dot2(x0,y0);// (x,y) of grad3 used for 2D gradient\n}var t1=0.5-x1*x1-y1*y1;if(t1<0){n1=0;}else{t1*=t1;n1=t1*t1*gi1.dot2(x1,y1);}var t2=0.5-x2*x2-y2*y2;if(t2<0){n2=0;}else{t2*=t2;n2=t2*t2*gi2.dot2(x2,y2);}// Add contributions from each corner to get the final noise value.\n// The result is scaled to return values in the interval [-1,1].\nreturn 70*(n0+n1+n2);};var SCALE=12;var simplexNoise=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,setGridState,rows,cols,timeout){var gridMap,x,_loop,y;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:seed(Math.random());gridMap={};for(x=0;x<cols;x++){_loop=function _loop(y){// All noise functions return values in the range of -1 to 1.\nvar currCord=\"\".concat(y,\":\").concat(x);var nodeStateFunc=gridState[currCord][1];// noise.simplex2 and noise.perlin2 for 2d noise\nvar value=simplex2(x/SCALE,y/SCALE);var state=[nodeTypeEnum.none];if(value>=-1&&value<=-0.50){state.unshift(nodeTypeEnum.wall);}else if(value>-0.50&&value<=-0.20){state.unshift(nodeTypeEnum.weighted100);}else if(value>-0.20&&value<=0.10){state.unshift(nodeTypeEnum.weighted80);}else if(value>0.10&&value<=0.40){state.unshift(nodeTypeEnum.weighted60);}else if(value>0.40&&value<=0.70){state.unshift(nodeTypeEnum.weighted40);}else if(value>0.70&&value<=1){state.unshift(nodeTypeEnum.weighted20);}if(currCord===startCord){state.unshift(nodeTypeEnum.start);}else if(currCord===targetCord){state.unshift(nodeTypeEnum.target);}nodeStateFunc(function(prevState){return state;});gridMap[currCord]=[state,nodeStateFunc];};for(y=0;y<rows;y++){_loop(y);}}setGridState(function(prevState){return gridMap;});case 4:case\"end\":return _context.stop();}}},_callee);}));return function simplexNoise(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/terrain/random.js\nvar random=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,setGridState,rows,cols,timeout){var gridMap,x,_loop,y,_ret;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gridMap={};x=0;case 2:if(!(x<rows)){_context.next=15;break;}_loop=function _loop(y){var currCord=\"\".concat(x,\":\").concat(y);var nodeStateFunc=gridState[currCord][1];var randomNum=getRandomNum(1,10);if(randomNum>=4){// don't place wall\nvar _newState=[nodeTypeEnum.none];if(currCord===startCord){_newState.unshift(nodeTypeEnum.start);}else if(currCord===targetCord){_newState.unshift(nodeTypeEnum.target);}gridMap[currCord]=[_newState,nodeStateFunc];return\"continue\";}// place wall\nvar newState=[nodeTypeEnum.wall,nodeTypeEnum.none];if(currCord===startCord){newState.unshift(nodeTypeEnum.start);}else if(currCord===targetCord){newState.unshift(nodeTypeEnum.target);}nodeStateFunc(function(prevState){return newState;});gridMap[currCord]=[newState,nodeStateFunc];};y=0;case 5:if(!(y<cols)){_context.next=12;break;}_ret=_loop(y);if(!(_ret===\"continue\")){_context.next=9;break;}return _context.abrupt(\"continue\",9);case 9:y++;_context.next=5;break;case 12:x++;_context.next=2;break;case 15:setGridState(function(prevState){return gridMap;});case 16:case\"end\":return _context.stop();}}},_callee);}));return function random(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();\n// CONCATENATED MODULE: ./src/algorithms/terrain/randomWeighted.js\nvar randomWeighted=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(startCord,targetCord,gridState,setGridState,rows,cols,timeout){var gridMap,x,_loop,y,_ret;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gridMap={};x=0;case 2:if(!(x<rows)){_context.next=15;break;}_loop=function _loop(y){var currCord=\"\".concat(x,\":\").concat(y);var nodeStateFunc=gridState[currCord][1];var randomNum=getRandomNum(1,10);if(randomNum>=5){// don't place obstacle\nvar _newState=[nodeTypeEnum.none];if(currCord===startCord){_newState.unshift(nodeTypeEnum.start);}else if(currCord===targetCord){_newState.unshift(nodeTypeEnum.target);}gridMap[currCord]=[_newState,nodeStateFunc];return\"continue\";}// place a random obstacle\nvar randomObstacle=getRandomNum(nodeTypeEnum.wall,nodeTypeEnum.weighted20);var newState=[randomObstacle,nodeTypeEnum.none];if(currCord===startCord){newState.unshift(nodeTypeEnum.start);}else if(currCord===targetCord){newState.unshift(nodeTypeEnum.target);}nodeStateFunc(function(prevState){return newState;});gridMap[currCord]=[newState,nodeStateFunc];};y=0;case 5:if(!(y<cols)){_context.next=12;break;}_ret=_loop(y);if(!(_ret===\"continue\")){_context.next=9;break;}return _context.abrupt(\"continue\",9);case 9:y++;_context.next=5;break;case 12:x++;_context.next=2;break;case 15:setGridState(function(prevState){return gridMap;});case 16:case\"end\":return _context.stop();}}},_callee);}));return function randomWeighted(_x,_x2,_x3,_x4,_x5,_x6,_x7){return _ref.apply(this,arguments);};}();\n// EXTERNAL MODULE: ./node_modules/react-syntax-highlighter/dist/esm/default-highlight.js + 4 modules\nvar default_highlight = __webpack_require__(219);\n\n// EXTERNAL MODULE: ./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark.js\nvar atom_one_dark = __webpack_require__(218);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/utils/constants.js\nvar _algoFunctions,_algoSleepTimes,_terrainFunctions,_terrainAlgoSleepTime,_nodeColorClass,_nodeColors,_nodeWeight,_obsEnum,_pathfindingAlgoInfo;// PATHFINDING ALGORITHM CONSTANTS -------------------------------------------\nvar DIJKSTRAS=\"Dijkstra's\";var ASTAR='A* (A-Star)';var BFS='Breadth-first Search';var DFS='Depth-first Search';var GREEDY_BEST_FIRST_SEARCH='Greedy Best-first Search';var algoFunctions=(_algoFunctions={},Object(defineProperty[\"a\" /* default */])(_algoFunctions,DIJKSTRAS,dijkstras),Object(defineProperty[\"a\" /* default */])(_algoFunctions,ASTAR,aStar),Object(defineProperty[\"a\" /* default */])(_algoFunctions,BFS,bfs),Object(defineProperty[\"a\" /* default */])(_algoFunctions,DFS,dfs),Object(defineProperty[\"a\" /* default */])(_algoFunctions,GREEDY_BEST_FIRST_SEARCH,greedyBestFirstSearch),_algoFunctions);Object.freeze(algoFunctions);var PATH_CREATION_SLEEP=7;var algoSleepTimes=(_algoSleepTimes={},Object(defineProperty[\"a\" /* default */])(_algoSleepTimes,DIJKSTRAS,1),Object(defineProperty[\"a\" /* default */])(_algoSleepTimes,ASTAR,4),Object(defineProperty[\"a\" /* default */])(_algoSleepTimes,BFS,5),Object(defineProperty[\"a\" /* default */])(_algoSleepTimes,DFS,10),Object(defineProperty[\"a\" /* default */])(_algoSleepTimes,GREEDY_BEST_FIRST_SEARCH,11),_algoSleepTimes);Object.freeze(algoSleepTimes);var allPathAlgos=[DIJKSTRAS,ASTAR,BFS,DFS,GREEDY_BEST_FIRST_SEARCH];Object.freeze(allPathAlgos);var unweightedPathAlgos=[DFS,BFS,GREEDY_BEST_FIRST_SEARCH];Object.freeze(unweightedPathAlgos);var optimalPathAlgos=[DIJKSTRAS,ASTAR,BFS];Object.freeze(optimalPathAlgos);// TERRAIN ALGORTHIM CONSTANTS -------------------------------------------\nvar MAZE_GENERATION_SLEEP=5;var RECURSIVE_DIVISION=\"Recursive Division\";var SIMPLEX_NOISE=\"Simplex Noise\";var RANDOM_UNWEIGHTED=\"Random\";var RANDOM_WEIGHTED=\"Random (Weighted)\";var allTerrainAlgos=[RECURSIVE_DIVISION,SIMPLEX_NOISE,RANDOM_UNWEIGHTED,RANDOM_WEIGHTED];Object.freeze(allTerrainAlgos);var unweightedTerrainAlgos=[RECURSIVE_DIVISION,RANDOM_UNWEIGHTED];Object.freeze(unweightedTerrainAlgos);var terrainFunctions=(_terrainFunctions={},Object(defineProperty[\"a\" /* default */])(_terrainFunctions,RECURSIVE_DIVISION,recursiveDivision),Object(defineProperty[\"a\" /* default */])(_terrainFunctions,SIMPLEX_NOISE,simplexNoise),Object(defineProperty[\"a\" /* default */])(_terrainFunctions,RANDOM_UNWEIGHTED,random),Object(defineProperty[\"a\" /* default */])(_terrainFunctions,RANDOM_WEIGHTED,randomWeighted),_terrainFunctions);Object.freeze(terrainFunctions);var terrainAlgoSleepTimes=(_terrainAlgoSleepTime={},Object(defineProperty[\"a\" /* default */])(_terrainAlgoSleepTime,RECURSIVE_DIVISION,5),Object(defineProperty[\"a\" /* default */])(_terrainAlgoSleepTime,SIMPLEX_NOISE,1),Object(defineProperty[\"a\" /* default */])(_terrainAlgoSleepTime,RANDOM_UNWEIGHTED,1),Object(defineProperty[\"a\" /* default */])(_terrainAlgoSleepTime,RANDOM_WEIGHTED,1),_terrainAlgoSleepTime);Object.freeze(terrainAlgoSleepTimes);// NODE CONSTANTS ------------------------------------------------------------\nvar nodeTypeEnum={'path':0,'visited':1,'visiting':2,'none':3,'target':4,'start':5,'remObstacle':6,'wall':7,'weighted100':8,'weighted80':9,'weighted60':10,'weighted40':11,'weighted20':12};Object.freeze(nodeTypeEnum);var nodeColorClass=(_nodeColorClass={},Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.none,'none'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.target,'target'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.wall,'wall'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.visiting,'visiting'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.start,'start'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.visited,'visited'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.path,'path'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.weighted100,'weighted100'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.weighted80,'weighted80'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.weighted60,'weighted60'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.weighted40,'weighted40'),Object(defineProperty[\"a\" /* default */])(_nodeColorClass,nodeTypeEnum.weighted20,'weighted20'),_nodeColorClass);Object.freeze(nodeColorClass);var EMPTY_NODE_BORDER_COLOR='#3C4046';var nodeColors=(_nodeColors={},Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.none,'transparent'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.target,'#f14846'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.wall,'#18191c'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.visiting,'#4988dc'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.start,'#43b581'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.visited,'#3f70dd'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.path,'#f9a719'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.weighted100,'#1b1c1e'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.weighted80,'#1c1e21'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.weighted60,'#222327'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.weighted40,'#26272b'),Object(defineProperty[\"a\" /* default */])(_nodeColors,nodeTypeEnum.weighted20,'#2b2c31'),_nodeColors);Object.freeze(nodeColors);var nodeWeight=(_nodeWeight={},Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.none,1),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.target,1),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.wall,Infinity),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.start,1),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.weighted100,100),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.weighted80,80),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.weighted60,60),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.weighted40,40),Object(defineProperty[\"a\" /* default */])(_nodeWeight,nodeTypeEnum.weighted20,20),_nodeWeight);Object.freeze(nodeWeight);// OBSTACLE TYPES --------------------------------------------------------\nvar obstacleTypes=['Wall (∞)','Weighted (100)','Weighted (80)','Weighted (60)','Weighted (40)','Weighted (20)'];var obsEnum=(_obsEnum={},Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[0],nodeColorClass[nodeTypeEnum.wall]),Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[1],nodeColorClass[nodeTypeEnum.weighted100]),Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[2],nodeColorClass[nodeTypeEnum.weighted80]),Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[3],nodeColorClass[nodeTypeEnum.weighted60]),Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[4],nodeColorClass[nodeTypeEnum.weighted40]),Object(defineProperty[\"a\" /* default */])(_obsEnum,obstacleTypes[5],nodeColorClass[nodeTypeEnum.weighted20]),_obsEnum);Object.freeze(obsEnum);// ALGO INFO BOX --------------------------------------------------------\nvar codeBlockCustomStyle={fontSize:13,backgroundColor:'#18191c',borderRadius:4,padding:20,lineHeight:1.5,maxHeight:250,marginTop:7,marginBottom:0};var inLineCodeBlockCustomStyle={fontSize:12,backgroundColor:'#18191c',borderRadius:4,padding:4,display:'inline',color:'white',fontWeight:600};var pathfindingAlgoInfo=(_pathfindingAlgoInfo={},Object(defineProperty[\"a\" /* default */])(_pathfindingAlgoInfo,DIJKSTRAS,{'summary':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h4\",{children:[DIJKSTRAS,\" is a \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"greedy\"}),\" pathfinding algorithm that guarantees \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"optimal (shortest)\"}),\" paths, even in \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"weighted\"}),\" graphs\"]}),'description':null,'pseudocode':/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:\"python\",style:atom_one_dark[\"a\" /* default */],showLineNumbers:true,wrapLines:true,customStyle:codeBlockCustomStyle,children:\"min_pq = min_heap(start_node: 0)\\ndist = { start_node: 0 }\\nprev = {}\\n\\nfor node in nodes:\\n    if node != start_node:\\n        dist[node] = Infinity\\n        min_pq[node] = Infinity\\n            \\nwhile min_pq.len:\\n    curr_node = min_pq.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev) # found path to target\\n        \\n    for neighbour in curr_node.neighbours:\\n        new_cost = distance[curr_node] + \\n                   edge(curr_node, neighbour).weight\\n\\n        if new_cost < dist[neighbour]:\\n            # found better path, update the distance\\n            dist[neighbour] = new_cost\\n            min_pq[neighbour] = new_cost\\n            prev[neighbour] = curr_node\\n\\n# no path found\\nreturn\"})}),Object(defineProperty[\"a\" /* default */])(_pathfindingAlgoInfo,ASTAR,{'summary':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h4\",{children:[ASTAR,\" is an \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"informed\"}),\" pathfinding algorithm that guarantees \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"optimal (shortest)\"}),\" paths, even in \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"weighted\"}),\" graphs\"]}),'description':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(jsx_runtime[\"Fragment\"],{children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"The algorithm explores paths that minimize the function \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"f(node) = g(node) + h(node)\"}),\" where \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"g(node)\"}),\" is the cost of the path from \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},inLineCodeBlockCustomStyle),{},{color:nodeColors[nodeTypeEnum.start]}),children:\"start_node\"}),\" to \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"node\"}),\" and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"h(node)\"}),\" is the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"heuristic function\"}),\" which estimates the cost of the path from \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"node\"}),\" to \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},inLineCodeBlockCustomStyle),{},{color:nodeColors[nodeTypeEnum.target]}),children:\"target_node\"}),\".\"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"The current chosen heuristic function is known as \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"Manhattan Distance\"}),\", which is just a sum of the differences in the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"x\"}),\" and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"y\"}),\" co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.\"]})]}),'pseudocode':/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:\"python\",style:atom_one_dark[\"a\" /* default */],showLineNumbers:true,wrapLines:true,customStyle:codeBlockCustomStyle,children:\"open_set = min_heap(start_node: 0)\\nG = { start_node: 0 } # G(n) => tell us the current shortest distance from start node to node n\\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\\nF = { start_node: 0 } # F(n) = G(n) + H(n)\\nprev = {}\\n\\nfor node in nodes:\\n    if node == start_node:\\n        continue\\n    \\n    F[node] = G[node] = H[node] = Infinity\\n    \\nwhile open_set not empty:\\n    curr_node = open_set.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev)\\n        \\n    for neighbour in curr_node.neighbours:\\n        new_G_score = G[curr_node] + weight(edge(curr_node, neighbour))\\n        \\n        if new_G_score < G[curr_node]:\\n            # update all scores\\n            G[neighbour] = new_G_score\\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\\n            F[neighbour] = G[neighbour] + H[neighbour];\\n            prev[neighbour] = curr_node;\\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\\n\\n# no path found\\nreturn\"})}),Object(defineProperty[\"a\" /* default */])(_pathfindingAlgoInfo,BFS,{'summary':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h4\",{children:[BFS,\" is an \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"uninformed/blind\"}),\" search algorithm that gurantees finding the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"optimal (shortest)\"}),\" paths only in \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"unweighted\"}),\" graphs\"]}),'pseudocode':/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:\"python\",style:atom_one_dark[\"a\" /* default */],showLineNumbers:true,wrapLines:true,customStyle:codeBlockCustomStyle,children:\"queue = [start_node]\\nvisited = { start_node: 1 }\\nprev = {}\\n\\nwhile queue.len:\\n    curr_node = queue.dequeue()\\n    \\n    for neighbour in curr_node.neighbours:\\n        if neighbour in visited:\\n            continue # skip nodes that are already visited\\n        \\n        prev[neighbour] = curr_node\\n        queue.enqueue(neighbour)\\n        visited[neighbour] = 1\\n\\n        if neighbour == target_node:\\n            # we path to target_node\\n            return create_path(prev)\\n\\n# no path found \\nreturn\"})}),Object(defineProperty[\"a\" /* default */])(_pathfindingAlgoInfo,DFS,{'summary':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h4\",{children:[DFS,\" is an \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"uninformed/blind\"}),\" search algorithm that is \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"unoptimal (may or may not find shortest path)\"}),\" and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"unweighted\"})]}),'pseudocode':/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:\"python\",style:atom_one_dark[\"a\" /* default */],showLineNumbers:true,wrapLines:true,customStyle:codeBlockCustomStyle,children:\"stack = [start_node]\\nvisited = { start_node: 1 }\\n\\nwhile stack.len:\\n    curr_node = stack.pop()\\n    stack.push(curr_node)\\n\\n    if curr_node == target_node:\\n        return stack # our stack is the path to target_node\\n    \\n    flag = False\\n    for neighbour in curr_node.neighbours:\\n        if neighbour in visited:\\n            continue # skip nodes that are already visited\\n        \\n        stack.push(neighbour)\\n        visited[neighbour] = 1\\n        flag = True\\n\\n    if flag:\\n        # no neighbours that need to be visited, pop the node from stack\\n        stack.pop()\\n\\n# no path found \\nreturn\"})}),Object(defineProperty[\"a\" /* default */])(_pathfindingAlgoInfo,GREEDY_BEST_FIRST_SEARCH,{'summary':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"h4\",{children:[GREEDY_BEST_FIRST_SEARCH,\" is an \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"informed\"}),\" and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"greedy\"}),\" pathfinding algorithm that is \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"unoptimal\"}),\" (may or may not find the shortest paths) and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"unweighted\"})]}),'description':/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(jsx_runtime[\"Fragment\"],{children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"Similar to \",ASTAR,\", this algorithm explores paths that minimize the function \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"f(node) = h(node)\"}),\" where \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"h(node)\"}),\" is the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"heuristic function\"}),\" which estimates the cost of the path from \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"node\"}),\" to \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},inLineCodeBlockCustomStyle),{},{color:nodeColors[nodeTypeEnum.target]}),children:\"target_node\"}),\". Unlike \",ASTAR,\", \",GREEDY_BEST_FIRST_SEARCH,\" does not perform optimally because it only cares about the estimated distance from \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"node\"}),\" to \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},inLineCodeBlockCustomStyle),{},{color:nodeColors[nodeTypeEnum.target]}),children:\"target_node\"}),\", however, fails to optimize for the cost to get from \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},inLineCodeBlockCustomStyle),{},{color:nodeColors[nodeTypeEnum.start]}),children:\"start_node\"}),\" to \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:'text',style:atom_one_dark[\"a\" /* default */],customStyle:inLineCodeBlockCustomStyle,children:\"node\"}),\".\"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"The current chosen heuristic function is known as \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"Manhattan Distance\"}),\", which is just a sum of the differences in the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"x\"}),\" and \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"y\"}),\" co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.\"]})]}),'pseudocode':/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(default_highlight[\"a\" /* default */],{language:\"python\",style:atom_one_dark[\"a\" /* default */],showLineNumbers:true,wrapLines:true,customStyle:codeBlockCustomStyle,children:\"open_set = min_heap(start_node: 0)\\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\\nF = { start_node: 0 } # F(n) = H(n)\\nprev = {}\\nvisited = {}\\n\\nfor node in nodes:\\n    if node == start_node:\\n        continue\\n    \\n    F[node] = H[node] = Infinity\\n    \\nwhile open_set not empty:\\n    curr_node = open_set.delete_min()\\n    \\n    if curr_node == target_node:\\n        return create_path(prev)\\n        \\n    for neighbour in curr_node.neighbours:  # check all unvisited neighbours \\n        if neighbout not in visited:\\n            # update all scores\\n            visited[neighbours] = 1\\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\\n            F[neighbour] = H[neighbour];\\n            prev[neighbour] = curr_node;\\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\\n\\n# no path found\\nreturn\"})}),_pathfindingAlgoInfo);Object.freeze(pathfindingAlgoInfo);\n// CONCATENATED MODULE: ./src/components/Node.js\nvar Node_Node=function Node(_ref){var nodeId=_ref.nodeId,size=_ref.size,setGridState=_ref.setGridState,draggingSelection=_ref.draggingSelection,setDraggingSelection=_ref.setDraggingSelection,setStartCord=_ref.setStartCord,setTargetCord=_ref.setTargetCord,runningAlgo=_ref.runningAlgo,selectedObstacle=_ref.selectedObstacle,startingState=_ref.startingState;var _useState=Object(react[\"useState\"])(startingState),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),nodeState=_useState2[0],setNodeState=_useState2[1];Object(react[\"useEffect\"])(function(){setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[startingState,setNodeState]));});},[]);var nodeColor=helper_getNodeColor(nodeState);var nodeStyle={width:size,height:size,backgroundColor:nodeColor,border:\"1px solid \".concat(nodeState[0]===nodeTypeEnum.none?EMPTY_NODE_BORDER_COLOR:nodeColor)};if(!runningAlgo){if(draggingSelection===nodeTypeEnum.start||draggingSelection===nodeTypeEnum.target){nodeStyle.cursor='grabbing';}else if(draggingSelection===nodeTypeEnum.none&&(nodeState[0]===nodeTypeEnum.start||nodeState[0]===nodeTypeEnum.target)){nodeStyle.cursor='grab';}}var mouseDowned=function mouseDowned(){if(nodeState[0]<=nodeTypeEnum.none){setDraggingSelection(nodeTypeEnum[selectedObstacle]);setNodeState(function(prevState){return[nodeTypeEnum[selectedObstacle],nodeTypeEnum.none];});setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[[nodeTypeEnum[selectedObstacle],nodeTypeEnum.none],setNodeState]));});return;}else if(nodeState[0]>=nodeTypeEnum.wall){setNodeState(function(prevState){return prevState.slice(1);});setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[nodeState.slice(1),setNodeState]));});setDraggingSelection(nodeTypeEnum.remObstacle);return;}else if(nodeState[0]===nodeTypeEnum.start||nodeState[0]===nodeTypeEnum.target){setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[nodeState.slice(1),setNodeState]));});}setDraggingSelection(nodeState[0]);};var mouseEntered=function mouseEntered(){if(draggingSelection===nodeTypeEnum.remObstacle&&nodeState[0]>=nodeTypeEnum.wall){setNodeState(function(prevState){return prevState.slice(1);});setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[nodeState.slice(1),setNodeState]));});}else if(draggingSelection===nodeTypeEnum[selectedObstacle]&&nodeState[0]<=nodeTypeEnum.none){setNodeState(function(prevState){return[nodeTypeEnum[selectedObstacle],nodeTypeEnum.none];});setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[[nodeTypeEnum[selectedObstacle],nodeTypeEnum.none],setNodeState]));});}else if(draggingSelection===nodeTypeEnum.start){setNodeState(function(prevState){return[draggingSelection].concat(Object(toConsumableArray[\"a\" /* default */])(prevState));});}else if(draggingSelection===nodeTypeEnum.target){setNodeState(function(prevState){return[draggingSelection].concat(Object(toConsumableArray[\"a\" /* default */])(prevState));});}};var mouseLeft=function mouseLeft(){if(draggingSelection===nodeTypeEnum.start||draggingSelection===nodeTypeEnum.target){setNodeState(function(prevState){return prevState.slice(1);});return;}};var mouseUped=function mouseUped(){if(draggingSelection===nodeTypeEnum.start){setStartCord(nodeId);setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[nodeState,setNodeState]));});}else if(draggingSelection===nodeTypeEnum.target){setTargetCord(nodeId);setGridState(function(prevState){return Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},prevState),{},Object(defineProperty[\"a\" /* default */])({},nodeId,[nodeState,setNodeState]));});}if(draggingSelection!==nodeTypeEnum.none){setDraggingSelection(nodeTypeEnum.none);}};return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{style:nodeStyle,className:\"node \".concat((nodeState[0]>=nodeTypeEnum.wall&&draggingSelection===nodeTypeEnum.none||draggingSelection===nodeTypeEnum.remObstacle)&&'erasing',\"\\n        \").concat(draggingSelection!==nodeTypeEnum.remObstacle&&(nodeState[0]<=nodeTypeEnum.none||draggingSelection>=nodeTypeEnum.wall)&&!runningAlgo&&'ready-to-draw'),onMouseDown:runningAlgo?null:mouseDowned,onMouseUp:runningAlgo?null:mouseUped,onMouseEnter:runningAlgo?null:mouseEntered,onMouseLeave:runningAlgo?null:mouseLeft});};/* harmony default export */ var components_Node = (Node_Node);\n// CONCATENATED MODULE: ./src/components/Grid.js\nvar Grid=/*#__PURE__*/react_default.a.memo(function(_ref){var rows=_ref.rows,cols=_ref.cols,padding=_ref.padding,nodeSize=_ref.nodeSize,setGridState=_ref.setGridState,selectedObstacle=_ref.selectedObstacle,setStartCord=_ref.setStartCord,setTargetCord=_ref.setTargetCord,runningAlgo=_ref.runningAlgo;var _useState=Object(react[\"useState\"])(nodeTypeEnum.none),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),draggingSelection=_useState2[0],setDraggingSelection=_useState2[1];// fill nodes in the grid\nconsole.log(\"RERENDERING GRID\");var nodes=[];for(var x=0;x<rows;x++){for(var y=0;y<cols;y++){var nodeId=\"\".concat(x,\":\").concat(y);var startingState=[nodeTypeEnum.none];if(x===1&&y===1){startingState.unshift(nodeTypeEnum.start);}else if(x===rows-2&&y===cols-2){startingState.unshift(nodeTypeEnum.target);}nodes.push(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Node,{nodeId:nodeId,size:nodeSize,setGridState:setGridState,draggingSelection:draggingSelection,setDraggingSelection:setDraggingSelection,setStartCord:setStartCord,setTargetCord:setTargetCord,runningAlgo:runningAlgo,selectedObstacle:selectedObstacle,startingState:startingState},nodeId));}}var gridDimensions={width:cols*nodeSize+cols,height:rows*nodeSize+rows};var containerStyle={paddingLeft:padding,paddingRight:padding};return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{style:containerStyle,children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"grid\",style:gridDimensions,children:nodes})});});/* harmony default export */ var components_Grid = (Grid);\n// CONCATENATED MODULE: ./src/components/Reset.js\nvar Reset_Reset=function Reset(_ref){var clearObstacles=_ref.clearObstacles,runningAlgo=_ref.runningAlgo;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"button \".concat(runningAlgo?'disabled':'red'),onClick:runningAlgo?null:clearObstacles,children:\"Clear Obstacles\"});};/* harmony default export */ var components_Reset = (Reset_Reset);\n// CONCATENATED MODULE: ./src/components/Clear.js\nvar Clear_Clear=function Clear(_ref){var clearPath=_ref.clearPath,runningAlgo=_ref.runningAlgo;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"button \".concat(runningAlgo?'disabled':'orange'),onClick:runningAlgo?null:clearPath,children:\"Clear Path\"});};/* harmony default export */ var components_Clear = (Clear_Clear);\n// CONCATENATED MODULE: ./src/components/Visualize.js\nvar Visualize_Visualize=function Visualize(_ref){var rows=_ref.rows,cols=_ref.cols,selectedAlgo=_ref.selectedAlgo,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,clearForReRun=_ref.clearForReRun,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo;var run=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var path,_loop,i;return regenerator_default.a.wrap(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(startCord===targetCord)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:clearForReRun();setRunningAlgo(true);console.log(\"STARTING: \",selectedAlgo);path=[];_context2.next=8;return algoFunctions[selectedAlgo](startCord,targetCord,gridState,rows,cols,algoSleepTimes[selectedAlgo]);case 8:path=_context2.sent;console.log(\"ENDED: \",selectedAlgo);_loop=/*#__PURE__*/regenerator_default.a.mark(function _loop(i){var nodeStateFunc;return regenerator_default.a.wrap(function _loop$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return sleep(PATH_CREATION_SLEEP);case 2:nodeStateFunc=gridState[path[i]][1];nodeStateFunc(function(prevState){return[nodeTypeEnum.path].concat(Object(toConsumableArray[\"a\" /* default */])(gridState[path[i]][0]));});case 4:case\"end\":return _context.stop();}}},_loop);});i=path.length-1;case 12:if(!(i>=0)){_context2.next=17;break;}return _context2.delegateYield(_loop(i),\"t0\",14);case 14:i--;_context2.next=12;break;case 17:setRunningAlgo(false);case 18:case\"end\":return _context2.stop();}}},_callee);}));return function run(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"button \".concat(runningAlgo?'disabled':'green'),onClick:runningAlgo?null:run,children:\"Run\"});};/* harmony default export */ var components_Visualize = (Visualize_Visualize);\n// CONCATENATED MODULE: ./src/images/down_arrow.svg\n/* harmony default export */ var down_arrow = (__webpack_require__.p + \"static/media/down_arrow.8fed4a28.svg\");\n// CONCATENATED MODULE: ./src/images/weight.svg\n/* harmony default export */ var weight = (__webpack_require__.p + \"static/media/weight.e51e9729.svg\");\n// CONCATENATED MODULE: ./src/images/weight_unfilled.svg\n/* harmony default export */ var weight_unfilled = (__webpack_require__.p + \"static/media/weight_unfilled.cc3c5f2f.svg\");\n// CONCATENATED MODULE: ./src/images/optimal.svg\n/* harmony default export */ var optimal = (__webpack_require__.p + \"static/media/optimal.5649a19a.svg\");\n// CONCATENATED MODULE: ./src/images/optimal_unfilled.svg\n/* harmony default export */ var optimal_unfilled = (__webpack_require__.p + \"static/media/optimal_unfilled.e461ee2c.svg\");\n// CONCATENATED MODULE: ./src/components/CustomDropdown.js\nvar CustomDropdown_CustomDropdown=function CustomDropdown(_ref){var setSelection=_ref.setSelection,items=_ref.items,disabled=_ref.disabled,dropDownWidth=_ref.dropDownWidth,isAlgoSelector=_ref.isAlgoSelector,isObstacleSelector=_ref.isObstacleSelector,isTerrainSelector=_ref.isTerrainSelector;var _useState=Object(react[\"useState\"])(false),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),dropDownOpen=_useState2[0],setDropDownOpen=_useState2[1];var _useState3=Object(react[\"useState\"])(items[0]),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),selectedVal=_useState4[0],setSelectedVal=_useState4[1];var _useState5=Object(react[\"useState\"])(0),_useState6=Object(slicedToArray[\"a\" /* default */])(_useState5,2),selectedId=_useState6[0],setSelectedId=_useState6[1];Object(react[\"useEffect\"])(function(){if(disabled&&isObstacleSelector){setSelectedVal(items[0]);setSelectedId(0);setDropDownOpen(false);setSelection(items[0]);}},[disabled]);Object(react[\"useEffect\"])(function(){setSelectedVal(items[0]);setSelectedId(0);setDropDownOpen(false);setSelection(items[0]);},[items]);var toggle=function toggle(){setDropDownOpen(function(prevState){return!prevState;});};var madeSelection=function madeSelection(id){setDropDownOpen(function(prevState){return!prevState;});setSelectedVal(items[id]);setSelectedId(id);setSelection(items[id]);};var style={width:dropDownWidth};var dropdownItems=[];var _loop=function _loop(i){dropdownItems.push(/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{style:style,className:\"dropdown-list-item \".concat(i===selectedId&&'selected',\" \").concat(i===items.length-1&&'last'),onClick:function onClick(){madeSelection(i);},children:[items[i],isAlgoSelector&&(!helper_isAlgoUnweighted(items[i])?/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:weight,title:\"\".concat(items[i],\" is a weighted path-finding algorithm.\"),alt:\"\".concat(items[i],\" is a weighted path-finding algorithm.\")}):/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:weight_unfilled,title:\"\".concat(items[i],\" is not a weighted path-finding algorithm.\"),alt:\"\".concat(items[i],\" is not a weighted path-finding algorithm.\")})),isAlgoSelector&&(helper_isAlgoOptimal(items[i])?/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:optimal,title:\"\".concat(items[i],\" guarantees shortest path.\"),alt:\"\".concat(items[i],\" guarantees shortest path.\")}):/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:optimal_unfilled,title:\"\".concat(items[i],\" does not guarantee shortest path.\"),alt:\"\".concat(items[i],\" does not guarantee shortest path.\")})),isObstacleSelector&&/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{style:{backgroundColor:nodeColors[nodeTypeEnum[obsEnum[items[i]]]]},className:\"obstacle-preview\",children:\" \"}),isTerrainSelector&&(!helper_isTerrainAlgoUnweighted(items[i])?/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:weight,title:\"\".concat(items[i],\" makes use of weighted obstacles.\"),alt:\"\".concat(items[i],\" makes use of weighted obstacles.\")}):/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"algo-property-badge\",src:weight_unfilled,title:\"\".concat(items[i],\" does not use weighted obstacles.\"),alt:\"\".concat(items[i],\" does not use weighted obstacles.\")}))]},i));};for(var i=0;i<items.length;i++){_loop(i);}return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"dropdown\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{style:style,className:\"dropdown-header \".concat(dropDownOpen&&'open',\" \").concat(disabled&&'disabled'),onClick:disabled?null:toggle,children:[selectedVal,!disabled&&/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"down-arrow\",src:down_arrow,alt:\"\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{style:{display:dropDownOpen?'flex':'none'},className:\"dropdown-list\",children:dropdownItems})]});};/* harmony default export */ var components_CustomDropdown = (CustomDropdown_CustomDropdown);\n// CONCATENATED MODULE: ./src/components/ShowInfo.js\nvar ShowInfo_ShowInfo=function ShowInfo(_ref){var toggleInfoBox=_ref.toggleInfoBox;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"button blue\",onClick:toggleInfoBox,children:\"Info\"});};/* harmony default export */ var components_ShowInfo = (ShowInfo_ShowInfo);\n// CONCATENATED MODULE: ./src/components/ChooseAlgorithm.js\nvar ChooseAlgorithm_ChooseAlgorithm=function ChooseAlgorithm(_ref){var rows=_ref.rows,cols=_ref.cols,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,clearForReRun=_ref.clearForReRun,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo,dropDownWidth=_ref.dropDownWidth,toggleInfoBox=_ref.toggleInfoBox,selectedAlgo=_ref.selectedAlgo,setSelectedAlgo=_ref.setSelectedAlgo;return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"choose-algo\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_CustomDropdown,{setSelection:setSelectedAlgo,items:allPathAlgos,disabled:runningAlgo,dropDownWidth:dropDownWidth,isAlgoSelector:true,isObstacleSelector:false}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_ShowInfo,{toggleInfoBox:toggleInfoBox}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Visualize,{rows:rows,cols:cols,selectedAlgo:selectedAlgo,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,clearForReRun:clearForReRun,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo})]});};/* harmony default export */ var components_ChooseAlgorithm = (ChooseAlgorithm_ChooseAlgorithm);\n// CONCATENATED MODULE: ./src/components/GenerateTerrain.js\nvar GenerateTerrain_GenerateTerrain=function GenerateTerrain(_ref){var rows=_ref.rows,cols=_ref.cols,selectedTerrainAlgo=_ref.selectedTerrainAlgo,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo,resetGrid=_ref.resetGrid;var run=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator[\"a\" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return resetGrid();case 2:setRunningAlgo(true);console.log(\"STARTING: \",selectedTerrainAlgo);_context.next=6;return terrainFunctions[selectedTerrainAlgo](startCord,targetCord,gridState,setGridState,rows,cols,terrainAlgoSleepTimes[selectedTerrainAlgo]);case 6:console.log(\"ENDED: \",selectedTerrainAlgo);setRunningAlgo(false);case 8:case\"end\":return _context.stop();}}},_callee);}));return function run(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"button \".concat(runningAlgo?'disabled':'green'),onClick:runningAlgo?null:run,children:\"Run\"});};/* harmony default export */ var components_GenerateTerrain = (GenerateTerrain_GenerateTerrain);\n// CONCATENATED MODULE: ./src/components/ChooseTerrain.js\nvar ChooseTerrain_ChooseTerrain=function ChooseTerrain(_ref){var rows=_ref.rows,cols=_ref.cols,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo,dropDownWidth=_ref.dropDownWidth,resetGrid=_ref.resetGrid,selectedAlgo=_ref.selectedAlgo;var _useState=Object(react[\"useState\"])(allTerrainAlgos[0]),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),selectedTerrainAlgo=_useState2[0],setSelectedTerrainAlgo=_useState2[1];return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"choose-terrain\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_CustomDropdown,{setSelection:setSelectedTerrainAlgo,items:helper_isAlgoUnweighted(selectedAlgo)?unweightedTerrainAlgos:allTerrainAlgos,disabled:false,dropDownWidth:dropDownWidth,isAlgoSelector:false,isObstacleSelector:false,isTerrainSelector:true}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_GenerateTerrain,{rows:rows,cols:cols,selectedTerrainAlgo:selectedTerrainAlgo,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo,resetGrid:resetGrid})]});};/* harmony default export */ var components_ChooseTerrain = (ChooseTerrain_ChooseTerrain);\n// CONCATENATED MODULE: ./src/components/ChooseObstacle.js\nvar ChooseObstacle_ChooseObstacle=function ChooseObstacle(_ref){var setSelectedObstacle=_ref.setSelectedObstacle,weightedObsDisabled=_ref.weightedObsDisabled,dropDownWidth=_ref.dropDownWidth;var setObstacle=function setObstacle(obstacleName){console.log(\"selected obs: \",obsEnum[obstacleName]);setSelectedObstacle(obsEnum[obstacleName]);};return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"choose-obstacle\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_CustomDropdown,{setSelection:setObstacle,items:obstacleTypes,disabled:weightedObsDisabled,dropDownWidth:dropDownWidth,isAlgoSelector:false,isObstacleSelector:true})});};/* harmony default export */ var components_ChooseObstacle = (ChooseObstacle_ChooseObstacle);\n// CONCATENATED MODULE: ./src/components/Header.js\nvar Header_Header=function Header(_ref){var rows=_ref.rows,cols=_ref.cols,runningAlgo=_ref.runningAlgo,setRunningAlgo=_ref.setRunningAlgo,padding=_ref.padding,height=_ref.height,gridState=_ref.gridState,setGridState=_ref.setGridState,startCord=_ref.startCord,targetCord=_ref.targetCord,clearObstacles=_ref.clearObstacles,clearPath=_ref.clearPath,setSelectedObstacle=_ref.setSelectedObstacle,weightedObsDisabled=_ref.weightedObsDisabled,toggleInfoBox=_ref.toggleInfoBox,selectedAlgo=_ref.selectedAlgo,setSelectedAlgo=_ref.setSelectedAlgo,resetGrid=_ref.resetGrid;var style={padding:padding,paddingBottom:padding/2,height:height};return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{style:style,className:\"header\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Reset,{clearObstacles:clearObstacles,runningAlgo:runningAlgo}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Clear,{clearPath:clearPath,runningAlgo:runningAlgo}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_ChooseAlgorithm,{rows:rows,cols:cols,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,clearForReRun:clearPath,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo,dropDownWidth:260,toggleInfoBox:toggleInfoBox,selectedAlgo:selectedAlgo,setSelectedAlgo:setSelectedAlgo}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_ChooseObstacle,{setSelectedObstacle:setSelectedObstacle,weightedObsDisabled:weightedObsDisabled,dropDownWidth:190}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_ChooseTerrain,{rows:rows,cols:cols,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo,resetGrid:resetGrid,selectedAlgo:selectedAlgo,dropDownWidth:200})]});};/* harmony default export */ var components_Header = (Header_Header);\n// CONCATENATED MODULE: ./src/images/close.svg\n/* harmony default export */ var images_close = (__webpack_require__.p + \"static/media/close.494fd48f.svg\");\n// CONCATENATED MODULE: ./src/components/InfoBox.js\nvar InfoBox_InfoBox=function InfoBox(_ref){var infoBoxOpen=_ref.infoBoxOpen,toggleInfoBox=_ref.toggleInfoBox,selectedAlgo=_ref.selectedAlgo,startingPos=_ref.startingPos;var _useState=Object(react[\"useState\"])(false),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),dragging=_useState2[0],setDragging=_useState2[1];var _useState3=Object(react[\"useState\"])(startingPos),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),boxCord=_useState4[0],setBoxCord=_useState4[1];var enableDragging=function enableDragging(e){setDragging(true);};var beingDragged=function beingDragged(e){if(dragging){setBoxCord(function(prevState){return[prevState[0]+e.movementX,prevState[1]+e.movementY];});}};var disableDragging=function disableDragging(e){setDragging(false);};return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{style:{left:\"\".concat(boxCord[0],\"px\"),top:\"\".concat(boxCord[1],\"px\")},className:\"info-box \".concat(infoBoxOpen?'visible':'hidden'),onMouseMove:beingDragged,onMouseUp:disableDragging,onMouseLeave:disableDragging,children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"img\",{className:\"close-info-icon\",src:images_close,onClick:toggleInfoBox,alt:\"Close info box\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h1\",{onMouseDown:enableDragging,children:selectedAlgo}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].summary||/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\",{children:\"No information.\"}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].description,pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].pseudocode&&/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\",{className:\"identifier\",children:\"Pseudocode:\"}),pathfindingAlgoInfo[selectedAlgo]&&pathfindingAlgoInfo[selectedAlgo].pseudocode]});};/* harmony default export */ var components_InfoBox = (InfoBox_InfoBox);\n// CONCATENATED MODULE: ./src/App.js\nfunction App(){var _useState=Object(react[\"useState\"])({}),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),gridState=_useState2[0],setGridState=_useState2[1];var _useState3=Object(react[\"useState\"])('wall'),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),selectedObstacle=_useState4[0],setSelectedObstacle=_useState4[1];var _useState5=Object(react[\"useState\"])(false),_useState6=Object(slicedToArray[\"a\" /* default */])(_useState5,2),infoBoxOpen=_useState6[0],setInfoBoxOpen=_useState6[1];var _useState7=Object(react[\"useState\"])(allPathAlgos[0]),_useState8=Object(slicedToArray[\"a\" /* default */])(_useState7,2),selectedAlgo=_useState8[0],setSelectedAlgo=_useState8[1];var _useState9=Object(react[\"useState\"])(0),_useState10=Object(slicedToArray[\"a\" /* default */])(_useState9,2),rows=_useState10[0],setRows=_useState10[1];var _useState11=Object(react[\"useState\"])(0),_useState12=Object(slicedToArray[\"a\" /* default */])(_useState11,2),cols=_useState12[0],setCols=_useState12[1];var _useState13=Object(react[\"useState\"])('0:0'),_useState14=Object(slicedToArray[\"a\" /* default */])(_useState13,2),startCord=_useState14[0],setStartCord=_useState14[1];var _useState15=Object(react[\"useState\"])('0:0'),_useState16=Object(slicedToArray[\"a\" /* default */])(_useState15,2),targetCord=_useState16[0],setTargetCord=_useState16[1];var _useState17=Object(react[\"useState\"])(false),_useState18=Object(slicedToArray[\"a\" /* default */])(_useState17,2),runningAlgo=_useState18[0],setRunningAlgo=_useState18[1];var _useState19=Object(react[\"useState\"])(false),_useState20=Object(slicedToArray[\"a\" /* default */])(_useState19,2),weightedObsDisabled=_useState20[0],setWeightedObsDisabled=_useState20[1];var margin=30;var nodeSize=28;var navBarHeight=90;Object(react[\"useEffect\"])(function(){console.log(\"RESETTING BOARD\");initializeGrid();},[]);// useEffect(() => {\n//   window.addEventListener(\"resize\", resizeGrid);\n//   return () => window.removeEventListener(\"resize\", resizeGrid);\n// }, []);\nvar initializeGrid=function initializeGrid(){var adjustedWinHeight=window.innerHeight-(navBarHeight+margin*3);var adjustedWinWidth=window.innerWidth-2*margin;var currRows=parseInt(adjustedWinHeight/(nodeSize+1));var currCols=parseInt(adjustedWinWidth/(nodeSize+1));setRunningAlgo(false);setRows(currRows);setCols(currCols);setStartCord('1:1');setTargetCord(\"\".concat(currRows-2,\":\").concat(currCols-2));};var clearPath=function clearPath(){console.log(\"CLEARING PATH\");for(var x=0;x<rows;x++){var _loop=function _loop(y){var id=\"\".concat(x,\":\").concat(y);var nodeState=gridState[id][0];var nodeStateFunc=gridState[id][1];var currState=nodeState[0];if((currState===nodeTypeEnum.start||currState===nodeTypeEnum.target)&&nodeState[1]<=nodeTypeEnum.visiting){nodeState.splice(1,1);}else if(currState<=nodeTypeEnum.visiting){nodeState.splice(0,1);}nodeStateFunc(function(prevState){return nodeState;});};for(var y=0;y<cols;y++){_loop(y);}}};var clearObstacles=function clearObstacles(){var gridMap={};var updateGrid=false;for(var x=0;x<rows;x++){var _loop2=function _loop2(y){var id=\"\".concat(x,\":\").concat(y);var nodeState=gridState[id][0];var nodeStateFunc=gridState[id][1];var currState=nodeState[0];gridMap[id]=[nodeState,nodeStateFunc];// check under start and target node for obstacle\nif((currState===nodeTypeEnum.start||currState===nodeTypeEnum.target)&&nodeState[1]>=nodeTypeEnum.wall){updateGrid=true;nodeState.splice(1,1);nodeStateFunc(function(prev){return nodeState;});gridMap[id]=[nodeState,nodeStateFunc];return\"continue\";}if(currState<=nodeTypeEnum.visiting){currState=nodeState[1];}if(currState>=nodeTypeEnum.wall){updateGrid=true;nodeStateFunc(function(prev){return[nodeTypeEnum.none];});gridMap[id]=[[nodeTypeEnum.none],nodeStateFunc];}};for(var y=0;y<cols;y++){var _ret=_loop2(y);if(_ret===\"continue\")continue;}}if(updateGrid){setGridState(function(prevState){return gridMap;});}};var clearWeightedObstacles=function clearWeightedObstacles(){var gridMap={};var updateGrid=false;for(var x=0;x<rows;x++){var _loop3=function _loop3(y){var id=\"\".concat(x,\":\").concat(y);var nodeState=gridState[id][0];var nodeStateFunc=gridState[id][1];var currState=nodeState[0];gridMap[id]=[nodeState,nodeStateFunc];// check under start and target node for weighted obstacle\nif((currState===nodeTypeEnum.start||currState===nodeTypeEnum.target)&&nodeState[1]>nodeTypeEnum.wall){updateGrid=true;nodeState.splice(1,1);nodeStateFunc(function(prev){return nodeState;});gridMap[id]=[nodeState,nodeStateFunc];return\"continue\";}if(currState<=nodeTypeEnum.visiting){currState=nodeState[1];}if(currState>nodeTypeEnum.wall){updateGrid=true;nodeStateFunc(function(prev){return[nodeTypeEnum.none];});gridMap[id]=[[nodeTypeEnum.none],nodeStateFunc];}};for(var y=0;y<cols;y++){var _ret2=_loop3(y);if(_ret2===\"continue\")continue;}}if(updateGrid){setGridState(function(prevState){return gridMap;});}};var resetGrid=function resetGrid(){var gridMap={};for(var x=0;x<rows;x++){var _loop4=function _loop4(y){var id=\"\".concat(x,\":\").concat(y);var nodeState=gridState[id][0];var nodeStateFunc=gridState[id][1];var currState=nodeState[0];var newState=[nodeTypeEnum.none];if(currState===nodeTypeEnum.start||currState===nodeTypeEnum.target){newState.unshift(currState);}nodeStateFunc(function(prev){return newState;});gridMap[id]=[newState,nodeStateFunc];};for(var y=0;y<cols;y++){_loop4(y);}}setGridState(function(prevState){return gridMap;});};var toggleInfoBox=function toggleInfoBox(){setInfoBoxOpen(function(prevState){return!prevState;});};var alteredSetSelectedAlgo=function alteredSetSelectedAlgo(algoName){var unweightedAlgo=helper_isAlgoUnweighted(algoName);setWeightedObsDisabled(unweightedAlgo);setSelectedAlgo(algoName);if(unweightedAlgo){clearPath();clearWeightedObstacles();}};return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(jsx_runtime[\"Fragment\"],{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Header,{rows:rows,cols:cols,runningAlgo:runningAlgo,setRunningAlgo:setRunningAlgo,padding:margin,height:navBarHeight,gridState:gridState,setGridState:setGridState,startCord:startCord,targetCord:targetCord,clearObstacles:clearObstacles,clearPath:clearPath,setSelectedObstacle:setSelectedObstacle,weightedObsDisabled:weightedObsDisabled,toggleInfoBox:toggleInfoBox,selectedAlgo:selectedAlgo,setSelectedAlgo:alteredSetSelectedAlgo,resetGrid:resetGrid}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Grid,{rows:rows,cols:cols,padding:margin,nodeSize:nodeSize,setGridState:setGridState,selectedObstacle:selectedObstacle,setStartCord:setStartCord,setTargetCord:setTargetCord,runningAlgo:runningAlgo}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_InfoBox,{infoBoxOpen:infoBoxOpen,toggleInfoBox:toggleInfoBox,selectedAlgo:selectedAlgo,startingPos:[window.innerWidth/2-285,navBarHeight+margin*2]})]});}/* harmony default export */ var src_App = (App);\n// CONCATENATED MODULE: ./src/reportWebVitals.js\nvar reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 3).then(__webpack_require__.bind(null, 220)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App,{})}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nsrc_reportWebVitals();\n\n/***/ })\n\n},[[215,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-4-0!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/postcss-loader/src/index.js??postcss!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/index.css","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/utils/helper.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/path_finding/dijkstras.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/path_finding/dfs.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/path_finding/bfs.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/path_finding/aStar.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/path_finding/greedyBestFirstSearch.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/terrain/recursiveDivision.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/terrain/simplexNoise.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/terrain/random.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/algorithms/terrain/randomWeighted.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/utils/constants.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Node.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Grid.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Reset.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Clear.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Visualize.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/down_arrow.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/weight.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/weight_unfilled.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/optimal.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/optimal_unfilled.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/CustomDropdown.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ShowInfo.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseAlgorithm.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/GenerateTerrain.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseTerrain.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/ChooseObstacle.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/Header.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/node_modules/file-loader/dist/cjs.js??ref--5-oneOf-8!/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/images/close.svg","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/components/InfoBox.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/App.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/reportWebVitals.js","/Users/vikramgrover/Documents/coding/pathfinding-algorithms-visualizer/src/index.js"],"names":["getNodeColor","nodeState","nodeTypeEnum","visited","visiting","wall","colorA","nodeColors","colorB","amount","match","map","c","parseInt","rA","gA","bA","rB","gB","bB","r","Math","round","toString","padStart","g","b","getNeighbourNodes","node","rows","cols","gridState","row","split","col","res","push","createPath","startCord","targetCord","prevNodes","cord","path","findMinPriorityNode","minPQ","minPriority","min","Object","values","key","isAlgoUnweighted","algo","unweightedPathAlgos","includes","isTerrainAlgoUnweighted","unweightedTerrainAlgos","isAlgoOptimal","optimalPathAlgos","sleep","ms","Promise","resolve","setTimeout","getRandomNum","num1","num2","max","floor","random","manhattanDistanceHeuristic","currNodeCord","currRow","currCol","targetRow","targetCol","abs","dijkstras","timeout","distance","x","y","Infinity","keys","length","minKey","nodeStateFunc","prevState","slice","neighbours","neighbour","currPath","nodeWeight","dfs","stack","currCord","none","pop","shift","unvisitedNeighbourFound","unshift","splice","bfs","queue","aStar","openSet","G","H","F","currNode","currGScore","greedyBestFirstSearch","console","log","HORIZONTAL","VERTICAL","recursiveDivision","setGridState","setWall","divide","startRow","endRow","startCol","endCol","width","height","orientation","sCol","sRow","skip","randRow","i","randCol","state","start","target","Grad","z","prototype","dot2","dot3","grad3","p","perm","Array","gradP","seed","v","F2","sqrt","G2","simplex2","xin","yin","n0","n1","n2","s","j","t","x0","y0","i1","j1","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","SCALE","simplexNoise","gridMap","value","weighted100","weighted80","weighted60","weighted40","weighted20","randomNum","newState","randomWeighted","randomObstacle","DIJKSTRAS","ASTAR","BFS","DFS","GREEDY_BEST_FIRST_SEARCH","algoFunctions","freeze","PATH_CREATION_SLEEP","algoSleepTimes","allPathAlgos","MAZE_GENERATION_SLEEP","RECURSIVE_DIVISION","SIMPLEX_NOISE","RANDOM_UNWEIGHTED","RANDOM_WEIGHTED","allTerrainAlgos","terrainFunctions","terrainAlgoSleepTimes","nodeColorClass","EMPTY_NODE_BORDER_COLOR","obstacleTypes","obsEnum","codeBlockCustomStyle","fontSize","backgroundColor","borderRadius","padding","lineHeight","maxHeight","marginTop","marginBottom","inLineCodeBlockCustomStyle","display","color","fontWeight","pathfindingAlgoInfo","atomOneDark","Node","nodeId","size","draggingSelection","setDraggingSelection","setStartCord","setTargetCord","runningAlgo","selectedObstacle","startingState","useState","setNodeState","useEffect","nodeColor","nodeStyle","border","cursor","mouseDowned","remObstacle","mouseEntered","mouseLeft","mouseUped","Grid","React","memo","nodeSize","nodes","gridDimensions","containerStyle","paddingLeft","paddingRight","Reset","clearObstacles","Clear","clearPath","Visualize","selectedAlgo","clearForReRun","setRunningAlgo","run","CustomDropdown","setSelection","items","disabled","dropDownWidth","isAlgoSelector","isObstacleSelector","isTerrainSelector","dropDownOpen","setDropDownOpen","selectedVal","setSelectedVal","selectedId","setSelectedId","toggle","madeSelection","id","style","dropdownItems","weight","weightUnfilled","optimal","optimalUnfilled","downArrow","ShowInfo","toggleInfoBox","ChooseAlgorithm","setSelectedAlgo","GenerateTerrain","selectedTerrainAlgo","resetGrid","ChooseTerrain","setSelectedTerrainAlgo","ChooseObstacle","setSelectedObstacle","weightedObsDisabled","setObstacle","obstacleName","Header","paddingBottom","InfoBox","infoBoxOpen","startingPos","dragging","setDragging","boxCord","setBoxCord","enableDragging","e","beingDragged","movementX","movementY","disableDragging","left","top","closeIcon","summary","description","pseudocode","App","setInfoBoxOpen","setRows","setCols","setWeightedObsDisabled","margin","navBarHeight","initializeGrid","adjustedWinHeight","window","innerHeight","adjustedWinWidth","innerWidth","currRows","currCols","currState","updateGrid","prev","clearWeightedObstacles","alteredSetSelectedAlgo","algoName","unweightedAlgo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":";;;;;AAAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEO,GAAMA,oBAAY,CAAG,QAAfA,aAAe,CAACC,SAAD,CAAe,CACvC,GAAI,CAACA,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACC,OAA9B,EAAyCF,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACE,QAAxE,GAAqFH,SAAS,CAAC,CAAD,CAAT,CAAeC,YAAY,CAACG,IAArH,CAA2H,CACvH,GAAIC,OAAM,CAAGC,UAAU,CAACN,SAAS,CAAC,CAAD,CAAV,CAAvB,CACA,GAAMO,OAAM,CAAGD,UAAU,CAACN,SAAS,CAAC,CAAD,CAAV,CAAzB,CACA,GAAIQ,OAAM,CAAG,IAAb,CAEA,GAAIR,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACE,QAAlC,CAA4C,CACxCE,MAAM,CAAGC,UAAU,CAACL,YAAY,CAACC,OAAd,CAAnB,CACH,CACD;AARuH,sBASlGG,MAAM,CAACI,KAAP,CAAa,OAAb,EAAsBC,GAAtB,CAA0B,SAACC,CAAD,QAAOC,SAAQ,CAACD,CAAD,CAAI,EAAJ,CAAf,EAA1B,CATkG,kFAShHE,EATgH,uBAS5GC,EAT4G,uBASxGC,EATwG,6CAUlGR,MAAM,CAACE,KAAP,CAAa,OAAb,EAAsBC,GAAtB,CAA0B,SAACC,CAAD,QAAOC,SAAQ,CAACD,CAAD,CAAI,EAAJ,CAAf,EAA1B,CAVkG,kFAUhHK,EAVgH,uBAU5GC,EAV4G,uBAUxGC,EAVwG,uBAWvH,GAAMC,EAAC,CAAGC,IAAI,CAACC,KAAL,CAAWR,EAAE,CAAG,CAACG,EAAE,CAAGH,EAAN,EAAYL,MAA5B,EAAoCc,QAApC,CAA6C,EAA7C,EAAiDC,QAAjD,CAA0D,CAA1D,CAA6D,GAA7D,CAAV,CACA,GAAMC,EAAC,CAAGJ,IAAI,CAACC,KAAL,CAAWP,EAAE,CAAG,CAACG,EAAE,CAAGH,EAAN,EAAYN,MAA5B,EAAoCc,QAApC,CAA6C,EAA7C,EAAiDC,QAAjD,CAA0D,CAA1D,CAA6D,GAA7D,CAAV,CACA,GAAME,EAAC,CAAGL,IAAI,CAACC,KAAL,CAAWN,EAAE,CAAG,CAACG,EAAE,CAAGH,EAAN,EAAYP,MAA5B,EAAoCc,QAApC,CAA6C,EAA7C,EAAiDC,QAAjD,CAA0D,CAA1D,CAA6D,GAA7D,CAAV,CACA,MAAO,IAAMJ,CAAN,CAAUK,CAAV,CAAcC,CAArB,CACH,CAED,MAAOnB,WAAU,CAACN,SAAS,CAAC,CAAD,CAAV,CAAjB,CACH,CAnBM,CAqBA,GAAM0B,yBAAiB,CAAG,QAApBA,kBAAoB,CAACC,IAAD,CAAOC,IAAP,CAAaC,IAAb,CAAmBC,SAAnB,CAAiC,CAC9D,GAAMC,IAAG,CAAGnB,QAAQ,CAACe,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAApB,CACA,GAAMC,IAAG,CAAGrB,QAAQ,CAACe,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAApB,CAEA,GAAIE,IAAG,CAAG,EAAV,CACA,GAAKH,GAAG,CAAG,CAAN,EAAW,CAAZ,EAAmBD,SAAS,WAAIC,GAAG,CAAG,CAAV,aAAeE,GAAf,EAAT,CAA+B,CAA/B,EAAkC,CAAlC,IAAyChC,YAAY,CAACG,IAA7E,CAAoF,CAChF8B,GAAG,CAACC,IAAJ,WAAYJ,GAAG,CAAG,CAAlB,aAAuBE,GAAvB,GACH,CACD,GAAKA,GAAG,CAAG,CAAN,CAAUJ,IAAX,EAAqBC,SAAS,WAAIC,GAAJ,aAAWE,GAAG,CAAG,CAAjB,EAAT,CAA+B,CAA/B,EAAkC,CAAlC,IAAyChC,YAAY,CAACG,IAA/E,CAAsF,CAClF8B,GAAG,CAACC,IAAJ,WAAYJ,GAAZ,aAAmBE,GAAG,CAAG,CAAzB,GACH,CACD,GAAKF,GAAG,CAAG,CAAP,CAAYH,IAAZ,EAAqBE,SAAS,WAAIC,GAAG,CAAG,CAAV,aAAeE,GAAf,EAAT,CAA+B,CAA/B,EAAkC,CAAlC,IAAyChC,YAAY,CAACG,IAA/E,CAAsF,CAClF8B,GAAG,CAACC,IAAJ,WAAYJ,GAAG,CAAG,CAAlB,aAAuBE,GAAvB,GACH,CACD,GAAKA,GAAG,CAAG,CAAN,EAAW,CAAZ,EAAmBH,SAAS,WAAIC,GAAJ,aAAWE,GAAG,CAAG,CAAjB,EAAT,CAA+B,CAA/B,EAAkC,CAAlC,IAAyChC,YAAY,CAACG,IAA7E,CAAoF,CAChF8B,GAAG,CAACC,IAAJ,WAAYJ,GAAZ,aAAmBE,GAAG,CAAG,CAAzB,GACH,CAED,MAAOC,IAAP,CACH,CAnBM,CAqBA,GAAME,WAAU,CAAG,QAAbA,WAAa,CAACC,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAAsC,CAC5D,GAAIC,KAAI,CAAGF,UAAX,CACA,GAAIG,KAAI,CAAG,EAAX,CAEA,MAAO,IAAP,CAAa,CACTD,IAAI,CAAGD,SAAS,CAACC,IAAD,CAAhB,CAEA,GAAIA,IAAI,GAAKH,SAAb,CAAwB,CACpB,MACH,CAEDI,IAAI,CAACN,IAAL,CAAUK,IAAV,EACH,CAED,MAAOC,KAAP,CACH,CAfM,CAiBA,GAAMC,2BAAmB,CAAG,QAAtBA,oBAAsB,CAACC,KAAD,CAAW,CAC1C,GAAIC,YAAW,CAAGxB,IAAI,CAACyB,GAAL,OAAAzB,IAAI,8CAAQ0B,MAAM,CAACC,MAAP,CAAcJ,KAAd,CAAR,EAAtB,CAEA,IAAK,GAAMK,IAAX,GAAkBL,MAAlB,CAAyB,CACrB,GAAIA,KAAK,CAACK,GAAD,CAAL,GAAeJ,WAAnB,CAAgC,CAC5B,MAAOI,IAAP,CACH,CACJ,CACJ,CARM,CAUA,GAAMC,wBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,IAAD,CAAU,CACtC,MAAOC,oBAAmB,CAACC,QAApB,CAA6BF,IAA7B,CAAP,CACH,CAFM,CAIA,GAAMG,+BAAuB,CAAG,QAA1BA,wBAA0B,CAACH,IAAD,CAAU,CAC7C,MAAOI,uBAAsB,CAACF,QAAvB,CAAgCF,IAAhC,CAAP,CACH,CAFM,CAIA,GAAMK,qBAAa,CAAG,QAAhBA,cAAgB,CAACL,IAAD,CAAU,CACnC,MAAOM,iBAAgB,CAACJ,QAAjB,CAA0BF,IAA1B,CAAP,CACH,CAFM,CAIA,GAAMO,MAAK,CAAG,QAARA,MAAQ,CAACC,EAAD,CAAQ,CACzB,MAAO,IAAIC,QAAJ,CAAY,SAAAC,OAAO,QAAIC,WAAU,CAACD,OAAD,CAAUF,EAAV,CAAd,EAAnB,CAAP,CACH,CAFM,CAIA,GAAMI,aAAY,CAAG,QAAfA,aAAe,CAACC,IAAD,CAAOC,IAAP,CAAgB,CACxC,GAAID,IAAI,GAAKC,IAAb,CAAmB,CACf,MAAOD,KAAP,CACH,CACD,GAAMlB,IAAG,CAAGzB,IAAI,CAACyB,GAAL,CAASkB,IAAT,CAAeC,IAAf,CAAZ,CACA,GAAMC,IAAG,CAAG7C,IAAI,CAAC6C,GAAL,CAASF,IAAT,CAAeC,IAAf,CAAZ,CACA,MAAO5C,KAAI,CAAC8C,KAAL,CAAW9C,IAAI,CAAC+C,MAAL,IAAiBF,GAAG,CAAGpB,GAAN,CAAY,CAA7B,EAAkCA,GAA7C,CAAP,CACH,CAPM,CASP;AACA;AACO,GAAMuB,2BAA0B,CAAG,QAA7BA,2BAA6B,CAACC,YAAD,CAAe/B,UAAf,CAA8B,CACpE,GAAI+B,YAAY,GAAK/B,UAArB,CAAiC,CAC7B,MAAO,EAAP,CACH,CAED,GAAMgC,QAAO,CAAG1D,QAAQ,CAACyD,YAAY,CAACrC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAxB,CACA,GAAMuC,QAAO,CAAG3D,QAAQ,CAACyD,YAAY,CAACrC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAxB,CACA,GAAMwC,UAAS,CAAG5D,QAAQ,CAAC0B,UAAU,CAACN,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAD,CAA1B,CACA,GAAMyC,UAAS,CAAG7D,QAAQ,CAAC0B,UAAU,CAACN,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAD,CAA1B,CAEA,MAAOZ,KAAI,CAACsD,GAAL,CAASJ,OAAO,CAAGE,SAAnB,EAAgCpD,IAAI,CAACsD,GAAL,CAASH,OAAO,CAAGE,SAAnB,CAAvC,CACH,CAXM,C;;AC/FA,GAAME,UAAS,sHAAG,iBAAOtC,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCF,IAAzC,CAA+CC,IAA/C,CAAqD+C,OAArD,oPACjBC,QADiB,CACN,EADM,CAEjBtC,SAFiB,CAEL,EAFK,CAGjBI,KAHiB,CAGT,EAHS,CAIjBzC,OAJiB,CAIP,EAJO,CAMrB2E,QAAQ,CAACxC,SAAD,CAAR,CAAsB,CAAtB,CACAM,KAAK,CAACN,SAAD,CAAL,CAAmB,CAAnB,CAEA,IAASyC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CAC3B,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CACvBvC,IADuB,WACbsC,CADa,aACRC,CADQ,EAG3B,GAAIvC,IAAI,GAAKH,SAAb,CAAwB,CACpBwC,QAAQ,CAACrC,IAAD,CAAR,CAAiBwC,QAAjB,CACH,CACJ,CACJ,CAjBoB,YAmBdlC,MAAM,CAACmC,IAAP,CAAYtC,KAAZ,EAAmBuC,MAAnB,CAA4B,CAnBd,2BAoBXC,MApBW,CAoBFzC,0BAAmB,CAACC,KAAD,CApBjB,CAqBjB,MAAOA,MAAK,CAACwC,MAAD,CAAZ,CACAjF,OAAO,CAACiF,MAAD,CAAP,CAAkB,CAAlB,CAtBiB,KAwBbA,MAAM,GAAK9C,SAAX,EAAwB8C,MAAM,GAAK7C,UAxBtB,2BAyBP8C,aAzBO,CAyBStD,SAAS,CAACqD,MAAD,CAAT,CAAkB,CAAlB,CAzBT,CA0BbC,aAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACC,OAAnB,sDAA+BmF,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAA/B,IAAV,CAAb,CA1Ba,oCA4BRH,MAAM,GAAK7C,UA5BH,2DA6BNF,UAAU,CAACC,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CA7BJ,UAgCXgD,UAhCW,CAgCE7D,wBAAiB,CAACyD,MAAD,CAASvD,IAAT,CAAeC,IAAf,CAAqBC,SAArB,CAhCnB,gEAiCOyD,UAjCP,gGAiCNC,SAjCM,aAkCPC,QAlCO,CAkCIZ,QAAQ,CAACM,MAAD,CAAR,CAAmBO,UAAU,CAAC5D,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,EAAwB,CAAxB,CAAD,CAlCjC,MAoCTA,SAAS,GAAItF,QApCJ,yEAwCb,GAAMsF,SAAS,GAAI7C,MAAd,EAAwB8C,QAAQ,CAAGZ,QAAQ,CAACW,SAAD,CAA5C,EAA4D,EAAEA,SAAS,GAAI7C,MAAf,CAAhE,CAAuF,CACnFkC,QAAQ,CAACW,SAAD,CAAR,CAAsBC,QAAtB,CACAlD,SAAS,CAACiD,SAAD,CAAT,CAAuBL,MAAvB,CACAxC,KAAK,CAAC6C,SAAD,CAAL,CAAmBC,QAAnB,CACA,GAAID,SAAS,GAAKlD,UAAlB,CAA8B,CACpB8C,cADoB,CACJtD,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,CADI,CAE1BJ,cAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACE,QAAnB,sDAAgCkF,SAAhC,IAAV,CAAb,CACH,CACJ,CAhDY,mPAmDX5B,MAAK,CAACmB,OAAD,CAnDM,uEAsDd,EAtDc,8EAAH,kBAATD,UAAS,gEAAf,C;;ACAA,GAAMgB,IAAG,sHAAG,iBAAOtD,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCF,IAAzC,CAA+CC,IAA/C,CAAqD+C,OAArD,yOACTgB,KADS,CACD,CAACvD,SAAD,CADC,CAETnC,OAFS,8CAEImC,SAFJ,CAEgB,CAFhB,cAIRuD,KAAK,CAACV,MAAN,CAAe,CAJP,2BAKLW,QALK,CAKMD,KAAK,CAAC,CAAD,CALX,CAMX,GAAIC,QAAQ,GAAKvD,UAAb,EAA2BuD,QAAQ,GAAKxD,SAA5C,CAAuD,CAC7C+C,aAD6C,CAC7BtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAD6B,CAEnDT,aAAa,CAAC,SAAAC,SAAS,QAAK,CAACpF,YAAY,CAACE,QAAd,CAAwBF,YAAY,CAAC6F,IAArC,CAAL,EAAV,CAAb,CACH,CATU,KAWPD,QAAQ,GAAKvD,UAXN,0BAYPsD,KAAK,CAACG,GAAN,GACAH,KAAK,CAACI,KAAN,GAbO,gCAcAJ,KAdA,SAiBX,GAAIC,QAAQ,GAAKxD,SAAjB,CAA4B,CACxBnC,OAAO,CAAC2F,QAAD,CAAP,CAAoB,CAApB,CACMT,cAFkB,CAEFtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAFE,CAGxBT,cAAa,CAAC,SAAAC,SAAS,QAAK,CAACpF,YAAY,CAACC,OAAd,CAAuBD,YAAY,CAAC6F,IAApC,CAAL,EAAV,CAAb,CACH,CAEKP,UAvBK,CAuBQ7D,wBAAiB,CAACmE,QAAD,CAAWjE,IAAX,CAAiBC,IAAjB,CAAuBC,SAAvB,CAvBzB,CAwBPmE,uBAxBO,CAwBmB,KAxBnB,gEAyBaV,UAzBb,gGAyBAC,SAzBA,kBA0BHA,SAAS,GAAItF,QA1BV,yEA8BP0F,KAAK,CAACM,OAAN,CAAcV,SAAd,EACAS,uBAAuB,CAAG,IAA1B,CA/BO,+PAmCX,GAAI,CAACA,uBAAL,CAA8B,CAC1BL,KAAK,CAACO,MAAN,CAAa,CAAb,CAAgB,CAAhB,EACH,CArCU,uBAuCL1C,MAAK,CAACmB,OAAD,CAvCA,uEA0CR,EA1CQ,8EAAH,kBAAHe,IAAG,gEAAT,C;;ACAA,GAAMS,IAAG,sHAAG,iBAAO/D,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCF,IAAzC,CAA+CC,IAA/C,CAAqD+C,OAArD,2NACXyB,KADW,CACH,CAAChE,SAAD,CADG,CAEXnC,OAFW,8CAEEmC,SAFF,CAEc,CAFd,EAGXE,SAHW,CAGC,EAHD,aAKR8D,KAAK,CAACnB,MAAN,CAAe,CALP,2BAMLW,QANK,CAMMQ,KAAK,CAACN,GAAN,EANN,CAOX,GAAIF,QAAQ,GAAKxD,SAAb,EAA0BwD,QAAQ,GAAKvD,UAA3C,CAAuD,CAC7C8C,aAD6C,CAC7BtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAD6B,CAEnDT,aAAa,CAAC,SAAAC,SAAS,QAAK,CAACpF,YAAY,CAACC,OAAd,CAAuBD,YAAY,CAAC6F,IAApC,CAAL,EAAV,CAAb,CACH,CACKP,UAXK,CAWQ7D,wBAAiB,CAACmE,QAAD,CAAWjE,IAAX,CAAiBC,IAAjB,CAAuBC,SAAvB,CAXzB,gEAaayD,UAbb,+FAaAC,SAbA,kBAcHA,SAAS,GAAItF,QAdV,yEAkBPqC,SAAS,CAACiD,SAAD,CAAT,CAAuBK,QAAvB,CACAQ,KAAK,CAACH,OAAN,CAAcV,SAAd,EACAtF,OAAO,CAACsF,SAAD,CAAP,CAAqB,CAArB,CApBO,KAsBHA,SAAS,GAAKlD,UAtBX,2DAuBIF,UAAU,CAACC,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CAvBd,UA0BD6C,cA1BC,CA0BetD,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,CA1Bf,CA2BPJ,cAAa,CAAC,SAAAC,SAAS,QAAK,CAACpF,YAAY,CAACE,QAAd,CAAwBF,YAAY,CAAC6F,IAArC,CAAL,EAAV,CAAb,CA3BO,kPA8BLrC,MAAK,CAACmB,OAAD,CA9BA,uEAiCR,EAjCQ,6EAAH,kBAAHwB,IAAG,gEAAT,C;;ACAA,GAAME,MAAK,sHAAG,iBAAOjE,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCF,IAAzC,CAA+CC,IAA/C,CAAqD+C,OAArD,uPACb2B,OADa,8CACAlE,SADA,CACY,CADZ,EAEbmE,CAFa,8CAENnE,SAFM,CAEM,CAFN,EAEW;AACxBoE,CAHa,8CAGNpE,SAHM,CAGM,CAHN,EAGW;AACxBqE,CAJa,8CAINrE,SAJM,CAIM,CAJN,EAIW;AACxBnC,OALa,CAKH,EALG,CAMbqC,SANa,CAMD,EANC,CAQjB;AACA,IAASuC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CAC3B,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CACvBvC,IADuB,WACbsC,CADa,aACRC,CADQ,EAG3B,GAAIvC,IAAI,GAAKH,SAAb,CAAwB,CACpBqE,CAAC,CAAClE,IAAD,CAAD,CAAUgE,CAAC,CAAChE,IAAD,CAAD,CAAUiE,CAAC,CAACjE,IAAD,CAAD,CAAUwC,QAA9B,CACH,CACJ,CACJ,CAjBgB,YAmBVlC,MAAM,CAACmC,IAAP,CAAYsB,OAAZ,EAAqBrB,MAArB,CAA8B,CAnBpB,2BAoBPyB,QApBO,CAoBIjE,0BAAmB,CAAC6D,OAAD,CApBvB,CAqBb,MAAOA,QAAO,CAACI,QAAD,CAAd,CArBa,KAuBTA,QAAQ,GAAKtE,SAAb,EAA0BsE,QAAQ,GAAKrE,UAvB9B,2BAwBH8C,aAxBG,CAwBatD,SAAS,CAAC6E,QAAD,CAAT,CAAoB,CAApB,CAxBb,CAyBTvB,aAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACC,OAAnB,sDAA+BmF,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAA/B,IAAV,CAAb,CAzBS,oCA2BJqB,QAAQ,GAAKrE,UA3BT,2DA6BFF,UAAU,CAACC,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CA7BR,UAgCPgD,UAhCO,CAgCM7D,wBAAiB,CAACiF,QAAD,CAAW/E,IAAX,CAAiBC,IAAjB,CAAuBC,SAAvB,CAhCvB,gEAiCWyD,UAjCX,MAiCb,+CAAoC,CAAzBC,SAAyB,aAC1BoB,UAD0B,CACbJ,CAAC,CAACG,QAAD,CAAD,CAAcjB,UAAU,CAAC5D,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,EAAwB,CAAxB,CAAD,CADX,CAGhC,GAAIoB,UAAU,CAAGJ,CAAC,CAAChB,SAAD,CAAlB,CAA+B,CAC3B,GAAIA,SAAS,GAAKnD,SAAd,EAA2BmD,SAAS,GAAKlD,UAAzC,EAAuD,EAAEkD,SAAS,GAAItF,QAAf,CAA3D,CAAoF,CAC1EkF,cAD0E,CAC1DtD,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,CAD0D,CAEhFJ,cAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACE,QAAnB,sDAAgCkF,SAAhC,IAAV,CAAb,CACH,CACDnF,OAAO,CAACsF,SAAD,CAAP,CAAqB,CAArB,CACA;AACA;AACAgB,CAAC,CAAChB,SAAD,CAAD,CAAeoB,UAAf,CACAH,CAAC,CAACjB,SAAD,CAAD,CAAepB,0BAA0B,CAACoB,SAAD,CAAYlD,UAAZ,CAAzC,CACAoE,CAAC,CAAClB,SAAD,CAAD,CAAegB,CAAC,CAAChB,SAAD,CAAD,CAAeiB,CAAC,CAACjB,SAAD,CAA/B,CACAjD,SAAS,CAACiD,SAAD,CAAT,CAAuBmB,QAAvB,CACAJ,OAAO,CAACf,SAAD,CAAP,CAAqBkB,CAAC,CAAClB,SAAD,CAAtB,CACH,CACJ,CAlDY,4EAoDP/B,MAAK,CAACmB,OAAD,CApDE,uEAuDV,EAvDU,yDAAH,kBAAL0B,MAAK,gEAAX,C;;ACAA,GAAMO,sBAAqB,sHAAG,iBAAOxE,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCF,IAAzC,CAA+CC,IAA/C,CAAqD+C,OAArD,0OAC7B2B,OAD6B,8CAChBlE,SADgB,CACJ,CADI,EAE7BoE,CAF6B,8CAEtBpE,SAFsB,CAEV,CAFU,EAEL;AACxBqE,CAH6B,8CAGtBrE,SAHsB,CAGV,CAHU,EAGL;AACxBE,SAJ6B,CAIjB,EAJiB,CAK7BrC,OAL6B,CAKnB,EALmB,CAOjC;AACA,IAAS4E,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CAC3B,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CACvBvC,IADuB,WACbsC,CADa,aACRC,CADQ,EAG3B,GAAIvC,IAAI,GAAKH,SAAb,CAAwB,CACpBqE,CAAC,CAAClE,IAAD,CAAD,CAAUiE,CAAC,CAACjE,IAAD,CAAD,CAAUwC,QAApB,CACH,CACJ,CACJ,CAhBgC,YAkB1BlC,MAAM,CAACmC,IAAP,CAAYsB,OAAZ,EAAqBrB,MAArB,CAA8B,CAlBJ,2BAmBvByB,QAnBuB,CAmBZjE,0BAAmB,CAAC6D,OAAD,CAnBP,CAoB7B,MAAOA,QAAO,CAACI,QAAD,CAAd,CApB6B,KAsBzBA,QAAQ,GAAKtE,SAAb,EAA0BsE,QAAQ,GAAKrE,UAtBd,2BAuBnB8C,aAvBmB,CAuBHtD,SAAS,CAAC6E,QAAD,CAAT,CAAoB,CAApB,CAvBG,CAwBzBvB,aAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACC,OAAnB,sDAA+BmF,SAAS,CAACC,KAAV,CAAgB,CAAhB,CAA/B,IAAV,CAAb,CAxByB,oCA0BpBqB,QAAQ,GAAKrE,UA1BO,2BA2BzBwE,OAAO,CAACC,GAAR,CAAY,QAAZ,EACA;AA5ByB,gCA6BlB3E,UAAU,CAACC,SAAD,CAAYC,UAAZ,CAAwBC,SAAxB,CA7BQ,UAgCvBgD,UAhCuB,CAgCV7D,wBAAiB,CAACiF,QAAD,CAAW/E,IAAX,CAAiBC,IAAjB,CAAuBC,SAAvB,CAhCP,gEAiCLyD,UAjCK,MAiC7B,+CAAoC,CAAzBC,SAAyB,aAChC,GAAI,EAAEA,SAAS,GAAItF,QAAf,CAAJ,CAA6B,CACzBA,OAAO,CAACsF,SAAD,CAAP,CAAqB,CAArB,CAEA,GAAIA,SAAS,GAAKnD,SAAd,EAA2BmD,SAAS,GAAKlD,UAA7C,CAAyD,CAC/C8C,cAD+C,CAC/BtD,SAAS,CAAC0D,SAAD,CAAT,CAAqB,CAArB,CAD+B,CAErDJ,cAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACE,QAAnB,sDAAgCkF,SAAhC,IAAV,CAAb,CACH,CAEDoB,CAAC,CAACjB,SAAD,CAAD,CAAepB,0BAA0B,CAACoB,SAAD,CAAYlD,UAAZ,CAAzC,CACAoE,CAAC,CAAClB,SAAD,CAAD,CAAeiB,CAAC,CAACjB,SAAD,CAAhB,CACAjD,SAAS,CAACiD,SAAD,CAAT,CAAuBmB,QAAvB,CACAJ,OAAO,CAACf,SAAD,CAAP,CAAqBkB,CAAC,CAAClB,SAAD,CAAtB,CACH,CACJ,CA/C4B,4EAiDvB/B,MAAK,CAACmB,OAAD,CAjDkB,uEAoD1B,EApD0B,yDAAH,kBAArBiC,sBAAqB,gEAA3B,C;;ACAP,GAAMG,WAAU,CAAG,CAAnB,CACA,GAAMC,SAAQ,CAAG,CAAjB,CAEO,GAAMC,kBAAiB,sHAAG,iBAAO7E,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCqF,YAAzC,CAAuDvF,IAAvD,CAA6DC,IAA7D,CAAmE+C,OAAnE,8KAEpBG,CAFoB,CAEhB,CAFgB,aAEbA,CAAC,CAAGlD,IAFS,0BAGnBgE,QAHmB,WAGL,CAHK,KAGAd,CAHA,EAIzBqC,yBAAO,CAACvB,QAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CAJyB,sBAKnB1D,MAAK,CAACmB,OAAD,CALc,QAEHG,CAAC,EAFE,8BAQpBA,EARoB,CAQhB,CARgB,cAQbA,EAAC,CAAGnD,IARS,2BASnBiE,SATmB,WASLd,EATK,aASAlD,IAAI,CAAG,CATP,EAUzBuF,yBAAO,CAACvB,SAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CAVyB,uBAWnB1D,MAAK,CAACmB,OAAD,CAXc,SAQHG,EAAC,EARE,gCAcpBA,GAdoB,CAchBlD,IAAI,CAAG,CAdS,cAcNkD,GAAC,EAAI,CAdC,2BAenBc,UAfmB,WAeLjE,IAAI,CAAG,CAfF,aAeOmD,GAfP,EAgBzBqC,yBAAO,CAACvB,UAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CAhByB,uBAiBnB1D,MAAK,CAACmB,OAAD,CAjBc,SAcEG,GAAC,EAdH,gCAoBpBA,GApBoB,CAoBhBnD,IAAI,CAAG,CApBS,cAoBNmD,GAAC,CAAG,CApBE,2BAqBnBc,UArBmB,WAqBLd,GArBK,KAqBA,CArBA,EAsBzBqC,yBAAO,CAACvB,UAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CAtByB,uBAuBnB1D,MAAK,CAACmB,OAAD,CAvBc,SAoBCG,GAAC,EApBF,uDA2BvBsC,OAAM,CAAChF,SAAD,CAAYC,UAAZ,CAAwBR,SAAxB,CAAmCqF,YAAnC,CAAiD,CAAjD,CAAoDvF,IAAI,CAAG,CAA3D,CAA8D,CAA9D,CAAiEC,IAAI,CAAG,CAAxE,CAA2E+C,OAA3E,CAAoFhD,IAApF,CAA0FC,IAA1F,CA3BiB,wDAAH,kBAAjBqF,kBAAiB,oEAAvB,CA8BP,GAAMG,OAAM,uHAAG,kBAAOhF,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCqF,YAAzC,CAAuDG,QAAvD,CAAiEC,MAAjE,CAAyEC,QAAzE,CAAmFC,MAAnF,CAA2F7C,OAA3F,CAAoGhD,IAApG,CAA0GC,IAA1G,+NACL6F,KADK,CACGD,MAAM,CAAGD,QAAT,CAAoB,CADvB,CAELG,MAFK,CAEIJ,MAAM,CAAGD,QAAT,CAAoB,CAFxB,CAIPM,WAJO,CAIOZ,UAJP,CAKX,GAAIU,KAAK,CAAGC,MAAZ,CAAoB,CAChBC,WAAW,CAAGZ,UAAd,CACH,CAFD,IAGK,IAAIW,MAAM,CAAGD,KAAb,CAAoB,CACrBE,WAAW,CAAGX,QAAd,CACH,CAFI,IAGA,CACDW,WAAW,CAAG9D,YAAY,CAACkD,UAAD,CAAaC,QAAb,CAA1B,CACH,CAbU,KAePW,WAAW,GAAKZ,UAfT,iCAiBHW,MAAM,CAAG,CAAT,EAAeL,QAAQ,CAAG,CAAX,GAAiB,CAAjB,EAAsBK,MAAM,GAAK,CAjB7C,oEAoBHE,IApBG,CAoBIL,QApBJ,CAqBP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBK,IAAI,EAAI,CAAR,CACH,CAEGC,IAzBG,CAyBIR,QAAQ,CAAG,CAzBf,CA0BP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBQ,IAAI,CAAGR,QAAQ,CAAG,CAAlB,CACH,CAEKS,IA9BC,CA8BM3G,IAAI,CAAC8C,KAAL,CAAWJ,YAAY,CAAC+D,IAAD,CAAOJ,MAAP,CAAZ,CAA6B,CAAxC,EAA6C,CA9BnD,CA+BHO,OA/BG,CA+BOlE,YAAY,CAACgE,IAAD,CAAOP,MAAM,CAAG,CAAhB,CA/BnB,CAgCPS,OAAO,CAAI5G,IAAI,CAAC8C,KAAL,CAAW8D,OAAO,CAAG,CAArB,EAA0B,CAA3B,CAAgC,CAA1C,CAESC,CAlCF,CAkCMT,QAlCN,cAkCgBS,CAAC,EAAIR,MAlCrB,iCAmCCQ,CAAC,GAAKF,IAnCP,2EAsCGlC,QAtCH,WAsCiBmC,OAtCjB,aAsC4BC,CAtC5B,EAuCHb,yBAAO,CAACvB,QAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CAvCG,wBAwCG1D,MAAK,CAACmB,OAAD,CAxCR,SAkC6BqD,CAAC,EAlC9B,yDA2CDZ,OAAM,CAAChF,SAAD,CAAYC,UAAZ,CAAwBR,SAAxB,CAAmCqF,YAAnC,CAAiDG,QAAjD,CAA2DU,OAAO,CAAG,CAArE,CAAwER,QAAxE,CAAkFC,MAAlF,CAA0F7C,OAA1F,CAAmGhD,IAAnG,CAAyGC,IAAzG,CA3CL,iCA4CDwF,OAAM,CAAChF,SAAD,CAAYC,UAAZ,CAAwBR,SAAxB,CAAmCqF,YAAnC,CAAiDa,OAAO,CAAG,CAA3D,CAA8DT,MAA9D,CAAsEC,QAAtE,CAAgFC,MAAhF,CAAwF7C,OAAxF,CAAiGhD,IAAjG,CAAuGC,IAAvG,CA5CL,8CA8CF+F,WAAW,GAAKX,QA9Cd,iCAgDHS,KAAK,CAAG,CAAR,EAAcF,QAAQ,CAAG,CAAX,GAAiB,CAAjB,EAAsBE,KAAK,GAAK,CAhD3C,sEAmDHI,KAnDG,CAmDIR,QAnDJ,CAoDP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBQ,KAAI,EAAI,CAAR,CACH,CAEGD,KAxDG,CAwDIL,QAAQ,CAAG,CAxDf,CAyDP,GAAIA,QAAQ,CAAG,CAAX,GAAiB,CAArB,CAAwB,CACpBK,KAAI,CAAGL,QAAQ,CAAG,CAAlB,CACH,CACKO,KA5DC,CA4DM3G,IAAI,CAAC8C,KAAL,CAAWJ,YAAY,CAACgE,KAAD,CAAOP,MAAP,CAAZ,CAA6B,CAAxC,EAA6C,CA5DnD,CA6DHW,OA7DG,CA6DOpE,YAAY,CAAC+D,KAAD,CAAOJ,MAAM,CAAG,CAAhB,CA7DnB,CA8DPS,OAAO,CAAI9G,IAAI,CAAC8C,KAAL,CAAWgE,OAAO,CAAG,CAArB,EAA0B,CAA3B,CAAgC,CAA1C,CAESD,EAhEF,CAgEMX,QAhEN,cAgEgBW,EAAC,EAAIV,MAhErB,iCAiECU,EAAC,GAAKF,KAjEP,2EAoEGlC,UApEH,WAoEiBoC,EApEjB,aAoEsBC,OApEtB,EAqEHd,yBAAO,CAACvB,UAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAAP,CArEG,wBAsEG1D,MAAK,CAACmB,OAAD,CAtER,SAgE6BqD,EAAC,EAhE9B,yDAyEDZ,OAAM,CAAChF,SAAD,CAAYC,UAAZ,CAAwBR,SAAxB,CAAmCqF,YAAnC,CAAiDG,QAAjD,CAA2DC,MAA3D,CAAmEC,QAAnE,CAA6EU,OAAO,CAAG,CAAvF,CAA0FtD,OAA1F,CAAmGhD,IAAnG,CAAyGC,IAAzG,CAzEL,iCA2EDwF,OAAM,CAAChF,SAAD,CAAYC,UAAZ,CAAwBR,SAAxB,CAAmCqF,YAAnC,CAAiDG,QAAjD,CAA2DC,MAA3D,CAAmEW,OAAO,CAAG,CAA7E,CAAgFT,MAAhF,CAAwF7C,OAAxF,CAAiGhD,IAAjG,CAAuGC,IAAvG,CA3EL,0DAAH,kBAANwF,OAAM,+FAAZ,CA+EA,GAAMD,0BAAO,CAAG,QAAVA,QAAU,CAACvB,QAAD,CAAWxD,SAAX,CAAsBC,UAAtB,CAAkCR,SAAlC,CAA6CqF,YAA7C,CAA8D,CAC1E,GAAM/B,cAAa,CAAGtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAAtB,CAEA,GAAIsC,MAAK,CAAG,CAAClI,YAAY,CAACG,IAAd,CAAoBH,YAAY,CAAC6F,IAAjC,CAAZ,CACA,GAAID,QAAQ,GAAKxD,SAAjB,CAA4B,CACxB8F,KAAK,CAAG,CAAClI,YAAY,CAACmI,KAAd,CAAqBnI,YAAY,CAACG,IAAlC,CAAwCH,YAAY,CAAC6F,IAArD,CAAR,CACH,CAFD,IAGK,IAAID,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9B6F,KAAK,CAAG,CAAClI,YAAY,CAACoI,MAAd,CAAsBpI,YAAY,CAACG,IAAnC,CAAyCH,YAAY,CAAC6F,IAAtD,CAAR,CACH,CAEDV,aAAa,CAAC,SAAAC,SAAS,QAAI8C,MAAJ,EAAV,CAAb,CACAhB,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsBQ,QAAtB,CAAiC,CAACsC,KAAD,CAAQ9C,SAAS,CAACQ,QAAD,CAAT,CAAoB,CAApB,CAAR,CAAjC,IAAV,CAAZ,CACH,CAbD,C;;ACjHA,QAASyC,KAAT,CAAcxD,CAAd,CAAiBC,CAAjB,CAAoBwD,CAApB,CAAuB,CACnB,KAAKzD,CAAL,CAASA,CAAT,CAAY,KAAKC,CAAL,CAASA,CAAT,CAAY,KAAKwD,CAAL,CAASA,CAAT,CAC3B,CAEDD,IAAI,CAACE,SAAL,CAAeC,IAAf,CAAsB,SAAU3D,CAAV,CAAaC,CAAb,CAAgB,CAClC,MAAO,MAAKD,CAAL,CAASA,CAAT,CAAa,KAAKC,CAAL,CAASA,CAA7B,CACH,CAFD,CAIAuD,IAAI,CAACE,SAAL,CAAeE,IAAf,CAAsB,SAAU5D,CAAV,CAAaC,CAAb,CAAgBwD,CAAhB,CAAmB,CACrC,MAAO,MAAKzD,CAAL,CAASA,CAAT,CAAa,KAAKC,CAAL,CAASA,CAAtB,CAA0B,KAAKwD,CAAL,CAASA,CAA1C,CACH,CAFD,CAIA,GAAMI,MAAK,CAAG,CAAC,GAAIL,KAAJ,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAAD,CAAoB,GAAIA,KAAJ,CAAS,CAAC,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAApB,CAAwC,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAC,CAAb,CAAgB,CAAhB,CAAxC,CAA4D,GAAIA,KAAJ,CAAS,CAAC,CAAV,CAAa,CAAC,CAAd,CAAiB,CAAjB,CAA5D,CACd,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CADc,CACK,GAAIA,KAAJ,CAAS,CAAC,CAAV,CAAa,CAAb,CAAgB,CAAhB,CADL,CACyB,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAC,CAAhB,CADzB,CAC6C,GAAIA,KAAJ,CAAS,CAAC,CAAV,CAAa,CAAb,CAAgB,CAAC,CAAjB,CAD7C,CAEd,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAFc,CAEK,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAC,CAAb,CAAgB,CAAhB,CAFL,CAEyB,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAZ,CAAe,CAAC,CAAhB,CAFzB,CAE6C,GAAIA,KAAJ,CAAS,CAAT,CAAY,CAAC,CAAb,CAAgB,CAAC,CAAjB,CAF7C,CAAd,CAIA,GAAMM,EAAC,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,EAAhB,CAAoB,EAApB,CAAwB,EAAxB,CACN,GADM,CACD,EADC,CACG,GADH,CACQ,EADR,CACY,EADZ,CACgB,EADhB,CACoB,GADpB,CACyB,GADzB,CAC8B,CAD9B,CACiC,GADjC,CACsC,GADtC,CAC2C,EAD3C,CAC+C,GAD/C,CACoD,EADpD,CACwD,EADxD,CAC4D,GAD5D,CACiE,CADjE,CACoE,EADpE,CACwE,EADxE,CAC4E,GAD5E,CACiF,EADjF,CACqF,EADrF,CACyF,EADzF,CAEN,GAFM,CAED,CAFC,CAEE,GAFF,CAEO,GAFP,CAEY,GAFZ,CAEiB,GAFjB,CAEsB,EAFtB,CAE0B,CAF1B,CAE6B,EAF7B,CAEiC,GAFjC,CAEsC,EAFtC,CAE0C,EAF1C,CAE8C,GAF9C,CAEmD,GAFnD,CAEwD,GAFxD,CAE6D,GAF7D,CAEkE,EAFlE,CAEsE,EAFtE,CAE0E,EAF1E,CAE8E,EAF9E,CAEkF,GAFlF,CAEuF,EAFvF,CAGN,EAHM,CAGF,GAHE,CAGG,GAHH,CAGQ,EAHR,CAGY,EAHZ,CAGgB,GAHhB,CAGqB,EAHrB,CAGyB,GAHzB,CAG8B,GAH9B,CAGmC,GAHnC,CAGwC,GAHxC,CAG6C,EAH7C,CAGiD,GAHjD,CAGsD,EAHtD,CAG0D,GAH1D,CAG+D,EAH/D,CAGmE,GAHnE,CAGwE,GAHxE,CAG6E,EAH7E,CAGiF,EAHjF,CAGqF,GAHrF,CAIN,EAJM,CAIF,GAJE,CAIG,GAJH,CAIQ,GAJR,CAIa,EAJb,CAIiB,GAJjB,CAIsB,GAJtB,CAI2B,GAJ3B,CAIgC,EAJhC,CAIoC,GAJpC,CAIyC,GAJzC,CAI8C,GAJ9C,CAImD,GAJnD,CAIwD,GAJxD,CAI6D,EAJ7D,CAIiE,EAJjE,CAIqE,EAJrE,CAIyE,EAJzE,CAI6E,GAJ7E,CAIkF,EAJlF,CAIsF,GAJtF,CAKN,GALM,CAKD,GALC,CAKI,EALJ,CAKQ,EALR,CAKY,EALZ,CAKgB,EALhB,CAKoB,GALpB,CAKyB,CALzB,CAK4B,GAL5B,CAKiC,EALjC,CAKqC,EALrC,CAKyC,GALzC,CAK8C,EAL9C,CAKkD,GALlD,CAKuD,GALvD,CAK4D,GAL5D,CAKiE,EALjE,CAKqE,EALrE,CAKyE,GALzE,CAK8E,GAL9E,CAKmF,GALnF,CAMN,GANM,CAMD,GANC,CAMI,GANJ,CAMS,GANT,CAMc,GANd,CAMmB,EANnB,CAMuB,GANvB,CAM4B,GAN5B,CAMiC,GANjC,CAMsC,GANtC,CAM2C,GAN3C,CAMgD,GANhD,CAMqD,CANrD,CAMwD,EANxD,CAM4D,EAN5D,CAMgE,GANhE,CAMqE,GANrE,CAM0E,GAN1E,CAM+E,GAN/E,CAMoF,GANpF,CAON,CAPM,CAOH,GAPG,CAOE,EAPF,CAOM,GAPN,CAOW,GAPX,CAOgB,GAPhB,CAOqB,GAPrB,CAO0B,EAP1B,CAO8B,EAP9B,CAOkC,GAPlC,CAOuC,GAPvC,CAO4C,GAP5C,CAOiD,EAPjD,CAOqD,GAPrD,CAO0D,EAP1D,CAO8D,EAP9D,CAOkE,EAPlE,CAOsE,EAPtE,CAO0E,GAP1E,CAO+E,GAP/E,CAOoF,EAPpF,CAOwF,EAPxF,CAQN,GARM,CAQD,GARC,CAQI,GARJ,CAQS,GART,CAQc,GARd,CAQmB,GARnB,CAQwB,GARxB,CAQ6B,CAR7B,CAQgC,EARhC,CAQoC,GARpC,CAQyC,GARzC,CAQ8C,EAR9C,CAQkD,GARlD,CAQuD,GARvD,CAQ4D,GAR5D,CAQiE,GARjE,CAQsE,GARtE,CAQ2E,EAR3E,CAQ+E,GAR/E,CAQoF,CARpF,CASN,GATM,CASD,EATC,CASG,EATH,CASO,GATP,CASY,EATZ,CASgB,EAThB,CASoB,GATpB,CASyB,GATzB,CAS8B,EAT9B,CASkC,GATlC,CASuC,GATvC,CAS4C,GAT5C,CASiD,GATjD,CASsD,GATtD,CAS2D,GAT3D,CASgE,GAThE,CASqE,GATrE,CAS0E,GAT1E,CAS+E,EAT/E,CASmF,GATnF,CAUN,GAVM,CAUD,EAVC,CAUG,GAVH,CAUQ,GAVR,CAUa,GAVb,CAUkB,GAVlB,CAUuB,GAVvB,CAU4B,EAV5B,CAUgC,GAVhC,CAUqC,GAVrC,CAU0C,GAV1C,CAU+C,GAV/C,CAUoD,EAVpD,CAUwD,EAVxD,CAU4D,GAV5D,CAUiE,GAVjE,CAUsE,GAVtE,CAU2E,EAV3E,CAU+E,GAV/E,CAUoF,GAVpF,CAWN,EAXM,CAWF,GAXE,CAWG,GAXH,CAWQ,EAXR,CAWY,GAXZ,CAWiB,GAXjB,CAWsB,GAXtB,CAW2B,GAX3B,CAWgC,GAXhC,CAWqC,EAXrC,CAWyC,GAXzC,CAW8C,GAX9C,CAWmD,GAXnD,CAWwD,GAXxD,CAW6D,EAX7D,CAWiE,EAXjE,CAWqE,GAXrE,CAW0E,CAX1E,CAW6E,GAX7E,CAWkF,GAXlF,CAYN,GAZM,CAYD,GAZC,CAYI,GAZJ,CAYS,EAZT,CAYa,GAZb,CAYkB,GAZlB,CAYuB,EAZvB,CAY2B,EAZ3B,CAY+B,EAZ/B,CAYmC,EAZnC,CAYuC,GAZvC,CAY4C,GAZ5C,CAYiD,GAZjD,CAYsD,GAZtD,CAY2D,EAZ3D,CAY+D,EAZ/D,CAYmE,GAZnE,CAYwE,EAZxE,CAY4E,GAZ5E,CAYiF,GAZjF,CAAV,CAcA;AACA,GAAIC,KAAI,CAAG,GAAIC,MAAJ,CAAU,GAAV,CAAX,CACA,GAAIC,MAAK,CAAG,GAAID,MAAJ,CAAU,GAAV,CAAZ,CAEA;AACA;AACA,GAAME,KAAI,CAAG,cAACA,KAAD,CAAU,CACnB,GAAIA,KAAI,CAAG,CAAP,EAAYA,KAAI,CAAG,CAAvB,CAA0B,CACtB;AACAA,KAAI,EAAI,KAAR,CACH,CAEDA,KAAI,CAAG5H,IAAI,CAAC8C,KAAL,CAAW8E,KAAX,CAAP,CACA,GAAIA,KAAI,CAAG,GAAX,CAAgB,CACZA,KAAI,EAAIA,KAAI,EAAI,CAAhB,CACH,CAED,IAAK,GAAIf,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,GAApB,CAAyBA,CAAC,EAA1B,CAA8B,CAC1B,GAAIgB,EAAJ,CACA,GAAIhB,CAAC,CAAG,CAAR,CAAW,CACPgB,CAAC,CAAGL,CAAC,CAACX,CAAD,CAAD,CAAQe,KAAI,CAAG,GAAnB,CACH,CAFD,IAEO,CACHC,CAAC,CAAGL,CAAC,CAACX,CAAD,CAAD,CAASe,KAAI,EAAI,CAAT,CAAc,GAA1B,CACH,CAEDH,IAAI,CAACZ,CAAD,CAAJ,CAAUY,IAAI,CAACZ,CAAC,CAAG,GAAL,CAAJ,CAAgBgB,CAA1B,CACAF,KAAK,CAACd,CAAD,CAAL,CAAWc,KAAK,CAACd,CAAC,CAAG,GAAL,CAAL,CAAiBU,KAAK,CAACM,CAAC,CAAG,EAAL,CAAjC,CACH,CACJ,CAtBD,CAwBA;AACA,GAAMC,GAAE,CAAG,KAAO9H,IAAI,CAAC+H,IAAL,CAAU,CAAV,EAAe,CAAtB,CAAX,CACA,GAAMC,GAAE,CAAG,CAAC,EAAIhI,IAAI,CAAC+H,IAAL,CAAU,CAAV,CAAL,EAAqB,CAAhC,CAEA;AACA,GAAME,SAAQ,CAAG,QAAXA,SAAW,CAACC,GAAD,CAAMC,GAAN,CAAc,CAC3B,GAAIC,GAAJ,CAAQC,EAAR,CAAYC,EAAZ,CAAgB;AAChB;AACA,GAAIC,EAAC,CAAG,CAACL,GAAG,CAAGC,GAAP,EAAcL,EAAtB,CAA0B;AAC1B,GAAIjB,EAAC,CAAG7G,IAAI,CAAC8C,KAAL,CAAWoF,GAAG,CAAGK,CAAjB,CAAR,CACA,GAAIC,EAAC,CAAGxI,IAAI,CAAC8C,KAAL,CAAWqF,GAAG,CAAGI,CAAjB,CAAR,CACA,GAAIE,EAAC,CAAG,CAAC5B,CAAC,CAAG2B,CAAL,EAAUR,EAAlB,CACA,GAAIU,GAAE,CAAGR,GAAG,CAAGrB,CAAN,CAAU4B,CAAnB,CAAsB;AACtB,GAAIE,GAAE,CAAGR,GAAG,CAAGK,CAAN,CAAUC,CAAnB,CACA;AACA;AACA,GAAIG,GAAJ,CAAQC,EAAR,CAAY;AACZ,GAAIH,EAAE,CAAGC,EAAT,CAAa,CAAE;AACXC,EAAE,CAAG,CAAL,CAAQC,EAAE,CAAG,CAAL,CACX,CAFD,IAEO,CAAK;AACRD,EAAE,CAAG,CAAL,CAAQC,EAAE,CAAG,CAAL,CACX,CACD;AACA;AACA;AACA,GAAIC,GAAE,CAAGJ,EAAE,CAAGE,EAAL,CAAUZ,EAAnB,CAAuB;AACvB,GAAIe,GAAE,CAAGJ,EAAE,CAAGE,EAAL,CAAUb,EAAnB,CACA,GAAIgB,GAAE,CAAGN,EAAE,CAAG,CAAL,CAAS,EAAIV,EAAtB,CAA0B;AAC1B,GAAIiB,GAAE,CAAGN,EAAE,CAAG,CAAL,CAAS,EAAIX,EAAtB,CACA;AACAnB,CAAC,EAAI,GAAL,CACA2B,CAAC,EAAI,GAAL,CACA,GAAIU,IAAG,CAAGvB,KAAK,CAACd,CAAC,CAAGY,IAAI,CAACe,CAAD,CAAT,CAAf,CACA,GAAIW,IAAG,CAAGxB,KAAK,CAACd,CAAC,CAAG+B,EAAJ,CAASnB,IAAI,CAACe,CAAC,CAAGK,EAAL,CAAd,CAAf,CACA,GAAIO,IAAG,CAAGzB,KAAK,CAACd,CAAC,CAAG,CAAJ,CAAQY,IAAI,CAACe,CAAC,CAAG,CAAL,CAAb,CAAf,CACA;AACA,GAAIa,GAAE,CAAG,IAAMX,EAAE,CAAGA,EAAX,CAAgBC,EAAE,CAAGA,EAA9B,CACA,GAAIU,EAAE,CAAG,CAAT,CAAY,CACRjB,EAAE,CAAG,CAAL,CACH,CAFD,IAEO,CACHiB,EAAE,EAAIA,EAAN,CACAjB,EAAE,CAAGiB,EAAE,CAAGA,EAAL,CAAUH,GAAG,CAAC7B,IAAJ,CAASqB,EAAT,CAAaC,EAAb,CAAf,CAAkC;AACrC,CACD,GAAIW,GAAE,CAAG,IAAMR,EAAE,CAAGA,EAAX,CAAgBC,EAAE,CAAGA,EAA9B,CACA,GAAIO,EAAE,CAAG,CAAT,CAAY,CACRjB,EAAE,CAAG,CAAL,CACH,CAFD,IAEO,CACHiB,EAAE,EAAIA,EAAN,CACAjB,EAAE,CAAGiB,EAAE,CAAGA,EAAL,CAAUH,GAAG,CAAC9B,IAAJ,CAASyB,EAAT,CAAaC,EAAb,CAAf,CACH,CACD,GAAIQ,GAAE,CAAG,IAAMP,EAAE,CAAGA,EAAX,CAAgBC,EAAE,CAAGA,EAA9B,CACA,GAAIM,EAAE,CAAG,CAAT,CAAY,CACRjB,EAAE,CAAG,CAAL,CACH,CAFD,IAEO,CACHiB,EAAE,EAAIA,EAAN,CACAjB,EAAE,CAAGiB,EAAE,CAAGA,EAAL,CAAUH,GAAG,CAAC/B,IAAJ,CAAS2B,EAAT,CAAaC,EAAb,CAAf,CACH,CACD;AACA;AACA,MAAO,KAAMb,EAAE,CAAGC,EAAL,CAAUC,EAAhB,CAAP,CACH,CAvDD,CAyDA,GAAMkB,MAAK,CAAG,EAAd,CACO,GAAMC,aAAY,sHAAG,iBAAOxI,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCqF,YAAzC,CAAuDvF,IAAvD,CAA6DC,IAA7D,CAAmE+C,OAAnE,0IACxBoE,IAAI,CAAC5H,IAAI,CAAC+C,MAAL,EAAD,CAAJ,CACI2G,OAFoB,CAEV,EAFU,CAGxB,IAAShG,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGjD,IAApB,CAA0BiD,CAAC,EAA3B,CAA+B,sBAClBC,CADkB,EAEvB;AACA,GAAMc,SAAQ,WAAMd,CAAN,aAAWD,CAAX,CAAd,CACA,GAAMM,cAAa,CAAGtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAAtB,CAEA;AACA,GAAIkF,MAAK,CAAG1B,QAAQ,CAACvE,CAAC,CAAG8F,KAAL,CAAY7F,CAAC,CAAG6F,KAAhB,CAApB,CACA,GAAMzC,MAAK,CAAG,CAAClI,YAAY,CAAC6F,IAAd,CAAd,CAEA,GAAIiF,KAAK,EAAI,CAAC,CAAV,EAAeA,KAAK,EAAI,CAAC,IAA7B,CAAmC,CAC/B5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACG,IAA3B,EACH,CAFD,IAGK,IAAI2K,KAAK,CAAG,CAAC,IAAT,EAAiBA,KAAK,EAAI,CAAC,IAA/B,CAAqC,CACtC5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAAC+K,WAA3B,EACH,CAFI,IAGA,IAAID,KAAK,CAAG,CAAC,IAAT,EAAiBA,KAAK,EAAI,IAA9B,CAAoC,CACrC5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACgL,UAA3B,EACH,CAFI,IAGA,IAAIF,KAAK,CAAG,IAAR,EAAgBA,KAAK,EAAI,IAA7B,CAAmC,CACpC5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACiL,UAA3B,EACH,CAFI,IAGA,IAAIH,KAAK,CAAG,IAAR,EAAgBA,KAAK,EAAI,IAA7B,CAAmC,CACpC5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACkL,UAA3B,EACH,CAFI,IAGA,IAAIJ,KAAK,CAAG,IAAR,EAAgBA,KAAK,EAAI,CAA7B,CAAgC,CACjC5C,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACmL,UAA3B,EACH,CAED,GAAIvF,QAAQ,GAAKxD,SAAjB,CAA4B,CACxB8F,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACmI,KAA3B,EACH,CAFD,IAGK,IAAIvC,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9B6F,KAAK,CAACjC,OAAN,CAAcjG,YAAY,CAACoI,MAA3B,EACH,CAEDjD,aAAa,CAAC,SAAAC,SAAS,QAAI8C,MAAJ,EAAV,CAAb,CACA2C,OAAO,CAACjF,QAAD,CAAP,CAAoB,CAACsC,KAAD,CAAQ/C,aAAR,CAApB,CArCuB,EAC3B,IAASL,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGnD,IAApB,CAA0BmD,CAAC,EAA3B,CAA+B,OAAtBA,CAAsB,EAqC9B,CACJ,CAEDoC,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CA5CwB,sDAAH,kBAAZD,aAAY,oEAAlB,C;;AC1HA,GAAM1G,OAAM,sHAAG,iBAAO9B,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCqF,YAAzC,CAAuDvF,IAAvD,CAA6DC,IAA7D,CAAmE+C,OAAnE,+IACdkG,OADc,CACJ,EADI,CAEThG,CAFS,CAEL,CAFK,aAEFA,CAAC,CAAGlD,IAFF,gDAGLmD,CAHK,EAIV,GAAMc,SAAQ,WAAMf,CAAN,aAAWC,CAAX,CAAd,CACA,GAAMK,cAAa,CAAGtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAAtB,CACA,GAAMwF,UAAS,CAAGvH,YAAY,CAAC,CAAD,CAAI,EAAJ,CAA9B,CAEA,GAAIuH,SAAS,EAAI,CAAjB,CAAoB,CAChB;AACA,GAAIC,UAAQ,CAAG,CAACrL,YAAY,CAAC6F,IAAd,CAAf,CAEA,GAAID,QAAQ,GAAKxD,SAAjB,CAA4B,CACxBiJ,SAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACmI,KAA9B,EACH,CAFD,IAGK,IAAIvC,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9BgJ,SAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACoI,MAA9B,EACH,CAEDyC,OAAO,CAACjF,QAAD,CAAP,CAAoB,CAACyF,SAAD,CAAWlG,aAAX,CAApB,CACA,iBACH,CAED;AACA,GAAIkG,SAAQ,CAAG,CAACrL,YAAY,CAACG,IAAd,CAAoBH,YAAY,CAAC6F,IAAjC,CAAf,CAEA,GAAID,QAAQ,GAAKxD,SAAjB,CAA4B,CACxBiJ,QAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACmI,KAA9B,EACH,CAFD,IAGK,IAAIvC,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9BgJ,QAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACoI,MAA9B,EACH,CAEDjD,aAAa,CAAC,SAAAC,SAAS,QAAIiG,SAAJ,EAAV,CAAb,CACAR,OAAO,CAACjF,QAAD,CAAP,CAAoB,CAACyF,QAAD,CAAWlG,aAAX,CAApB,CAlCU,EAGLL,CAHK,CAGD,CAHC,aAGEA,CAAC,CAAGlD,IAHN,sCAGLkD,CAHK,8FAGYA,CAAC,EAHb,+BAEQD,CAAC,EAFT,+BAsClBqC,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CAtCkB,uDAAH,kBAAN3G,OAAM,oEAAZ,C;;ACAA,GAAMoH,eAAc,sHAAG,iBAAOlJ,SAAP,CAAkBC,UAAlB,CAA8BR,SAA9B,CAAyCqF,YAAzC,CAAuDvF,IAAvD,CAA6DC,IAA7D,CAAmE+C,OAAnE,+IACtBkG,OADsB,CACZ,EADY,CAEjBhG,CAFiB,CAEb,CAFa,aAEVA,CAAC,CAAGlD,IAFM,gDAGbmD,CAHa,EAIlB,GAAMc,SAAQ,WAAMf,CAAN,aAAWC,CAAX,CAAd,CACA,GAAMK,cAAa,CAAGtD,SAAS,CAAC+D,QAAD,CAAT,CAAoB,CAApB,CAAtB,CACA,GAAMwF,UAAS,CAAGvH,YAAY,CAAC,CAAD,CAAI,EAAJ,CAA9B,CAEA,GAAIuH,SAAS,EAAI,CAAjB,CAAoB,CAChB;AACA,GAAIC,UAAQ,CAAG,CAACrL,YAAY,CAAC6F,IAAd,CAAf,CAEA,GAAID,QAAQ,GAAKxD,SAAjB,CAA4B,CACxBiJ,SAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACmI,KAA9B,EACH,CAFD,IAGK,IAAIvC,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9BgJ,SAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACoI,MAA9B,EACH,CAEDyC,OAAO,CAACjF,QAAD,CAAP,CAAoB,CAACyF,SAAD,CAAWlG,aAAX,CAApB,CACA,iBACH,CAED;AACA,GAAMoG,eAAc,CAAG1H,YAAY,CAAC7D,YAAY,CAACG,IAAd,CAAoBH,YAAY,CAACmL,UAAjC,CAAnC,CACA,GAAIE,SAAQ,CAAG,CAACE,cAAD,CAAiBvL,YAAY,CAAC6F,IAA9B,CAAf,CAEA,GAAID,QAAQ,GAAKxD,SAAjB,CAA4B,CACxBiJ,QAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACmI,KAA9B,EACH,CAFD,IAGK,IAAIvC,QAAQ,GAAKvD,UAAjB,CAA6B,CAC9BgJ,QAAQ,CAACpF,OAAT,CAAiBjG,YAAY,CAACoI,MAA9B,EACH,CAEDjD,aAAa,CAAC,SAAAC,SAAS,QAAIiG,SAAJ,EAAV,CAAb,CACAR,OAAO,CAACjF,QAAD,CAAP,CAAoB,CAACyF,QAAD,CAAWlG,aAAX,CAApB,CAnCkB,EAGbL,CAHa,CAGT,CAHS,aAGNA,CAAC,CAAGlD,IAHE,sCAGbkD,CAHa,8FAGIA,CAAC,EAHL,+BAEAD,CAAC,EAFD,+BAuC1BqC,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CAvC0B,uDAAH,kBAAdS,eAAc,oEAApB,C;;;;;;;;;;;iJCSP;AACA,GAAME,UAAS,CAAG,YAAlB,CACA,GAAMC,MAAK,CAAG,aAAd,CACA,GAAMC,IAAG,CAAG,sBAAZ,CACA,GAAMC,IAAG,CAAG,oBAAZ,CACA,GAAMC,yBAAwB,CAAG,0BAAjC,CAEA,GAAMC,cAAa,6EACdL,SADc,CACF9G,SADE,2DAEd+G,KAFc,CAENpF,KAFM,2DAGdqF,GAHc,CAGRvF,GAHQ,2DAIdwF,GAJc,CAIRjG,GAJQ,2DAKdkG,wBALc,CAKahF,qBALb,iBAAnB,CAOA/D,MAAM,CAACiJ,MAAP,CAAcD,aAAd,EAEA,GAAME,oBAAmB,CAAG,CAA5B,CACA,GAAMC,eAAc,+EACfR,SADe,CACH,CADG,4DAEfC,KAFe,CAEP,CAFO,4DAGfC,GAHe,CAGT,CAHS,4DAIfC,GAJe,CAIT,EAJS,4DAKfC,wBALe,CAKY,EALZ,kBAApB,CAOA/I,MAAM,CAACiJ,MAAP,CAAcE,cAAd,EAIA,GAAMC,aAAY,CAAG,CAACT,SAAD,CAAYC,KAAZ,CAAmBC,GAAnB,CAAwBC,GAAxB,CAA6BC,wBAA7B,CAArB,CACA/I,MAAM,CAACiJ,MAAP,CAAcG,YAAd,EACA,GAAM/I,oBAAmB,CAAG,CAACyI,GAAD,CAAMD,GAAN,CAAWE,wBAAX,CAA5B,CACA/I,MAAM,CAACiJ,MAAP,CAAc5I,mBAAd,EACA,GAAMK,iBAAgB,CAAG,CAACiI,SAAD,CAAYC,KAAZ,CAAmBC,GAAnB,CAAzB,CACA7I,MAAM,CAACiJ,MAAP,CAAcvI,gBAAd,EAIA;AACA,GAAM2I,sBAAqB,CAAG,CAA9B,CACA,GAAMC,mBAAkB,CAAG,oBAA3B,CACA,GAAMC,cAAa,CAAG,eAAtB,CACA,GAAMC,kBAAiB,CAAG,QAA1B,CACA,GAAMC,gBAAe,CAAG,mBAAxB,CACA,GAAMC,gBAAe,CAAG,CAACJ,kBAAD,CAAqBC,aAArB,CAAoCC,iBAApC,CAAuDC,eAAvD,CAAxB,CACAzJ,MAAM,CAACiJ,MAAP,CAAcS,eAAd,EAEA,GAAMlJ,uBAAsB,CAAG,CAAC8I,kBAAD,CAAqBE,iBAArB,CAA/B,CACAxJ,MAAM,CAACiJ,MAAP,CAAczI,sBAAd,EAEA,GAAMmJ,iBAAgB,mFACjBL,kBADiB,CACIlF,iBADJ,8DAEjBmF,aAFiB,CAEDxB,YAFC,8DAGjByB,iBAHiB,CAGGnI,MAHH,8DAIjBoI,eAJiB,CAIChB,cAJD,oBAAtB,CAMAzI,MAAM,CAACiJ,MAAP,CAAcU,gBAAd,EAEA,GAAMC,sBAAqB,2FACtBN,kBADsB,CACD,CADC,kEAEtBC,aAFsB,CAEN,CAFM,kEAGtBC,iBAHsB,CAGF,CAHE,kEAItBC,eAJsB,CAIJ,CAJI,wBAA3B,CAMAzJ,MAAM,CAACiJ,MAAP,CAAcW,qBAAd,EAIA;AACA,GAAMzM,aAAY,CAAG,CACjB,OAAQ,CADS,CAEjB,UAAW,CAFM,CAGjB,WAAY,CAHK,CAIjB,OAAQ,CAJS,CAKjB,SAAU,CALO,CAMjB,QAAS,CANQ,CAOjB,cAAe,CAPE,CAQjB,OAAQ,CARS,CASjB,cAAe,CATE,CAUjB,aAAc,CAVG,CAWjB,aAAc,EAXG,CAYjB,aAAc,EAZG,CAajB,aAAc,EAbG,CAArB,CAeA6C,MAAM,CAACiJ,MAAP,CAAc9L,YAAd,EAIA,GAAM0M,eAAc,+EACf1M,YAAY,CAAC6F,IADE,CACK,MADL,4DAEf7F,YAAY,CAACoI,MAFE,CAEO,QAFP,4DAGfpI,YAAY,CAACG,IAHE,CAGK,MAHL,4DAIfH,YAAY,CAACE,QAJE,CAIS,UAJT,4DAKfF,YAAY,CAACmI,KALE,CAKM,OALN,4DAMfnI,YAAY,CAACC,OANE,CAMQ,SANR,4DAOfD,YAAY,CAACwC,IAPE,CAOK,MAPL,4DAQfxC,YAAY,CAAC+K,WARE,CAQY,aARZ,4DASf/K,YAAY,CAACgL,UATE,CASW,YATX,4DAUfhL,YAAY,CAACiL,UAVE,CAUW,YAVX,4DAWfjL,YAAY,CAACkL,UAXE,CAWW,YAXX,4DAYflL,YAAY,CAACmL,UAZE,CAYW,YAZX,kBAApB,CAcAtI,MAAM,CAACiJ,MAAP,CAAcY,cAAd,EAIA,GAAMC,wBAAuB,CAAG,SAAhC,CACA,GAAMtM,WAAU,uEACXL,YAAY,CAAC6F,IADF,CACS,aADT,wDAEX7F,YAAY,CAACoI,MAFF,CAEW,SAFX,wDAGXpI,YAAY,CAACG,IAHF,CAGS,SAHT,wDAIXH,YAAY,CAACE,QAJF,CAIa,SAJb,wDAKXF,YAAY,CAACmI,KALF,CAKU,SALV,wDAMXnI,YAAY,CAACC,OANF,CAMY,SANZ,wDAOXD,YAAY,CAACwC,IAPF,CAOS,SAPT,wDAQXxC,YAAY,CAAC+K,WARF,CAQgB,SARhB,wDASX/K,YAAY,CAACgL,UATF,CASe,SATf,wDAUXhL,YAAY,CAACiL,UAVF,CAUe,SAVf,wDAWXjL,YAAY,CAACkL,UAXF,CAWe,SAXf,wDAYXlL,YAAY,CAACmL,UAZF,CAYe,SAZf,cAAhB,CAcAtI,MAAM,CAACiJ,MAAP,CAAczL,UAAd,EAIA,GAAMoF,WAAU,uEACXzF,YAAY,CAAC6F,IADF,CACS,CADT,wDAEX7F,YAAY,CAACoI,MAFF,CAEW,CAFX,wDAGXpI,YAAY,CAACG,IAHF,CAGS4E,QAHT,wDAIX/E,YAAY,CAACmI,KAJF,CAIU,CAJV,wDAKXnI,YAAY,CAAC+K,WALF,CAKgB,GALhB,wDAMX/K,YAAY,CAACgL,UANF,CAMe,EANf,wDAOXhL,YAAY,CAACiL,UAPF,CAOe,EAPf,wDAQXjL,YAAY,CAACkL,UARF,CAQe,EARf,wDASXlL,YAAY,CAACmL,UATF,CASe,EATf,cAAhB,CAWAtI,MAAM,CAACiJ,MAAP,CAAcrG,UAAd,EAGA;AACA,GAAMmH,cAAa,CAAG,CAAC,UAAD,CAAa,gBAAb,CAA+B,eAA/B,CAAgD,eAAhD,CAAiE,eAAjE,CAAkF,eAAlF,CAAtB,CACA,GAAMC,QAAO,iEACRD,aAAa,CAAC,CAAD,CADL,CACWF,cAAc,CAAC1M,YAAY,CAACG,IAAd,CADzB,qDAERyM,aAAa,CAAC,CAAD,CAFL,CAEWF,cAAc,CAAC1M,YAAY,CAAC+K,WAAd,CAFzB,qDAGR6B,aAAa,CAAC,CAAD,CAHL,CAGWF,cAAc,CAAC1M,YAAY,CAACgL,UAAd,CAHzB,qDAIR4B,aAAa,CAAC,CAAD,CAJL,CAIWF,cAAc,CAAC1M,YAAY,CAACiL,UAAd,CAJzB,qDAKR2B,aAAa,CAAC,CAAD,CALL,CAKWF,cAAc,CAAC1M,YAAY,CAACkL,UAAd,CALzB,qDAMR0B,aAAa,CAAC,CAAD,CANL,CAMWF,cAAc,CAAC1M,YAAY,CAACmL,UAAd,CANzB,WAAb,CAQAtI,MAAM,CAACiJ,MAAP,CAAce,OAAd,EAIA;AAEA,GAAMC,qBAAoB,CAAG,CACzBC,QAAQ,CAAE,EADe,CAEzBC,eAAe,CAAE,SAFQ,CAGzBC,YAAY,CAAE,CAHW,CAIzBC,OAAO,CAAE,EAJgB,CAKzBC,UAAU,CAAE,GALa,CAMzBC,SAAS,CAAE,GANc,CAOzBC,SAAS,CAAE,CAPc,CAQzBC,YAAY,CAAE,CARW,CAA7B,CAWA,GAAMC,2BAA0B,CAAG,CAC/BR,QAAQ,CAAE,EADqB,CAE/BC,eAAe,CAAE,SAFc,CAG/BC,YAAY,CAAE,CAHiB,CAI/BC,OAAO,CAAE,CAJsB,CAK/BM,OAAO,CAAE,QALsB,CAM/BC,KAAK,CAAE,OANwB,CAO/BC,UAAU,CAAE,GAPmB,CAAnC,CAUA,GAAMC,oBAAmB,yFACpBnC,SADoB,CACR,CACT,uBAAW,4CAAKA,SAAL,uBAAqB,wDAArB,wDAAmF,oEAAnF,iCAAsI,0DAAtI,aADF,CAET,cAAe,IAFN,CAGT,0BAAc,2BAAC,oCAAD,EAAmB,QAAQ,CAAC,QAA5B,CAAqC,KAAK,CAAEoC,gCAA5C,CAAyD,eAAe,CAAE,IAA1E,CAAgF,SAAS,CAAE,IAA3F,CAAiG,WAAW,CAAEd,oBAA9G,yvBAHL,CADQ,iEAkCpBrB,KAlCoB,CAkCZ,CACL,uBAAW,4CAAKA,KAAL,wBAAkB,0DAAlB,wDAAkF,oEAAlF,iCAAqI,0DAArI,aADN,CAEL,2BAAe,4EAAE,mHAA2D,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEmC,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,yCAA3D,wBAAmN,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,qBAAnN,+CAA8W,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,sFAAOL,0BAAP,MAAmCE,KAAK,CAAEpN,UAAU,CAACL,YAAY,CAACmI,KAAd,CAApD,EAApE,wBAA9W,qBAAgiB,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEyF,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,kBAAhiB,sBAA+pB,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,qBAA/pB,yBAAoyB,oEAApyB,4DAAk3B,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,kBAAl3B,qBAAg/B,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,sFAAOL,0BAAP,MAAmCE,KAAK,CAAEpN,UAAU,CAACL,YAAY,CAACoI,MAAd,CAApD,EAApE,yBAAh/B,OAAF,cAAuqC,6GAAqD,oEAArD,iEAAwI,mDAAxI,sBAA+J,mDAA/J,uIAAvqC,GAFV,CAGL,0BAAc,2BAAC,oCAAD,EAAmB,QAAQ,CAAC,QAA5B,CAAqC,KAAK,CAAEwF,gCAA5C,CAAyD,eAAe,CAAE,IAA1E,CAAgF,SAAS,CAAE,IAA3F,CAAiG,WAAW,CAAEd,oBAA9G,8nCAHT,CAlCY,iEAuEpBpB,GAvEoB,CAuEd,CACH,uBAAW,4CAAKA,GAAL,wBAAgB,kEAAhB,8DAA8F,oEAA9F,gCAAgJ,4DAAhJ,aADR,CAEH,0BAAc,2BAAC,oCAAD,EAAmB,QAAQ,CAAC,QAA5B,CAAqC,KAAK,CAAEkC,gCAA5C,CAAyD,eAAe,CAAE,IAA1E,CAAgF,SAAS,CAAE,IAA3F,CAAiG,WAAW,CAAEd,oBAA9G,ghBAFX,CAvEc,iEAiGpBnB,GAjGoB,CAiGd,CACH,uBAAW,4CAAKA,GAAL,wBAAgB,kEAAhB,2CAA2E,+FAA3E,sBAA8I,4DAA9I,GADR,CAEH,0BAAc,2BAAC,oCAAD,EAAmB,QAAQ,CAAC,QAA5B,CAAqC,KAAK,CAAEiC,gCAA5C,CAAyD,eAAe,CAAE,IAA1E,CAAgF,SAAS,CAAE,IAA3F,CAAiG,WAAW,CAAEd,oBAA9G,unBAFX,CAjGc,iEA+HpBlB,wBA/HoB,CA+HO,CACxB,uBAAW,4CAAKA,wBAAL,wBAAqC,0DAArC,sBAAmE,wDAAnE,gDAAyH,2DAAzH,+DAAiM,4DAAjM,GADa,CAExB,2BAAe,4EAAE,yDAAeH,KAAf,4EAAgF,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEmC,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,+BAAhF,wBAA8N,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,qBAA9N,yBAAmW,oEAAnW,4DAAib,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,kBAAjb,qBAA+iB,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,sFAAOL,0BAAP,MAAmCE,KAAK,CAAEpN,UAAU,CAACL,YAAY,CAACoI,MAAd,CAApD,EAApE,yBAA/iB,aAAyuBqD,KAAzuB,MAAkvBG,wBAAlvB,qGAA+1B,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEgC,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,kBAA/1B,qBAA69B,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,WAAW,sFAAOL,0BAAP,MAAmCE,KAAK,CAAEpN,UAAU,CAACL,YAAY,CAACoI,MAAd,CAApD,EAApE,yBAA79B,uEAAmsC,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEwF,gCAA5C,CAAyD,WAAW,sFAAOL,0BAAP,MAAmCE,KAAK,CAAEpN,UAAU,CAACL,YAAY,CAACmI,KAAd,CAApD,EAApE,wBAAnsC,qBAAq3C,2BAAC,oCAAD,EAAmB,QAAQ,CAAE,MAA7B,CAAqC,KAAK,CAAEyF,gCAA5C,CAAyD,WAAW,CAAEL,0BAAtE,kBAAr3C,OAAF,cAAs/C,6GAAqD,oEAArD,iEAAwI,mDAAxI,sBAA+J,mDAA/J,uIAAt/C,GAFS,CAGxB,0BAAc,2BAAC,oCAAD,EAAmB,QAAQ,CAAC,QAA5B,CAAqC,KAAK,CAAEK,gCAA5C,CAAyD,eAAe,CAAE,IAA1E,CAAgF,SAAS,CAAE,IAA3F,CAAiG,WAAW,CAAEd,oBAA9G,s9BAHU,CA/HP,uBAAzB,CAmKAjK,MAAM,CAACiJ,MAAP,CAAc6B,mBAAd,E;;ACzVA,GAAME,UAAI,CAAG,QAAPA,KAAO,MAAwJ,IAArJC,OAAqJ,MAArJA,MAAqJ,CAA7IC,IAA6I,MAA7IA,IAA6I,CAAvI7G,YAAuI,MAAvIA,YAAuI,CAAzH8G,iBAAyH,MAAzHA,iBAAyH,CAAtGC,oBAAsG,MAAtGA,oBAAsG,CAAhFC,YAAgF,MAAhFA,YAAgF,CAAlEC,aAAkE,MAAlEA,aAAkE,CAAnDC,WAAmD,MAAnDA,WAAmD,CAAtCC,gBAAsC,MAAtCA,gBAAsC,CAApBC,aAAoB,MAApBA,aAAoB,eAC/HC,yBAAQ,CAACD,aAAD,CADuH,kEAC1JvO,SAD0J,eAC/IyO,YAD+I,eAGjKC,0BAAS,CAAC,UAAM,CACZvH,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAACQ,aAAD,CAAgBE,YAAhB,CAA/B,IAAV,CAAZ,CACH,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAME,UAAS,CAAG5O,mBAAY,CAACC,SAAD,CAA9B,CACA,GAAI4O,UAAS,CAAG,CACZlH,KAAK,CAAEsG,IADK,CAEZrG,MAAM,CAAEqG,IAFI,CAGZf,eAAe,CAAE0B,SAHL,CAIZE,MAAM,qBAAe7O,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAAC6F,IAA9B,CAAqC8G,uBAArC,CAA+D+B,SAA9E,CAJM,CAAhB,CAOA,GAAI,CAACN,WAAL,CAAkB,CACd,GAAIJ,iBAAiB,GAAKhO,YAAY,CAACmI,KAAnC,EAA4C6F,iBAAiB,GAAKhO,YAAY,CAACoI,MAAnF,CAA2F,CACvFuG,SAAS,CAACE,MAAV,CAAmB,UAAnB,CACH,CAFD,IAGK,IAAIb,iBAAiB,GAAKhO,YAAY,CAAC6F,IAAnC,GAA4C9F,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACmI,KAA9B,EAAuCpI,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACoI,MAAjH,CAAJ,CAA8H,CAC/HuG,SAAS,CAACE,MAAV,CAAmB,MAAnB,CACH,CACJ,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACtB,GAAI/O,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAAC6F,IAAjC,CAAuC,CACnCoI,oBAAoB,CAACjO,YAAY,CAACqO,gBAAD,CAAb,CAApB,CACAG,YAAY,CAAC,SAAApJ,SAAS,QAAI,CAACpF,YAAY,CAACqO,gBAAD,CAAb,CAAiCrO,YAAY,CAAC6F,IAA9C,CAAJ,EAAV,CAAZ,CACAqB,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC,CAAC9N,YAAY,CAACqO,gBAAD,CAAb,CAAiCrO,YAAY,CAAC6F,IAA9C,CAAD,CAAsD2I,YAAtD,CAA/B,IAAV,CAAZ,CACA,OACH,CALD,IAMK,IAAIzO,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAACG,IAAjC,CAAuC,CACxCqO,YAAY,CAAC,SAAApJ,SAAS,QAAIA,UAAS,CAACC,KAAV,CAAgB,CAAhB,CAAJ,EAAV,CAAZ,CACA6B,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC/N,SAAS,CAACsF,KAAV,CAAgB,CAAhB,CAAD,CAAqBmJ,YAArB,CAA/B,IAAV,CAAZ,CACAP,oBAAoB,CAACjO,YAAY,CAAC+O,WAAd,CAApB,CACA,OACH,CALI,IAMA,IAAIhP,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACmI,KAA9B,EAAuCpI,SAAS,CAAC,CAAD,CAAT,GAAiBC,YAAY,CAACoI,MAAzE,CAAiF,CAClFlB,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC/N,SAAS,CAACsF,KAAV,CAAgB,CAAhB,CAAD,CAAqBmJ,YAArB,CAA/B,IAAV,CAAZ,CACH,CAEDP,oBAAoB,CAAClO,SAAS,CAAC,CAAD,CAAV,CAApB,CACH,CAlBD,CAoBA,GAAMiP,aAAY,CAAG,QAAfA,aAAe,EAAM,CACvB,GAAIhB,iBAAiB,GAAKhO,YAAY,CAAC+O,WAAnC,EAAkDhP,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAACG,IAAnF,CAAyF,CACrFqO,YAAY,CAAC,SAAApJ,SAAS,QAAIA,UAAS,CAACC,KAAV,CAAgB,CAAhB,CAAJ,EAAV,CAAZ,CACA6B,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC/N,SAAS,CAACsF,KAAV,CAAgB,CAAhB,CAAD,CAAqBmJ,YAArB,CAA/B,IAAV,CAAZ,CACH,CAHD,IAIK,IAAIR,iBAAiB,GAAKhO,YAAY,CAACqO,gBAAD,CAAlC,EAAwDtO,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAAC6F,IAAzF,CAA+F,CAChG2I,YAAY,CAAC,SAAApJ,SAAS,QAAI,CAACpF,YAAY,CAACqO,gBAAD,CAAb,CAAiCrO,YAAY,CAAC6F,IAA9C,CAAJ,EAAV,CAAZ,CACAqB,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC,CAAC9N,YAAY,CAACqO,gBAAD,CAAb,CAAiCrO,YAAY,CAAC6F,IAA9C,CAAD,CAAsD2I,YAAtD,CAA/B,IAAV,CAAZ,CACH,CAHI,IAIA,IAAIR,iBAAiB,GAAKhO,YAAY,CAACmI,KAAvC,CAA8C,CAC/CqG,YAAY,CAAC,SAAApJ,SAAS,SAAK4I,iBAAL,sDAA2B5I,SAA3B,IAAV,CAAZ,CACH,CAFI,IAGA,IAAI4I,iBAAiB,GAAKhO,YAAY,CAACoI,MAAvC,CAA+C,CAChDoG,YAAY,CAAC,SAAApJ,SAAS,SAAK4I,iBAAL,sDAA2B5I,SAA3B,IAAV,CAAZ,CACH,CACJ,CAfD,CAiBA,GAAM6J,UAAS,CAAG,QAAZA,UAAY,EAAM,CACpB,GAAIjB,iBAAiB,GAAKhO,YAAY,CAACmI,KAAnC,EAA4C6F,iBAAiB,GAAKhO,YAAY,CAACoI,MAAnF,CAA2F,CACvFoG,YAAY,CAAC,SAAApJ,SAAS,QAAIA,UAAS,CAACC,KAAV,CAAgB,CAAhB,CAAJ,EAAV,CAAZ,CACA,OACH,CACJ,CALD,CAOA,GAAM6J,UAAS,CAAG,QAAZA,UAAY,EAAM,CACpB,GAAIlB,iBAAiB,GAAKhO,YAAY,CAACmI,KAAvC,CAA8C,CAC1C+F,YAAY,CAACJ,MAAD,CAAZ,CACA5G,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC/N,SAAD,CAAYyO,YAAZ,CAA/B,IAAV,CAAZ,CACH,CAHD,IAIK,IAAIR,iBAAiB,GAAKhO,YAAY,CAACoI,MAAvC,CAA+C,CAChD+F,aAAa,CAACL,MAAD,CAAb,CACA5G,YAAY,CAAC,SAAA9B,SAAS,8FAAUA,SAAV,kDAAsB0I,MAAtB,CAA+B,CAAC/N,SAAD,CAAYyO,YAAZ,CAA/B,IAAV,CAAZ,CACH,CACD,GAAIR,iBAAiB,GAAKhO,YAAY,CAAC6F,IAAvC,CAA6C,CACzCoI,oBAAoB,CAACjO,YAAY,CAAC6F,IAAd,CAApB,CACH,CACJ,CAZD,CAcA,mBACI,kCAAK,KAAK,CAAE8I,SAAZ,CAAuB,SAAS,gBAAU,CAAE5O,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAACG,IAA7B,EAAqC6N,iBAAiB,GAAKhO,YAAY,CAAC6F,IAAzE,EAAkFmI,iBAAiB,GAAKhO,YAAY,CAAC+O,WAAtH,GAAsI,SAAhJ,sBAC9Bf,iBAAiB,GAAKhO,YAAY,CAAC+O,WAAnC,GAAmDhP,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAAC6F,IAA7B,EAAqCmI,iBAAiB,EAAIhO,YAAY,CAACG,IAA1H,GAAmI,CAACiO,WAApI,EAAmJ,eADrH,CAAhC,CACwK,WAAW,CAAEA,WAAW,CAAG,IAAH,CAAUU,WAD1M,CACuN,SAAS,CAAEV,WAAW,CAAG,IAAH,CAAUc,SADvP,CACkQ,YAAY,CAAEd,WAAW,CAAG,IAAH,CAAUY,YADrS,CACmT,YAAY,CAAEZ,WAAW,CAAG,IAAH,CAAUa,SADtV,EADJ,CAKH,CAvFD,CAyFepB,6DAAf,E;;ACzFA,GAAMsB,KAAI,cAAGC,eAAK,CAACC,IAAN,CAAW,cAAiH,IAA9G1N,KAA8G,MAA9GA,IAA8G,CAAxGC,IAAwG,MAAxGA,IAAwG,CAAlGsL,OAAkG,MAAlGA,OAAkG,CAAzFoC,QAAyF,MAAzFA,QAAyF,CAA/EpI,YAA+E,MAA/EA,YAA+E,CAAjEmH,gBAAiE,MAAjEA,gBAAiE,CAA/CH,YAA+C,MAA/CA,YAA+C,CAAjCC,aAAiC,MAAjCA,aAAiC,CAAlBC,WAAkB,MAAlBA,WAAkB,eACnFG,yBAAQ,CAACvO,YAAY,CAAC6F,IAAd,CAD2E,kEAC9HmI,iBAD8H,eAC3GC,oBAD2G,eAGrI;AACApH,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACA,GAAMyI,MAAK,CAAG,EAAd,CACA,IAAK,GAAI1K,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CAC3B,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,CAC3B,GAAIgJ,OAAM,WAAMjJ,CAAN,aAAWC,CAAX,CAAV,CAEA,GAAIwJ,cAAa,CAAG,CAACtO,YAAY,CAAC6F,IAAd,CAApB,CACA,GAAIhB,CAAC,GAAK,CAAN,EAAWC,CAAC,GAAK,CAArB,CAAwB,CACpBwJ,aAAa,CAACrI,OAAd,CAAsBjG,YAAY,CAACmI,KAAnC,EACH,CAFD,IAGK,IAAItD,CAAC,GAAMlD,IAAI,CAAG,CAAd,EAAoBmD,CAAC,GAAMlD,IAAI,CAAG,CAAtC,CAA0C,CAC3C0M,aAAa,CAACrI,OAAd,CAAsBjG,YAAY,CAACoI,MAAnC,EACH,CAEDmH,KAAK,CAACrN,IAAN,cAAW,2BAAC,eAAD,EAAM,MAAM,CAAE4L,MAAd,CACP,IAAI,CAAEwB,QADC,CACS,YAAY,CAAEpI,YADvB,CAEP,iBAAiB,CAAE8G,iBAFZ,CAGP,oBAAoB,CAAEC,oBAHf,CAIP,YAAY,CAAEC,YAJP,CAIqB,aAAa,CAAEC,aAJpC,CAImD,WAAW,CAAEC,WAJhE,CAI6E,gBAAgB,CAAEC,gBAJ/F,CAIiH,aAAa,CAAEC,aAJhI,EAIoJR,MAJpJ,CAAX,EAKH,CACJ,CAED,GAAM0B,eAAc,CAAG,CACnB/H,KAAK,CAAG7F,IAAI,CAAG0N,QAAR,CAAoB1N,IADR,CAEnB8F,MAAM,CAAG/F,IAAI,CAAG2N,QAAR,CAAoB3N,IAFT,CAAvB,CAKA,GAAM8N,eAAc,CAAG,CACnBC,WAAW,CAAExC,OADM,CAEnByC,YAAY,CAAEzC,OAFK,CAAvB,CAKA,mBACI,kCAAK,KAAK,CAAEuC,cAAZ,uBACI,kCAAK,SAAS,CAAC,MAAf,CAAsB,KAAK,CAAED,cAA7B,UACKD,KADL,EADJ,EADJ,CAOH,CA3CY,CAAb,CA6CeJ,wDAAf,E;;AClDA,GAAMS,YAAK,CAAG,QAARA,MAAQ,MAAqC,IAAlCC,eAAkC,MAAlCA,cAAkC,CAAlBzB,WAAkB,MAAlBA,WAAkB,CAC/C,mBACI,kCAAK,SAAS,kBAAYA,WAAW,CAAG,UAAH,CAAgB,KAAvC,CAAd,CAA8D,OAAO,CAAEA,WAAW,CAAG,IAAH,CAAUyB,cAA5F,6BADJ,CAKH,CAND,CAQeD,gEAAf,E;;ACNA,GAAME,YAAK,CAAG,QAARA,MAAQ,MAAgC,IAA7BC,UAA6B,MAA7BA,SAA6B,CAAlB3B,WAAkB,MAAlBA,WAAkB,CAC1C,mBACI,kCAAK,SAAS,kBAAYA,WAAW,CAAG,UAAH,CAAgB,QAAvC,CAAd,CAAiE,OAAO,CAAEA,WAAW,CAAG,IAAH,CAAU2B,SAA/F,wBADJ,CAKH,CAND,CAQeD,gEAAf,E;;ACPA,GAAME,oBAAS,CAAG,QAAZA,UAAY,MAA8H,IAA3HrO,KAA2H,MAA3HA,IAA2H,CAArHC,IAAqH,MAArHA,IAAqH,CAA/GqO,YAA+G,MAA/GA,YAA+G,CAAjGpO,SAAiG,MAAjGA,SAAiG,CAAtFqF,YAAsF,MAAtFA,YAAsF,CAAxE9E,SAAwE,MAAxEA,SAAwE,CAA7DC,UAA6D,MAA7DA,UAA6D,CAAjD6N,aAAiD,MAAjDA,aAAiD,CAAlC9B,WAAkC,MAAlCA,WAAkC,CAArB+B,cAAqB,MAArBA,cAAqB,CAC5I,GAAMC,IAAG,uHAAG,8JACJhO,SAAS,GAAKC,UADV,oEAKR6N,aAAa,GACbC,cAAc,CAAC,IAAD,CAAd,CACAtJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BmJ,YAA1B,EAEIzN,IATI,CASG,EATH,wBAUKqJ,cAAa,CAACoE,YAAD,CAAb,CAA4B7N,SAA5B,CAAuCC,UAAvC,CAAmDR,SAAnD,CAA8DF,IAA9D,CAAoEC,IAApE,CAA0EoK,cAAc,CAACiE,YAAD,CAAxF,CAVL,QAURzN,IAVQ,gBAYRqE,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBmJ,YAAvB,EAZQ,6DAcCjI,CAdD,0JAeExE,MAAK,CAACuI,mBAAD,CAfP,QAgBE5G,aAhBF,CAgBkBtD,SAAS,CAACW,IAAI,CAACwF,CAAD,CAAL,CAAT,CAAmB,CAAnB,CAhBlB,CAiBJ7C,aAAa,CAAC,SAAAC,SAAS,SAAMpF,YAAY,CAACwC,IAAnB,sDAA4BX,SAAS,CAACW,IAAI,CAACwF,CAAD,CAAL,CAAT,CAAmB,CAAnB,CAA5B,IAAV,CAAb,CAjBI,sDAcCA,CAdD,CAcKxF,IAAI,CAACyC,MAAL,CAAc,CAdnB,cAcsB+C,CAAC,EAAI,CAd3B,iEAcCA,CAdD,mBAc8BA,CAAC,EAd/B,iCAoBRmI,cAAc,CAAC,KAAD,CAAd,CApBQ,wDAAH,kBAAHC,IAAG,2CAAT,CAuBA,mBACI,kCAAK,SAAS,kBAAYhC,WAAW,CAAG,UAAH,CAAgB,OAAvC,CAAd,CAAgE,OAAO,CAAEA,WAAW,CAAG,IAAH,CAAUgC,GAA9F,iBADJ,CAKH,CA7BD,CA+BeJ,4EAAf,E;;AClCe,oEAAuB,yCAAyC,E;;ACAhE,gEAAuB,qCAAqC,E;;ACA5D,yEAAuB,8CAA8C,E;;ACArE,iEAAuB,sCAAsC,E;;ACA7D,0EAAuB,+CAA+C,E;;ACSrF,GAAMK,8BAAc,CAAG,QAAjBA,eAAiB,MAA6G,IAA1GC,aAA0G,MAA1GA,YAA0G,CAA5FC,KAA4F,MAA5FA,KAA4F,CAArFC,QAAqF,MAArFA,QAAqF,CAA3EC,aAA2E,MAA3EA,aAA2E,CAA5DC,cAA4D,MAA5DA,cAA4D,CAA5CC,kBAA4C,MAA5CA,kBAA4C,CAAxBC,iBAAwB,MAAxBA,iBAAwB,eACxFrC,yBAAQ,CAAC,KAAD,CADgF,kEACzHsC,YADyH,eAC3GC,eAD2G,8BAE1FvC,yBAAQ,CAACgC,KAAK,CAAC,CAAD,CAAN,CAFkF,mEAEzHQ,WAFyH,eAE5GC,cAF4G,8BAG5FzC,yBAAQ,CAAC,CAAD,CAHoF,mEAGzH0C,UAHyH,eAG7GC,aAH6G,eAKhIzC,0BAAS,CAAC,UAAM,CACZ,GAAI+B,QAAQ,EAAIG,kBAAhB,CAAoC,CAChCK,cAAc,CAACT,KAAK,CAAC,CAAD,CAAN,CAAd,CACAW,aAAa,CAAC,CAAD,CAAb,CACAJ,eAAe,CAAC,KAAD,CAAf,CACAR,YAAY,CAACC,KAAK,CAAC,CAAD,CAAN,CAAZ,CACH,CACJ,CAPQ,CAON,CAACC,QAAD,CAPM,CAAT,CASA/B,0BAAS,CAAC,UAAM,CACZuC,cAAc,CAACT,KAAK,CAAC,CAAD,CAAN,CAAd,CACAW,aAAa,CAAC,CAAD,CAAb,CACAJ,eAAe,CAAC,KAAD,CAAf,CACAR,YAAY,CAACC,KAAK,CAAC,CAAD,CAAN,CAAZ,CACH,CALQ,CAKN,CAACA,KAAD,CALM,CAAT,CAOA,GAAMY,OAAM,CAAG,QAATA,OAAS,EAAM,CACjBL,eAAe,CAAC,SAAA1L,SAAS,QAAI,CAACA,SAAL,EAAV,CAAf,CACH,CAFD,CAIA,GAAMgM,cAAa,CAAG,QAAhBA,cAAgB,CAACC,EAAD,CAAQ,CAC1BP,eAAe,CAAC,SAAA1L,SAAS,QAAI,CAACA,SAAL,EAAV,CAAf,CACA4L,cAAc,CAACT,KAAK,CAACc,EAAD,CAAN,CAAd,CACAH,aAAa,CAACG,EAAD,CAAb,CACAf,YAAY,CAACC,KAAK,CAACc,EAAD,CAAN,CAAZ,CACH,CALD,CAOA,GAAMC,MAAK,CAAG,CACV7J,KAAK,CAAEgJ,aADG,CAAd,CAIA,GAAMc,cAAa,CAAG,EAAtB,CApCgI,yBAqCvHvJ,CArCuH,EAsC5HuJ,aAAa,CAACrP,IAAd,cAAmB,mCAAK,KAAK,CAAEoP,KAAZ,CAAmB,SAAS,8BAAwBtJ,CAAC,GAAKiJ,UAAN,EAAoB,UAA5C,aAA0DjJ,CAAC,GAAKuI,KAAK,CAACtL,MAAN,CAAe,CAArB,EAA0B,MAApF,CAA5B,CAA0H,OAAO,CAAE,kBAAM,CAAEmM,aAAa,CAACpJ,CAAD,CAAb,CAAkB,CAA7J,WACduI,KAAK,CAACvI,CAAD,CADS,CAEd0I,cAAc,GAAK,CAAC1N,uBAAgB,CAACuN,KAAK,CAACvI,CAAD,CAAN,CAAjB,cAA8B,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEwJ,MAA1C,CAAkD,KAAK,WAAKjB,KAAK,CAACvI,CAAD,CAAV,0CAAvD,CAA8G,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,0CAAjH,EAA9B,cAA+M,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEyJ,eAA1C,CAA0D,KAAK,WAAKlB,KAAK,CAACvI,CAAD,CAAV,8CAA/D,CAA0H,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,8CAA7H,EAApN,CAFA,CAGd0I,cAAc,GAAKpN,oBAAa,CAACiN,KAAK,CAACvI,CAAD,CAAN,CAAb,cAA0B,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAE0J,OAA1C,CAAmD,KAAK,WAAKnB,KAAK,CAACvI,CAAD,CAAV,8BAAxD,CAAmG,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,8BAAtG,EAA1B,cAAoL,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAE2J,gBAA1C,CAA2D,KAAK,WAAKpB,KAAK,CAACvI,CAAD,CAAV,sCAAhE,CAAmH,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,sCAAtH,EAAzL,CAHA,CAId2I,kBAAkB,eAAI,kCAAK,KAAK,CAAE,CAAE3D,eAAe,CAAE3M,UAAU,CAACL,YAAY,CAAC6M,OAAO,CAAC0D,KAAK,CAACvI,CAAD,CAAN,CAAR,CAAb,CAA7B,CAAZ,CAA8E,SAAS,CAAC,kBAAxF,eAJR,CAKd4I,iBAAiB,GAAK,CAACxN,8BAAuB,CAACmN,KAAK,CAACvI,CAAD,CAAN,CAAxB,cAAqC,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEwJ,MAA1C,CAAkD,KAAK,WAAKjB,KAAK,CAACvI,CAAD,CAAV,qCAAvD,CAAyG,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,qCAA5G,EAArC,cAA4M,kCAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEyJ,eAA1C,CAA0D,KAAK,WAAKlB,KAAK,CAACvI,CAAD,CAAV,qCAA/D,CAAiH,GAAG,WAAKuI,KAAK,CAACvI,CAAD,CAAV,qCAApH,EAAjN,CALH,GAAoKA,CAApK,CAAnB,EAtC4H,EAqChI,IAAK,GAAIA,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGuI,KAAK,CAACtL,MAA1B,CAAkC+C,CAAC,EAAnC,CAAuC,OAA9BA,CAA8B,EAQtC,CAED,mBACI,mCAAK,SAAS,CAAC,UAAf,wBACI,mCAAK,KAAK,CAAEsJ,KAAZ,CAAmB,SAAS,2BAAqBT,YAAY,EAAI,MAArC,aAA+CL,QAAQ,EAAI,UAA3D,CAA5B,CAAqG,OAAO,CAAEA,QAAQ,CAAG,IAAH,CAAUW,MAAhI,WACKJ,WADL,CAEK,CAACP,QAAD,eAAa,kCAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAEoB,UAAjC,CAA4C,GAAG,CAAC,EAAhD,EAFlB,GADJ,cAKI,kCAAK,KAAK,CAAE,CAAEpE,OAAO,CAAGqD,YAAY,CAAG,MAAH,CAAY,MAApC,CAAZ,CAA2D,SAAS,CAAC,eAArE,UACKU,aADL,EALJ,GADJ,CAWH,CA1DD,CA4DelB,2FAAf,E;;ACrEA,GAAMwB,kBAAQ,CAAG,QAAXA,SAAW,MAAuB,IAApBC,cAAoB,MAApBA,aAAoB,CACpC,mBACI,kCAAK,SAAS,cAAd,CAA+B,OAAO,CAAEA,aAAxC,kBADJ,CAKH,CAND,CAQeD,yEAAf,E;;ACFA,GAAME,gCAAe,CAAG,QAAlBA,gBAAkB,MAA6K,IAA1KpQ,KAA0K,MAA1KA,IAA0K,CAApKC,IAAoK,MAApKA,IAAoK,CAA9JC,SAA8J,MAA9JA,SAA8J,CAAnJqF,YAAmJ,MAAnJA,YAAmJ,CAArI9E,SAAqI,MAArIA,SAAqI,CAA1HC,UAA0H,MAA1HA,UAA0H,CAA9G6N,aAA8G,MAA9GA,aAA8G,CAA/F9B,WAA+F,MAA/FA,WAA+F,CAAlF+B,cAAkF,MAAlFA,cAAkF,CAAlEM,aAAkE,MAAlEA,aAAkE,CAAnDqB,aAAmD,MAAnDA,aAAmD,CAApC7B,YAAoC,MAApCA,YAAoC,CAAtB+B,eAAsB,MAAtBA,eAAsB,CAEjM,mBACI,mCAAK,SAAS,cAAd,wBACI,2BAAC,yBAAD,EAAgB,YAAY,CAAEA,eAA9B,CAA+C,KAAK,CAAE/F,YAAtD,CAAoE,QAAQ,CAAEmC,WAA9E,CAA2F,aAAa,CAAEqC,aAA1G,CAAyH,cAAc,CAAE,IAAzI,CAA+I,kBAAkB,CAAE,KAAnK,EADJ,cAEI,2BAAC,mBAAD,EAAU,aAAa,CAAEqB,aAAzB,EAFJ,cAGI,2BAAC,oBAAD,EAAW,IAAI,CAAEnQ,IAAjB,CAAuB,IAAI,CAAEC,IAA7B,CAAmC,YAAY,CAAEqO,YAAjD,CAA+D,SAAS,CAAEpO,SAA1E,CAAqF,YAAY,CAAEqF,YAAnG,CAAiH,SAAS,CAAE9E,SAA5H,CAAuI,UAAU,CAAEC,UAAnJ,CAA+J,aAAa,CAAE6N,aAA9K,CAA6L,WAAW,CAAE9B,WAA1M,CAAuN,cAAc,CAAE+B,cAAvO,EAHJ,GADJ,CAOH,CATD,CAWe4B,8FAAf,E;;ACfA,GAAME,gCAAe,CAAG,QAAlBA,gBAAkB,MAAiI,IAA9HtQ,KAA8H,MAA9HA,IAA8H,CAAxHC,IAAwH,MAAxHA,IAAwH,CAAlHsQ,mBAAkH,MAAlHA,mBAAkH,CAA7FrQ,SAA6F,MAA7FA,SAA6F,CAAlFqF,YAAkF,MAAlFA,YAAkF,CAApE9E,SAAoE,MAApEA,SAAoE,CAAzDC,UAAyD,MAAzDA,UAAyD,CAA7C+L,WAA6C,MAA7CA,WAA6C,CAAhC+B,cAAgC,MAAhCA,cAAgC,CAAhBgC,SAAgB,MAAhBA,SAAgB,CACrJ,GAAM/B,IAAG,uHAAG,2JACF+B,UAAS,EADP,QAGRhC,cAAc,CAAC,IAAD,CAAd,CACAtJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BoL,mBAA1B,EAJQ,sBAMF1F,iBAAgB,CAAC0F,mBAAD,CAAhB,CAAsC9P,SAAtC,CAAiDC,UAAjD,CAA6DR,SAA7D,CAAwEqF,YAAxE,CAAsFvF,IAAtF,CAA4FC,IAA5F,CAAkG6K,qBAAqB,CAACyF,mBAAD,CAAvH,CANE,QAQRrL,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBoL,mBAAvB,EACA/B,cAAc,CAAC,KAAD,CAAd,CATQ,sDAAH,kBAAHC,IAAG,2CAAT,CAYA,mBACI,kCAAK,SAAS,kBAAYhC,WAAW,CAAG,UAAH,CAAgB,OAAvC,CAAd,CAAgE,OAAO,CAAEA,WAAW,CAAG,IAAH,CAAUgC,GAA9F,iBADJ,CAKH,CAlBD,CAoBe6B,8FAAf,E;;AChBA,GAAMG,4BAAa,CAAG,QAAhBA,cAAgB,MAAyI,IAAtIzQ,KAAsI,MAAtIA,IAAsI,CAAhIC,IAAgI,MAAhIA,IAAgI,CAA1HC,SAA0H,MAA1HA,SAA0H,CAA/GqF,YAA+G,MAA/GA,YAA+G,CAAjG9E,SAAiG,MAAjGA,SAAiG,CAAtFC,UAAsF,MAAtFA,UAAsF,CAA1E+L,WAA0E,MAA1EA,WAA0E,CAA7D+B,cAA6D,MAA7DA,cAA6D,CAA7CM,aAA6C,MAA7CA,aAA6C,CAA9B0B,SAA8B,MAA9BA,SAA8B,CAAnBlC,YAAmB,MAAnBA,YAAmB,eACrG1B,yBAAQ,CAAChC,eAAe,CAAC,CAAD,CAAhB,CAD6F,kEACpJ2F,mBADoJ,eAC/HG,sBAD+H,eAG3J,mBACI,mCAAK,SAAS,iBAAd,wBACI,2BAAC,yBAAD,EAAgB,YAAY,CAAEA,sBAA9B,CAAsD,KAAK,CAAErP,uBAAgB,CAACiN,YAAD,CAAhB,CAAiC5M,sBAAjC,CAA0DkJ,eAAvH,CAAwI,QAAQ,CAAE,KAAlJ,CAAyJ,aAAa,CAAEkE,aAAxK,CAAuL,cAAc,CAAE,KAAvM,CAA8M,kBAAkB,CAAE,KAAlO,CAAyO,iBAAiB,CAAE,IAA5P,EADJ,cAEI,2BAAC,0BAAD,EAAiB,IAAI,CAAE9O,IAAvB,CAA6B,IAAI,CAAEC,IAAnC,CAAyC,mBAAmB,CAAEsQ,mBAA9D,CAAmF,SAAS,CAAErQ,SAA9F,CAAyG,YAAY,CAAEqF,YAAvH,CAAqI,SAAS,CAAE9E,SAAhJ,CAA2J,UAAU,CAAEC,UAAvK,CAAmL,WAAW,CAAE+L,WAAhM,CAA6M,cAAc,CAAE+B,cAA7N,CAA6O,SAAS,CAAEgC,SAAxP,EAFJ,GADJ,CAMH,CATD,CAWeC,wFAAf,E;;ACdA,GAAME,8BAAc,CAAG,QAAjBA,eAAiB,MAAiE,IAA9DC,oBAA8D,MAA9DA,mBAA8D,CAAzCC,mBAAyC,MAAzCA,mBAAyC,CAApB/B,aAAoB,MAApBA,aAAoB,CACpF,GAAMgC,YAAW,CAAG,QAAdA,YAAc,CAACC,YAAD,CAAkB,CAClC7L,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8B+F,OAAO,CAAC6F,YAAD,CAArC,EACAH,mBAAmB,CAAC1F,OAAO,CAAC6F,YAAD,CAAR,CAAnB,CACH,CAHD,CAKA,mBACI,kCAAK,SAAS,kBAAd,uBACI,2BAAC,yBAAD,EAAgB,YAAY,CAAED,WAA9B,CAA2C,KAAK,CAAE7F,aAAlD,CAAiE,QAAQ,CAAE4F,mBAA3E,CAAgG,aAAa,CAAE/B,aAA/G,CAA8H,cAAc,CAAE,KAA9I,CAAqJ,kBAAkB,CAAE,IAAzK,EADJ,EADJ,CAKH,CAXD,CAae6B,2FAAf,E;;ACVA,GAAMK,cAAM,CAAG,QAATA,OAAS,MAAgP,IAA7OhR,KAA6O,MAA7OA,IAA6O,CAAvOC,IAAuO,MAAvOA,IAAuO,CAAjOwM,WAAiO,MAAjOA,WAAiO,CAApN+B,cAAoN,MAApNA,cAAoN,CAApMjD,OAAoM,MAApMA,OAAoM,CAA3LxF,MAA2L,MAA3LA,MAA2L,CAAnL7F,SAAmL,MAAnLA,SAAmL,CAAxKqF,YAAwK,MAAxKA,YAAwK,CAA1J9E,SAA0J,MAA1JA,SAA0J,CAA/IC,UAA+I,MAA/IA,UAA+I,CAAnIwN,cAAmI,MAAnIA,cAAmI,CAAnHE,SAAmH,MAAnHA,SAAmH,CAAxGwC,mBAAwG,MAAxGA,mBAAwG,CAAnFC,mBAAmF,MAAnFA,mBAAmF,CAA9DV,aAA8D,MAA9DA,aAA8D,CAA/C7B,YAA+C,MAA/CA,YAA+C,CAAjC+B,eAAiC,MAAjCA,eAAiC,CAAhBG,SAAgB,MAAhBA,SAAgB,CAC3P,GAAMb,MAAK,CAAG,CACVpE,OAAO,CAAEA,OADC,CAEV0F,aAAa,CAAE1F,OAAO,CAAG,CAFf,CAGVxF,MAAM,CAAEA,MAHE,CAAd,CAMA,mBACI,mCAAK,KAAK,CAAE4J,KAAZ,CAAmB,SAAS,CAAC,QAA7B,wBACI,2BAAC,gBAAD,EAAO,cAAc,CAAEzB,cAAvB,CAAuC,WAAW,CAAEzB,WAApD,EADJ,cAEI,2BAAC,gBAAD,EAAO,SAAS,CAAE2B,SAAlB,CAA6B,WAAW,CAAE3B,WAA1C,EAFJ,cAGI,2BAAC,0BAAD,EAAiB,IAAI,CAAEzM,IAAvB,CAA6B,IAAI,CAAEC,IAAnC,CAAyC,SAAS,CAAEC,SAApD,CAA+D,YAAY,CAAEqF,YAA7E,CAA2F,SAAS,CAAE9E,SAAtG,CAAiH,UAAU,CAAEC,UAA7H,CAAyI,aAAa,CAAE0N,SAAxJ,CAAmK,WAAW,CAAE3B,WAAhL,CAA6L,cAAc,CAAE+B,cAA7M,CAA6N,aAAa,CAAE,GAA5O,CAAiP,aAAa,CAAE2B,aAAhQ,CAA+Q,YAAY,CAAE7B,YAA7R,CAA2S,eAAe,CAAE+B,eAA5T,EAHJ,cAII,2BAAC,yBAAD,EAAgB,mBAAmB,CAAEO,mBAArC,CAA0D,mBAAmB,CAAEC,mBAA/E,CAAoG,aAAa,CAAE,GAAnH,EAJJ,cAKI,2BAAC,wBAAD,EAAe,IAAI,CAAE7Q,IAArB,CAA2B,IAAI,CAAEC,IAAjC,CAAuC,SAAS,CAAEC,SAAlD,CAA6D,YAAY,CAAEqF,YAA3E,CAAyF,SAAS,CAAE9E,SAApG,CAA+G,UAAU,CAAEC,UAA3H,CAAuI,WAAW,CAAE+L,WAApJ,CAAiK,cAAc,CAAE+B,cAAjL,CAAiM,SAAS,CAAEgC,SAA5M,CAAuN,YAAY,CAAElC,YAArO,CAAmP,aAAa,CAAE,GAAlQ,EALJ,GADJ,CASH,CAhBD,CAkBe0C,mEAAf,E;;ACxBe,sEAAuB,oCAAoC,E;;ACI1E,GAAME,gBAAO,CAAG,QAAVA,QAAU,MAA+D,IAA5DC,YAA4D,MAA5DA,WAA4D,CAA/ChB,aAA+C,MAA/CA,aAA+C,CAAhC7B,YAAgC,MAAhCA,YAAgC,CAAlB8C,WAAkB,MAAlBA,WAAkB,eAC3CxE,yBAAQ,CAAC,KAAD,CADmC,kEACpEyE,QADoE,eAC1DC,WAD0D,8BAE7C1E,yBAAQ,CAACwE,WAAD,CAFqC,mEAEpEG,OAFoE,eAE3DC,UAF2D,eAI3E,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,CAAD,CAAO,CAC1BJ,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,GAAMK,aAAY,CAAG,QAAfA,aAAe,CAACD,CAAD,CAAO,CACxB,GAAIL,QAAJ,CAAc,CACVG,UAAU,CAAC,SAAA/N,SAAS,QAAI,CAACA,SAAS,CAAC,CAAD,CAAT,CAAeiO,CAAC,CAACE,SAAlB,CAA6BnO,SAAS,CAAC,CAAD,CAAT,CAAeiO,CAAC,CAACG,SAA9C,CAAJ,EAAV,CAAV,CACH,CACJ,CAJD,CAMA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,CAACJ,CAAD,CAAO,CAC3BJ,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,CAIA,mBACI,mCAAK,KAAK,CAAE,CAAES,IAAI,WAAKR,OAAO,CAAC,CAAD,CAAZ,MAAN,CAA2BS,GAAG,WAAKT,OAAO,CAAC,CAAD,CAAZ,MAA9B,CAAZ,CAAiE,SAAS,oBAAcJ,WAAW,CAAG,SAAH,CAAe,QAAxC,CAA1E,CAA8H,WAAW,CAAEQ,YAA3I,CAAyJ,SAAS,CAAEG,eAApK,CAAqL,YAAY,CAAEA,eAAnM,wBACI,kCAAK,SAAS,CAAC,iBAAf,CAAiC,GAAG,CAAEG,YAAtC,CAAiD,OAAO,CAAE9B,aAA1D,CAAyE,GAAG,CAAC,gBAA7E,EADJ,cAEI,iCAAI,WAAW,CAAEsB,cAAjB,UAAmCnD,YAAnC,EAFJ,CAGMtC,mBAAmB,CAACsC,YAAD,CAAnB,EAAqCtC,mBAAmB,CAACsC,YAAD,CAAnB,CAAkC4D,OAAxE,eAAoF,4DAHzF,CAIKlG,mBAAmB,CAACsC,YAAD,CAAnB,EAAqCtC,mBAAmB,CAACsC,YAAD,CAAnB,CAAkC6D,WAJ5E,CAKKnG,mBAAmB,CAACsC,YAAD,CAAnB,EAAqCtC,mBAAmB,CAACsC,YAAD,CAAnB,CAAkC8D,UAAvE,eAAqF,gCAAG,SAAS,CAAC,YAAb,yBAL1F,CAMKpG,mBAAmB,CAACsC,YAAD,CAAnB,EAAqCtC,mBAAmB,CAACsC,YAAD,CAAnB,CAAkC8D,UAN5E,GADJ,CAUH,CA5BD,CA8BelB,sEAAf,E;;AC1BA,QAASmB,IAAT,EAAe,eACqBzF,yBAAQ,CAAC,EAAD,CAD7B,kEACN1M,SADM,eACKqF,YADL,8BAEmCqH,yBAAQ,CAAC,MAAD,CAF3C,mEAENF,gBAFM,eAEYkE,mBAFZ,8BAGyBhE,yBAAQ,CAAC,KAAD,CAHjC,mEAGNuE,WAHM,eAGOmB,cAHP,8BAI2B1F,yBAAQ,CAACtC,YAAY,CAAC,CAAD,CAAb,CAJnC,mEAINgE,YAJM,eAIQ+B,eAJR,8BAKWzD,yBAAQ,CAAC,CAAD,CALnB,oEAKN5M,IALM,gBAKAuS,OALA,gCAMW3F,yBAAQ,CAAC,CAAD,CANnB,qEAMN3M,IANM,gBAMAuS,OANA,gCAOqB5F,yBAAQ,CAAC,KAAD,CAP7B,qEAONnM,SAPM,gBAOK8L,YAPL,gCAQuBK,yBAAQ,CAAC,KAAD,CAR/B,qEAQNlM,UARM,gBAQM8L,aARN,gCASyBI,yBAAQ,CAAC,KAAD,CATjC,qEASNH,WATM,gBASO+B,cATP,gCAUyC5B,yBAAQ,CAAC,KAAD,CAVjD,qEAUNiE,mBAVM,gBAUe4B,sBAVf,gBAWb,GAAMC,OAAM,CAAG,EAAf,CACA,GAAM/E,SAAQ,CAAG,EAAjB,CACA,GAAMgF,aAAY,CAAG,EAArB,CAEA7F,0BAAS,CAAC,UAAM,CACd5H,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACAyN,cAAc,GACf,CAHQ,CAGN,EAHM,CAAT,CAKA;AACA;AACA;AACA;AAEA,GAAMA,eAAc,CAAG,QAAjBA,eAAiB,EAAM,CAC3B,GAAMC,kBAAiB,CAAGC,MAAM,CAACC,WAAP,EAAsBJ,YAAY,CAAID,MAAM,CAAG,CAA/C,CAA1B,CACA,GAAMM,iBAAgB,CAAGF,MAAM,CAACG,UAAP,CAAqB,EAAIP,MAAlD,CAEA,GAAMQ,SAAQ,CAAGlU,QAAQ,CAAC6T,iBAAiB,EAAIlF,QAAQ,CAAG,CAAf,CAAlB,CAAzB,CACA,GAAMwF,SAAQ,CAAGnU,QAAQ,CAACgU,gBAAgB,EAAIrF,QAAQ,CAAG,CAAf,CAAjB,CAAzB,CAEAa,cAAc,CAAC,KAAD,CAAd,CACA+D,OAAO,CAACW,QAAD,CAAP,CACAV,OAAO,CAACW,QAAD,CAAP,CACA5G,YAAY,CAAC,KAAD,CAAZ,CACAC,aAAa,WAAI0G,QAAQ,CAAG,CAAf,aAAoBC,QAAQ,CAAG,CAA/B,EAAb,CACD,CAZD,CAcA,GAAM/E,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtBlJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,IAAK,GAAIjC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,0BACpBC,CADoB,EAE3B,GAAIuM,GAAE,WAAMxM,CAAN,aAAWC,CAAX,CAAN,CACA,GAAI/E,UAAS,CAAG8B,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAAhB,CACA,GAAIlM,cAAa,CAAGtD,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAApB,CACA,GAAI0D,UAAS,CAAGhV,SAAS,CAAC,CAAD,CAAzB,CAEA,GAAI,CAACgV,SAAS,GAAK/U,YAAY,CAACmI,KAA3B,EAAoC4M,SAAS,GAAK/U,YAAY,CAACoI,MAAhE,GAA4ErI,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAACE,QAA7G,CAAwH,CACtHH,SAAS,CAACmG,MAAV,CAAiB,CAAjB,CAAoB,CAApB,EACD,CAFD,IAGK,IAAI6O,SAAS,EAAI/U,YAAY,CAACE,QAA9B,CAAwC,CAC3CH,SAAS,CAACmG,MAAV,CAAiB,CAAjB,CAAoB,CAApB,EACD,CAEDf,aAAa,CAAC,SAAAC,SAAS,QAAIrF,UAAJ,EAAV,CAAb,CAd2B,EAC7B,IAAK,GAAI+E,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,OAAtBA,CAAsB,EAc9B,CACF,CACF,CAnBD,CAqBA,GAAM+K,eAAc,CAAG,QAAjBA,eAAiB,EAAM,CAC3B,GAAIhF,QAAO,CAAG,EAAd,CACA,GAAImK,WAAU,CAAG,KAAjB,CACA,IAAK,GAAInQ,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,4BACpBC,CADoB,EAE3B,GAAIuM,GAAE,WAAMxM,CAAN,aAAWC,CAAX,CAAN,CACA,GAAI/E,UAAS,CAAG8B,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAAhB,CACA,GAAIlM,cAAa,CAAGtD,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAApB,CACA,GAAI0D,UAAS,CAAGhV,SAAS,CAAC,CAAD,CAAzB,CAEA8K,OAAO,CAACwG,EAAD,CAAP,CAAc,CAACtR,SAAD,CAAYoF,aAAZ,CAAd,CAEA;AACA,GAAI,CAAC4P,SAAS,GAAK/U,YAAY,CAACmI,KAA3B,EAAoC4M,SAAS,GAAK/U,YAAY,CAACoI,MAAhE,GAA4ErI,SAAS,CAAC,CAAD,CAAT,EAAgBC,YAAY,CAACG,IAA7G,CAAoH,CAClH6U,UAAU,CAAG,IAAb,CACAjV,SAAS,CAACmG,MAAV,CAAiB,CAAjB,CAAoB,CAApB,EACAf,aAAa,CAAC,SAAA8P,IAAI,QAAIlV,UAAJ,EAAL,CAAb,CACA8K,OAAO,CAACwG,EAAD,CAAP,CAAc,CAACtR,SAAD,CAAYoF,aAAZ,CAAd,CACA,iBACD,CAED,GAAI4P,SAAS,EAAI/U,YAAY,CAACE,QAA9B,CAAwC,CACtC6U,SAAS,CAAGhV,SAAS,CAAC,CAAD,CAArB,CACD,CAED,GAAIgV,SAAS,EAAI/U,YAAY,CAACG,IAA9B,CAAoC,CAClC6U,UAAU,CAAG,IAAb,CACA7P,aAAa,CAAC,SAAA8P,IAAI,QAAI,CAACjV,YAAY,CAAC6F,IAAd,CAAJ,EAAL,CAAb,CACAgF,OAAO,CAACwG,EAAD,CAAP,CAAc,CAAC,CAACrR,YAAY,CAAC6F,IAAd,CAAD,CAAsBV,aAAtB,CAAd,CACD,CA1B0B,EAC7B,IAAK,GAAIL,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,iBAAtBA,CAAsB,uBAc3B,SAYH,CACF,CAED,GAAIkQ,UAAJ,CAAgB,CACd9N,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CACD,CACF,CApCD,CAsCA,GAAMqK,uBAAsB,CAAG,QAAzBA,uBAAyB,EAAM,CACnC,GAAIrK,QAAO,CAAG,EAAd,CACA,GAAImK,WAAU,CAAG,KAAjB,CACA,IAAK,GAAInQ,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,4BACpBC,CADoB,EAE3B,GAAIuM,GAAE,WAAMxM,CAAN,aAAWC,CAAX,CAAN,CACA,GAAI/E,UAAS,CAAG8B,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAAhB,CACA,GAAIlM,cAAa,CAAGtD,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAApB,CACA,GAAI0D,UAAS,CAAGhV,SAAS,CAAC,CAAD,CAAzB,CAEA8K,OAAO,CAACwG,EAAD,CAAP,CAAc,CAACtR,SAAD,CAAYoF,aAAZ,CAAd,CAEA;AACA,GAAI,CAAC4P,SAAS,GAAK/U,YAAY,CAACmI,KAA3B,EAAoC4M,SAAS,GAAK/U,YAAY,CAACoI,MAAhE,GAA4ErI,SAAS,CAAC,CAAD,CAAT,CAAeC,YAAY,CAACG,IAA5G,CAAmH,CACjH6U,UAAU,CAAG,IAAb,CACAjV,SAAS,CAACmG,MAAV,CAAiB,CAAjB,CAAoB,CAApB,EACAf,aAAa,CAAC,SAAA8P,IAAI,QAAIlV,UAAJ,EAAL,CAAb,CACA8K,OAAO,CAACwG,EAAD,CAAP,CAAc,CAACtR,SAAD,CAAYoF,aAAZ,CAAd,CACA,iBACD,CAED,GAAI4P,SAAS,EAAI/U,YAAY,CAACE,QAA9B,CAAwC,CACtC6U,SAAS,CAAGhV,SAAS,CAAC,CAAD,CAArB,CACD,CAED,GAAIgV,SAAS,CAAG/U,YAAY,CAACG,IAA7B,CAAmC,CACjC6U,UAAU,CAAG,IAAb,CACA7P,aAAa,CAAC,SAAA8P,IAAI,QAAI,CAACjV,YAAY,CAAC6F,IAAd,CAAJ,EAAL,CAAb,CACAgF,OAAO,CAACwG,EAAD,CAAP,CAAc,CAAC,CAACrR,YAAY,CAAC6F,IAAd,CAAD,CAAsBV,aAAtB,CAAd,CACD,CA1B0B,EAC7B,IAAK,GAAIL,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,kBAAtBA,CAAsB,wBAc3B,SAYH,CACF,CAED,GAAIkQ,UAAJ,CAAgB,CACd9N,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CACD,CACF,CApCD,CAsCA,GAAMsH,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,GAAItH,QAAO,CAAG,EAAd,CACA,IAAK,GAAIhG,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,4BACpBC,CADoB,EAE3B,GAAIuM,GAAE,WAAMxM,CAAN,aAAWC,CAAX,CAAN,CACA,GAAI/E,UAAS,CAAG8B,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAAhB,CACA,GAAIlM,cAAa,CAAGtD,SAAS,CAACwP,EAAD,CAAT,CAAc,CAAd,CAApB,CACA,GAAI0D,UAAS,CAAGhV,SAAS,CAAC,CAAD,CAAzB,CACA,GAAIsL,SAAQ,CAAG,CAACrL,YAAY,CAAC6F,IAAd,CAAf,CAEA,GAAIkP,SAAS,GAAK/U,YAAY,CAACmI,KAA3B,EAAoC4M,SAAS,GAAK/U,YAAY,CAACoI,MAAnE,CAA2E,CACzEiD,QAAQ,CAACpF,OAAT,CAAiB8O,SAAjB,EACD,CAED5P,aAAa,CAAC,SAAA8P,IAAI,QAAI5J,SAAJ,EAAL,CAAb,CACAR,OAAO,CAACwG,EAAD,CAAP,CAAc,CAAChG,QAAD,CAAWlG,aAAX,CAAd,CAb2B,EAC7B,IAAK,GAAIL,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlD,IAApB,CAA0BkD,CAAC,EAA3B,CAA+B,QAAtBA,CAAsB,EAa9B,CACF,CAEDoC,YAAY,CAAC,SAAA9B,SAAS,QAAIyF,QAAJ,EAAV,CAAZ,CACD,CApBD,CAsBA,GAAMiH,cAAa,CAAG,QAAhBA,cAAgB,EAAM,CAC1BmC,cAAc,CAAC,SAAA7O,SAAS,QAAI,CAACA,SAAL,EAAV,CAAd,CACD,CAFD,CAIA,GAAM+P,uBAAsB,CAAG,QAAzBA,uBAAyB,CAACC,QAAD,CAAc,CAC3C,GAAMC,eAAc,CAAGrS,uBAAgB,CAACoS,QAAD,CAAvC,CACAhB,sBAAsB,CAACiB,cAAD,CAAtB,CACArD,eAAe,CAACoD,QAAD,CAAf,CACA,GAAIC,cAAJ,CAAoB,CAClBtF,SAAS,GACTmF,sBAAsB,GACvB,CACF,CARD,CAUA,mBACE,4EACE,2BAAC,iBAAD,EAAQ,IAAI,CAAEvT,IAAd,CAAoB,IAAI,CAAEC,IAA1B,CAAgC,WAAW,CAAEwM,WAA7C,CAA0D,cAAc,CAAE+B,cAA1E,CAA0F,OAAO,CAAEkE,MAAnG,CAA2G,MAAM,CAAEC,YAAnH,CAAiI,SAAS,CAAEzS,SAA5I,CAAuJ,YAAY,CAAEqF,YAArK,CAAmL,SAAS,CAAE9E,SAA9L,CAAyM,UAAU,CAAEC,UAArN,CAAiO,cAAc,CAAEwN,cAAjP,CAAiQ,SAAS,CAAEE,SAA5Q,CAAuR,mBAAmB,CAAEwC,mBAA5S,CAAiU,mBAAmB,CAAEC,mBAAtV,CAA2W,aAAa,CAAEV,aAA1X,CAAyY,YAAY,CAAE7B,YAAvZ,CAAqa,eAAe,CAAEkF,sBAAtb,CAA8c,SAAS,CAAEhD,SAAzd,EADF,cAEE,2BAAC,eAAD,EAAM,IAAI,CAAExQ,IAAZ,CAAkB,IAAI,CAAEC,IAAxB,CAA8B,OAAO,CAAEyS,MAAvC,CAA+C,QAAQ,CAAE/E,QAAzD,CAAmE,YAAY,CAAEpI,YAAjF,CAA+F,gBAAgB,CAAEmH,gBAAjH,CAAmI,YAAY,CAAEH,YAAjJ,CAA+J,aAAa,CAAEC,aAA9K,CAA6L,WAAW,CAAEC,WAA1M,EAFF,cAGE,2BAAC,kBAAD,EAAS,WAAW,CAAE0E,WAAtB,CAAmC,aAAa,CAAEhB,aAAlD,CAAiE,YAAY,CAAE7B,YAA/E,CAA6F,WAAW,CAAE,CAAEwE,MAAM,CAACG,UAAP,CAAoB,CAArB,CAA0B,GAA3B,CAAiCN,YAAY,CAAID,MAAM,CAAG,CAA1D,CAA1G,EAHF,GADF,CAOD,CAEcL,+CAAf,E;;AC7LA,GAAMsB,gBAAe,CAAG,QAAlBA,gBAAkB,CAAAC,WAAW,CAAI,CACrC,GAAIA,WAAW,EAAIA,WAAW,WAAYC,SAA1C,CAAoD,CAClD,kFAAqBC,IAArB,CAA0B,cAAiD,IAA9CC,OAA8C,MAA9CA,MAA8C,CAAtCC,MAAsC,MAAtCA,MAAsC,CAA9BC,MAA8B,MAA9BA,MAA8B,CAAtBC,MAAsB,MAAtBA,MAAsB,CAAdC,OAAc,MAAdA,OAAc,CACzEJ,MAAM,CAACH,WAAD,CAAN,CACAI,MAAM,CAACJ,WAAD,CAAN,CACAK,MAAM,CAACL,WAAD,CAAN,CACAM,MAAM,CAACN,WAAD,CAAN,CACAO,OAAO,CAACP,WAAD,CAAP,CACD,CAND,EAOD,CACF,CAVD,CAYeD,uEAAf,E;;ACNAS,mBAAQ,CAACC,MAAT,cACE,2BAAC,eAAD,CAAO,UAAP,wBACE,2BAAC,OAAD,IADF,EADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,EAOA;AACA;AACA;AACAZ,mBAAe,G","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","import { nodeTypeEnum, unweightedPathAlgos, optimalPathAlgos, nodeColors, unweightedTerrainAlgos } from './constants.js'\n\nexport const getNodeColor = (nodeState) => {\n    if ((nodeState[0] === nodeTypeEnum.visited || nodeState[0] === nodeTypeEnum.visiting) && nodeState[1] > nodeTypeEnum.wall) {\n        let colorA = nodeColors[nodeState[0]];\n        const colorB = nodeColors[nodeState[1]];\n        let amount = 0.78;\n\n        if (nodeState[0] === nodeTypeEnum.visiting) {\n            colorA = nodeColors[nodeTypeEnum.visited];\n        }\n        // we need to mix colors\n        const [rA, gA, bA] = colorA.match(/\\w\\w/g).map((c) => parseInt(c, 16));\n        const [rB, gB, bB] = colorB.match(/\\w\\w/g).map((c) => parseInt(c, 16));\n        const r = Math.round(rA + (rB - rA) * amount).toString(16).padStart(2, '0');\n        const g = Math.round(gA + (gB - gA) * amount).toString(16).padStart(2, '0');\n        const b = Math.round(bA + (bB - bA) * amount).toString(16).padStart(2, '0');\n        return '#' + r + g + b;\n    }\n\n    return nodeColors[nodeState[0]];\n};\n\nexport const getNeighbourNodes = (node, rows, cols, gridState) => {\n    const row = parseInt(node.split(':')[0]);\n    const col = parseInt(node.split(':')[1]);\n\n    let res = [];\n    if ((row - 1 >= 0) && (gridState[`${row - 1}:${col}`][0][0] !== nodeTypeEnum.wall)) {\n        res.push(`${row - 1}:${col}`)\n    }\n    if ((col + 1 < cols) && (gridState[`${row}:${col + 1}`][0][0] !== nodeTypeEnum.wall)) {\n        res.push(`${row}:${col + 1}`)\n    }\n    if ((row + 1) < rows && (gridState[`${row + 1}:${col}`][0][0] !== nodeTypeEnum.wall)) {\n        res.push(`${row + 1}:${col}`)\n    }\n    if ((col - 1 >= 0) && (gridState[`${row}:${col - 1}`][0][0] !== nodeTypeEnum.wall)) {\n        res.push(`${row}:${col - 1}`)\n    }\n\n    return res;\n};\n\nexport const createPath = (startCord, targetCord, prevNodes) => {\n    let cord = targetCord;\n    let path = [];\n\n    while (true) {\n        cord = prevNodes[cord];\n\n        if (cord === startCord) {\n            break;\n        }\n\n        path.push(cord);\n    }\n\n    return path;\n};\n\nexport const findMinPriorityNode = (minPQ) => {\n    let minPriority = Math.min(...Object.values(minPQ));\n\n    for (const key in minPQ) {\n        if (minPQ[key] === minPriority) {\n            return key;\n        }\n    }\n};\n\nexport const isAlgoUnweighted = (algo) => {\n    return unweightedPathAlgos.includes(algo);\n};\n\nexport const isTerrainAlgoUnweighted = (algo) => {\n    return unweightedTerrainAlgos.includes(algo);\n};\n\nexport const isAlgoOptimal = (algo) => {\n    return optimalPathAlgos.includes(algo);\n};\n\nexport const sleep = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nexport const getRandomNum = (num1, num2) => {\n    if (num1 === num2) {\n        return num1;\n    }\n    const min = Math.min(num1, num2);\n    const max = Math.max(num1, num2);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n// this implements our H score heuristic\n// current heuristic: take the absolute sum of the difference in node N's co-ordinates and target's co-ordinates. Hence, the greater the distance between N and target, the greater the H score for node N. This is known as the \"Manhattan Distance\"\nexport const manhattanDistanceHeuristic = (currNodeCord, targetCord) => {\n    if (currNodeCord === targetCord) {\n        return 0;\n    }\n\n    const currRow = parseInt(currNodeCord.split(':')[0]);\n    const currCol = parseInt(currNodeCord.split(':')[1]);\n    const targetRow = parseInt(targetCord.split(':')[0]);\n    const targetCol = parseInt(targetCord.split(':')[1]);\n\n    return Math.abs(currRow - targetRow) + Math.abs(currCol - targetCol);\n};","import { getNeighbourNodes, createPath, findMinPriorityNode, sleep } from '../../utils/helper.js'\nimport { nodeWeight, nodeTypeEnum } from '../../utils/constants.js'\n\nexport const dijkstras = async (startCord, targetCord, gridState, rows, cols, timeout) => {\n    let distance = {};\n    let prevNodes = {};\n    let minPQ = {};\n    let visited = {};\n\n    distance[startCord] = 0;\n    minPQ[startCord] = 0;\n\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            let cord = `${x}:${y}`\n\n            if (cord !== startCord) {\n                distance[cord] = Infinity;\n            }\n        }\n    }\n\n    while (Object.keys(minPQ).length > 0) {\n        const minKey = findMinPriorityNode(minPQ);\n        delete minPQ[minKey];\n        visited[minKey] = 1;\n\n        if (minKey !== startCord && minKey !== targetCord) {\n            const nodeStateFunc = gridState[minKey][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visited, ...prevState.slice(1)]));\n        }\n        else if (minKey === targetCord) {\n            return createPath(startCord, targetCord, prevNodes);\n        }\n\n        const neighbours = getNeighbourNodes(minKey, rows, cols, gridState);\n        for (const neighbour of neighbours) {\n            const currPath = distance[minKey] + nodeWeight[gridState[neighbour][0][0]];\n\n            if (neighbour in visited) {\n                continue;\n            }\n\n            if (((neighbour in minPQ) && currPath < distance[neighbour]) || !(neighbour in minPQ)) {\n                distance[neighbour] = currPath;\n                prevNodes[neighbour] = minKey;\n                minPQ[neighbour] = currPath;\n                if (neighbour !== targetCord) {\n                    const nodeStateFunc = gridState[neighbour][1];\n                    nodeStateFunc(prevState => ([nodeTypeEnum.visiting, ...prevState]));\n                }\n            }\n        }\n\n        await sleep(timeout);\n    }\n\n    return [];\n};","import { getNeighbourNodes, sleep } from '../../utils/helper.js'\nimport { nodeTypeEnum } from '../../utils/constants.js'\n\nexport const dfs = async (startCord, targetCord, gridState, rows, cols, timeout) => {\n    const stack = [startCord];\n    const visited = { [startCord]: 1 };\n\n    while (stack.length > 0) {\n        const currCord = stack[0];\n        if (currCord !== targetCord && currCord !== startCord) {\n            const nodeStateFunc = gridState[currCord][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visiting, nodeTypeEnum.none]));\n        }\n\n        if (currCord === targetCord) {\n            stack.pop();\n            stack.shift();\n            return stack;\n        }\n\n        if (currCord !== startCord) {\n            visited[currCord] = 1;\n            const nodeStateFunc = gridState[currCord][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visited, nodeTypeEnum.none]));\n        }\n\n        const neighbours = getNeighbourNodes(currCord, rows, cols, gridState);\n        let unvisitedNeighbourFound = false;\n        for (const neighbour of neighbours) {\n            if (neighbour in visited) {\n                continue;\n            }\n\n            stack.unshift(neighbour);\n            unvisitedNeighbourFound = true;\n            break;\n        }\n\n        if (!unvisitedNeighbourFound) {\n            stack.splice(0, 1);\n        }\n\n        await sleep(timeout);\n    }\n\n    return [];\n};","import { getNeighbourNodes, createPath, sleep } from '../../utils/helper.js'\nimport { nodeTypeEnum } from '../../utils/constants.js'\n\nexport const bfs = async (startCord, targetCord, gridState, rows, cols, timeout) => {\n    let queue = [startCord];\n    let visited = { [startCord]: 1 };\n    let prevNodes = {};\n\n    while (queue.length > 0) {\n        const currCord = queue.pop();\n        if (currCord !== startCord && currCord !== targetCord) {\n            const nodeStateFunc = gridState[currCord][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visited, nodeTypeEnum.none]));\n        }\n        const neighbours = getNeighbourNodes(currCord, rows, cols, gridState);\n\n        for (const neighbour of neighbours) {\n            if (neighbour in visited) {\n                continue;\n            }\n\n            prevNodes[neighbour] = currCord;\n            queue.unshift(neighbour);\n            visited[neighbour] = 1;\n\n            if (neighbour === targetCord) {\n                return createPath(startCord, targetCord, prevNodes);\n            }\n\n            const nodeStateFunc = gridState[neighbour][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visiting, nodeTypeEnum.none]));\n        }\n\n        await sleep(timeout);\n    }\n\n    return [];\n};\n","import { getNeighbourNodes, createPath, findMinPriorityNode, sleep, manhattanDistanceHeuristic } from '../../utils/helper.js'\nimport { nodeWeight, nodeTypeEnum } from '../../utils/constants.js'\n\nexport const aStar = async (startCord, targetCord, gridState, rows, cols, timeout) => {\n    let openSet = { [startCord]: 0 };\n    let G = { [startCord]: 0 }; // G(n) => tell us the current shortest distance from start node to node n\n    let H = { [startCord]: 0 }; // H(n) => tells us the estimated distance from node n to target node\n    let F = { [startCord]: 0 }; // F(n) = G(n) + H(n)\n    let visited = {};\n    let prevNodes = {};\n\n    // intialize all the scores to infinity for all nodes !== start_node\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            let cord = `${x}:${y}`\n\n            if (cord !== startCord) {\n                F[cord] = G[cord] = H[cord] = Infinity;\n            }\n        }\n    }\n\n    while (Object.keys(openSet).length > 0) {\n        const currNode = findMinPriorityNode(openSet);\n        delete openSet[currNode];\n\n        if (currNode !== startCord && currNode !== targetCord) {\n            const nodeStateFunc = gridState[currNode][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visited, ...prevState.slice(1)]));\n        }\n        else if (currNode === targetCord) {\n            // we have reached target, return path\n            return createPath(startCord, targetCord, prevNodes);\n        }\n\n        const neighbours = getNeighbourNodes(currNode, rows, cols, gridState);\n        for (const neighbour of neighbours) {\n            const currGScore = G[currNode] + nodeWeight[gridState[neighbour][0][0]];\n\n            if (currGScore < G[neighbour]) {\n                if (neighbour !== startCord && neighbour !== targetCord && !(neighbour in visited)) {\n                    const nodeStateFunc = gridState[neighbour][1];\n                    nodeStateFunc(prevState => ([nodeTypeEnum.visiting, ...prevState]));\n                }\n                visited[neighbour] = 1;\n                // newly calculated G score of neighbour is lower than the one in the table\n                // update all the scores\n                G[neighbour] = currGScore;\n                H[neighbour] = manhattanDistanceHeuristic(neighbour, targetCord);\n                F[neighbour] = G[neighbour] + H[neighbour];\n                prevNodes[neighbour] = currNode;\n                openSet[neighbour] = F[neighbour];\n            }\n        }\n\n        await sleep(timeout);\n    }\n\n    return [];\n};","import { getNeighbourNodes, createPath, findMinPriorityNode, sleep, manhattanDistanceHeuristic } from '../../utils/helper.js'\nimport { nodeTypeEnum } from '../../utils/constants.js'\n\nexport const greedyBestFirstSearch = async (startCord, targetCord, gridState, rows, cols, timeout) => {\n    let openSet = { [startCord]: 0 };\n    let H = { [startCord]: 0 }; // H(n) => tells us the estimated distance from node n to target node\n    let F = { [startCord]: 0 }; // F(n) = H(n)\n    let prevNodes = {};\n    let visited = {};\n\n    // intialize all the scores to infinity for all node !== start node\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            let cord = `${x}:${y}`\n\n            if (cord !== startCord) {\n                F[cord] = H[cord] = Infinity;\n            }\n        }\n    }\n\n    while (Object.keys(openSet).length > 0) {\n        const currNode = findMinPriorityNode(openSet);\n        delete openSet[currNode];\n\n        if (currNode !== startCord && currNode !== targetCord) {\n            const nodeStateFunc = gridState[currNode][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.visited, ...prevState.slice(1)]));\n        }\n        else if (currNode === targetCord) {\n            console.log(\"DONNEE\");\n            // we have reached target, return path\n            return createPath(startCord, targetCord, prevNodes);\n        }\n\n        const neighbours = getNeighbourNodes(currNode, rows, cols, gridState);\n        for (const neighbour of neighbours) {\n            if (!(neighbour in visited)) {\n                visited[neighbour] = 1;\n\n                if (neighbour !== startCord && neighbour !== targetCord) {\n                    const nodeStateFunc = gridState[neighbour][1];\n                    nodeStateFunc(prevState => ([nodeTypeEnum.visiting, ...prevState]));\n                }\n\n                H[neighbour] = manhattanDistanceHeuristic(neighbour, targetCord);\n                F[neighbour] = H[neighbour];\n                prevNodes[neighbour] = currNode;\n                openSet[neighbour] = F[neighbour];\n            }\n        }\n\n        await sleep(timeout);\n    }\n\n    return [];\n};\n","import { nodeTypeEnum } from '../../utils/constants.js'\nimport { sleep, getRandomNum } from '../../utils/helper.js'\n\nconst HORIZONTAL = 0;\nconst VERTICAL = 1;\n\nexport const recursiveDivision = async (startCord, targetCord, gridState, setGridState, rows, cols, timeout) => {\n    // make border around the screen\n    for (let y = 0; y < cols; y++) {\n        const currCord = `${0}:${y}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = 1; y < rows; y++) {\n        const currCord = `${y}:${cols - 1}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = cols - 2; y >= 0; y--) {\n        const currCord = `${rows - 1}:${y}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    for (let y = rows - 2; y > 0; y--) {\n        const currCord = `${y}:${0}`;\n        setWall(currCord, startCord, targetCord, gridState, setGridState);\n        await sleep(timeout);\n    }\n\n    // await divide(1, 1, rows - 2, cols - 2, gridState, setGridState, timeout);\n    await divide(startCord, targetCord, gridState, setGridState, 1, rows - 2, 1, cols - 2, timeout, rows, cols);\n};\n\nconst divide = async (startCord, targetCord, gridState, setGridState, startRow, endRow, startCol, endCol, timeout, rows, cols) => {\n    const width = endCol - startCol + 1;\n    const height = endRow - startRow + 1;\n\n    let orientation = HORIZONTAL;\n    if (width < height) {\n        orientation = HORIZONTAL;\n    }\n    else if (height < width) {\n        orientation = VERTICAL;\n    }\n    else {\n        orientation = getRandomNum(HORIZONTAL, VERTICAL);\n    }\n\n    if (orientation === HORIZONTAL) {\n        // cutting horizontally\n        if (height < 3 || (startRow % 2 === 1 && height === 3)) {\n            return;\n        }\n        let sCol = startCol;\n        if (startCol % 2 === 1) {\n            sCol += 1;\n        }\n\n        let sRow = startRow + 2;\n        if (startRow % 2 === 0) {\n            sRow = startRow + 1;\n        }\n\n        const skip = Math.floor(getRandomNum(sCol, endCol) / 2) * 2;\n        let randRow = getRandomNum(sRow, endRow - 2);\n        randRow = (Math.floor(randRow / 2) * 2) + 1;\n\n        for (let i = startCol; i <= endCol; i++) {\n            if (i === skip) {\n                continue;\n            }\n            const currCord = `${randRow}:${i}`;\n            setWall(currCord, startCord, targetCord, gridState, setGridState);\n            await sleep(timeout);\n        }\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, randRow - 1, startCol, endCol, timeout, rows, cols);\n        await divide(startCord, targetCord, gridState, setGridState, randRow + 1, endRow, startCol, endCol, timeout, rows, cols);\n    }\n    else if (orientation === VERTICAL) {\n        // divide vertically \n        if (width < 3 || (startCol % 2 === 1 && width === 3)) {\n            return;\n        }\n        let sRow = startRow;\n        if (startRow % 2 === 1) {\n            sRow += 1;\n        }\n\n        let sCol = startCol + 2;\n        if (startCol % 2 === 0) {\n            sCol = startCol + 1;\n        }\n        const skip = Math.floor(getRandomNum(sRow, endRow) / 2) * 2;\n        let randCol = getRandomNum(sCol, endCol - 2);\n        randCol = (Math.floor(randCol / 2) * 2) + 1;\n\n        for (let i = startRow; i <= endRow; i++) {\n            if (i === skip) {\n                continue;\n            }\n            const currCord = `${i}:${randCol}`;\n            setWall(currCord, startCord, targetCord, gridState, setGridState);\n            await sleep(timeout);\n        }\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, endRow, startCol, randCol - 1, timeout, rows, cols);\n\n        await divide(startCord, targetCord, gridState, setGridState, startRow, endRow, randCol + 1, endCol, timeout, rows, cols);\n    }\n};\n\nconst setWall = (currCord, startCord, targetCord, gridState, setGridState) => {\n    const nodeStateFunc = gridState[currCord][1];\n\n    let state = [nodeTypeEnum.wall, nodeTypeEnum.none];\n    if (currCord === startCord) {\n        state = [nodeTypeEnum.start, nodeTypeEnum.wall, nodeTypeEnum.none];\n    }\n    else if (currCord === targetCord) {\n        state = [nodeTypeEnum.target, nodeTypeEnum.wall, nodeTypeEnum.none];\n    }\n\n    nodeStateFunc(prevState => state);\n    setGridState(prevState => ({ ...prevState, [currCord]: [state, prevState[currCord][1]] }));\n};","import { nodeTypeEnum } from \"../../utils/constants\";\n\nfunction Grad(x, y, z) {\n    this.x = x; this.y = y; this.z = z;\n}\n\nGrad.prototype.dot2 = function (x, y) {\n    return this.x * x + this.y * y;\n};\n\nGrad.prototype.dot3 = function (x, y, z) {\n    return this.x * x + this.y * y + this.z * z;\n};\n\nconst grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0),\nnew Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1),\nnew Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\n\nconst p = [151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n\n// To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nconst seed = (seed) => {\n    if (seed > 0 && seed < 1) {\n        // Scale the seed out\n        seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if (seed < 256) {\n        seed |= seed << 8;\n    }\n\n    for (var i = 0; i < 256; i++) {\n        var v;\n        if (i & 1) {\n            v = p[i] ^ (seed & 255);\n        } else {\n            v = p[i] ^ ((seed >> 8) & 255);\n        }\n\n        perm[i] = perm[i + 256] = v;\n        gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n};\n\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n\n// 2D simplex noise\nconst simplex2 = (xin, yin) => {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin) * F2; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var t = (i + j) * G2;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        i1 = 1; j1 = 0;\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        i1 = 0; j1 = 1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i + perm[j]];\n    var gi1 = gradP[i + i1 + perm[j + j1]];\n    var gi2 = gradP[i + 1 + perm[j + 1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 < 0) {\n        n0 = 0;\n    } else {\n        t0 *= t0;\n        n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 < 0) {\n        n1 = 0;\n    } else {\n        t1 *= t1;\n        n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 < 0) {\n        n2 = 0;\n    } else {\n        t2 *= t2;\n        n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n};\n\nconst SCALE = 12;\nexport const simplexNoise = async (startCord, targetCord, gridState, setGridState, rows, cols, timeout) => {\n    seed(Math.random());\n    let gridMap = {};\n    for (let x = 0; x < cols; x++) {\n        for (let y = 0; y < rows; y++) {\n            // All noise functions return values in the range of -1 to 1.\n            const currCord = `${y}:${x}`;\n            const nodeStateFunc = gridState[currCord][1];\n\n            // noise.simplex2 and noise.perlin2 for 2d noise\n            let value = simplex2(x / SCALE, y / SCALE);\n            const state = [nodeTypeEnum.none];\n\n            if (value >= -1 && value <= -0.50) {\n                state.unshift(nodeTypeEnum.wall);\n            }\n            else if (value > -0.50 && value <= -0.20) {\n                state.unshift(nodeTypeEnum.weighted100);\n            }\n            else if (value > -0.20 && value <= 0.10) {\n                state.unshift(nodeTypeEnum.weighted80);\n            }\n            else if (value > 0.10 && value <= 0.40) {\n                state.unshift(nodeTypeEnum.weighted60);\n            }\n            else if (value > 0.40 && value <= 0.70) {\n                state.unshift(nodeTypeEnum.weighted40);\n            }\n            else if (value > 0.70 && value <= 1) {\n                state.unshift(nodeTypeEnum.weighted20);\n            }\n\n            if (currCord === startCord) {\n                state.unshift(nodeTypeEnum.start);\n            }\n            else if (currCord === targetCord) {\n                state.unshift(nodeTypeEnum.target);\n            }\n\n            nodeStateFunc(prevState => state);\n            gridMap[currCord] = [state, nodeStateFunc];\n        }\n    }\n\n    setGridState(prevState => gridMap);\n};","import { nodeTypeEnum } from '../../utils/constants.js';\nimport { getRandomNum } from '../../utils/helper.js'\n\nexport const random = async (startCord, targetCord, gridState, setGridState, rows, cols, timeout) => {\n    let gridMap = {};\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            const currCord = `${x}:${y}`;\n            const nodeStateFunc = gridState[currCord][1];\n            const randomNum = getRandomNum(1, 10);\n\n            if (randomNum >= 4) {\n                // don't place wall\n                let newState = [nodeTypeEnum.none];\n\n                if (currCord === startCord) {\n                    newState.unshift(nodeTypeEnum.start);\n                }\n                else if (currCord === targetCord) {\n                    newState.unshift(nodeTypeEnum.target);\n                }\n\n                gridMap[currCord] = [newState, nodeStateFunc];\n                continue;\n            }\n\n            // place wall\n            let newState = [nodeTypeEnum.wall, nodeTypeEnum.none];\n\n            if (currCord === startCord) {\n                newState.unshift(nodeTypeEnum.start);\n            }\n            else if (currCord === targetCord) {\n                newState.unshift(nodeTypeEnum.target);\n            }\n\n            nodeStateFunc(prevState => newState);\n            gridMap[currCord] = [newState, nodeStateFunc];\n        }\n    }\n\n    setGridState(prevState => gridMap);\n};","import { nodeTypeEnum } from '../../utils/constants.js';\nimport { getRandomNum } from '../../utils/helper.js'\n\nexport const randomWeighted = async (startCord, targetCord, gridState, setGridState, rows, cols, timeout) => {\n    let gridMap = {};\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            const currCord = `${x}:${y}`;\n            const nodeStateFunc = gridState[currCord][1];\n            const randomNum = getRandomNum(1, 10);\n\n            if (randomNum >= 5) {\n                // don't place obstacle\n                let newState = [nodeTypeEnum.none];\n\n                if (currCord === startCord) {\n                    newState.unshift(nodeTypeEnum.start);\n                }\n                else if (currCord === targetCord) {\n                    newState.unshift(nodeTypeEnum.target);\n                }\n\n                gridMap[currCord] = [newState, nodeStateFunc];\n                continue;\n            }\n\n            // place a random obstacle\n            const randomObstacle = getRandomNum(nodeTypeEnum.wall, nodeTypeEnum.weighted20);\n            let newState = [randomObstacle, nodeTypeEnum.none];\n\n            if (currCord === startCord) {\n                newState.unshift(nodeTypeEnum.start);\n            }\n            else if (currCord === targetCord) {\n                newState.unshift(nodeTypeEnum.target);\n            }\n\n            nodeStateFunc(prevState => newState);\n            gridMap[currCord] = [newState, nodeStateFunc];\n        }\n    }\n\n    setGridState(prevState => gridMap);\n};","import { dijkstras } from '../algorithms/path_finding/dijkstras.js'\nimport { dfs } from '../algorithms/path_finding/dfs.js'\nimport { bfs } from '../algorithms/path_finding/bfs.js'\nimport { aStar } from '../algorithms/path_finding/aStar.js'\nimport { greedyBestFirstSearch } from '../algorithms/path_finding/greedyBestFirstSearch.js';\nimport { recursiveDivision } from '../algorithms/terrain/recursiveDivision.js'\nimport { simplexNoise } from '../algorithms/terrain/simplexNoise.js'\nimport { random } from '../algorithms/terrain/random.js';\nimport { randomWeighted } from '../algorithms/terrain/randomWeighted.js';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n// PATHFINDING ALGORITHM CONSTANTS -------------------------------------------\nconst DIJKSTRAS = \"Dijkstra's\";\nconst ASTAR = 'A* (A-Star)';\nconst BFS = 'Breadth-first Search';\nconst DFS = 'Depth-first Search';\nconst GREEDY_BEST_FIRST_SEARCH = 'Greedy Best-first Search';\n\nconst algoFunctions = {\n    [DIJKSTRAS]: dijkstras,\n    [ASTAR]: aStar,\n    [BFS]: bfs,\n    [DFS]: dfs,\n    [GREEDY_BEST_FIRST_SEARCH]: greedyBestFirstSearch\n};\nObject.freeze(algoFunctions);\n\nconst PATH_CREATION_SLEEP = 7;\nconst algoSleepTimes = {\n    [DIJKSTRAS]: 1,\n    [ASTAR]: 4,\n    [BFS]: 5,\n    [DFS]: 10,\n    [GREEDY_BEST_FIRST_SEARCH]: 11\n};\nObject.freeze(algoSleepTimes);\n\nexport { DIJKSTRAS, ASTAR, BFS, DFS, GREEDY_BEST_FIRST_SEARCH, algoFunctions, PATH_CREATION_SLEEP, algoSleepTimes };\n\nconst allPathAlgos = [DIJKSTRAS, ASTAR, BFS, DFS, GREEDY_BEST_FIRST_SEARCH];\nObject.freeze(allPathAlgos);\nconst unweightedPathAlgos = [DFS, BFS, GREEDY_BEST_FIRST_SEARCH];\nObject.freeze(unweightedPathAlgos);\nconst optimalPathAlgos = [DIJKSTRAS, ASTAR, BFS];\nObject.freeze(optimalPathAlgos);\n\nexport { allPathAlgos, unweightedPathAlgos, optimalPathAlgos };\n\n// TERRAIN ALGORTHIM CONSTANTS -------------------------------------------\nconst MAZE_GENERATION_SLEEP = 5;\nconst RECURSIVE_DIVISION = \"Recursive Division\";\nconst SIMPLEX_NOISE = \"Simplex Noise\";\nconst RANDOM_UNWEIGHTED = \"Random\";\nconst RANDOM_WEIGHTED = \"Random (Weighted)\"\nconst allTerrainAlgos = [RECURSIVE_DIVISION, SIMPLEX_NOISE, RANDOM_UNWEIGHTED, RANDOM_WEIGHTED];\nObject.freeze(allTerrainAlgos);\n\nconst unweightedTerrainAlgos = [RECURSIVE_DIVISION, RANDOM_UNWEIGHTED];\nObject.freeze(unweightedTerrainAlgos);\n\nconst terrainFunctions = {\n    [RECURSIVE_DIVISION]: recursiveDivision,\n    [SIMPLEX_NOISE]: simplexNoise,\n    [RANDOM_UNWEIGHTED]: random,\n    [RANDOM_WEIGHTED]: randomWeighted,\n};\nObject.freeze(terrainFunctions);\n\nconst terrainAlgoSleepTimes = {\n    [RECURSIVE_DIVISION]: 5,\n    [SIMPLEX_NOISE]: 1,\n    [RANDOM_UNWEIGHTED]: 1,\n    [RANDOM_WEIGHTED]: 1\n};\nObject.freeze(terrainAlgoSleepTimes);\n\nexport { MAZE_GENERATION_SLEEP, RECURSIVE_DIVISION, SIMPLEX_NOISE, allTerrainAlgos, unweightedTerrainAlgos, terrainFunctions, terrainAlgoSleepTimes };\n\n// NODE CONSTANTS ------------------------------------------------------------\nconst nodeTypeEnum = {\n    'path': 0,\n    'visited': 1,\n    'visiting': 2,\n    'none': 3,\n    'target': 4,\n    'start': 5,\n    'remObstacle': 6,\n    'wall': 7,\n    'weighted100': 8,\n    'weighted80': 9,\n    'weighted60': 10,\n    'weighted40': 11,\n    'weighted20': 12\n};\nObject.freeze(nodeTypeEnum);\n\nexport { nodeTypeEnum };\n\nconst nodeColorClass = {\n    [nodeTypeEnum.none]: 'none',\n    [nodeTypeEnum.target]: 'target',\n    [nodeTypeEnum.wall]: 'wall',\n    [nodeTypeEnum.visiting]: 'visiting',\n    [nodeTypeEnum.start]: 'start',\n    [nodeTypeEnum.visited]: 'visited',\n    [nodeTypeEnum.path]: 'path',\n    [nodeTypeEnum.weighted100]: 'weighted100',\n    [nodeTypeEnum.weighted80]: 'weighted80',\n    [nodeTypeEnum.weighted60]: 'weighted60',\n    [nodeTypeEnum.weighted40]: 'weighted40',\n    [nodeTypeEnum.weighted20]: 'weighted20'\n};\nObject.freeze(nodeColorClass);\n\nexport { nodeColorClass };\n\nconst EMPTY_NODE_BORDER_COLOR = '#3C4046';\nconst nodeColors = {\n    [nodeTypeEnum.none]: 'transparent',\n    [nodeTypeEnum.target]: '#f14846',\n    [nodeTypeEnum.wall]: '#18191c',\n    [nodeTypeEnum.visiting]: '#4988dc',\n    [nodeTypeEnum.start]: '#43b581',\n    [nodeTypeEnum.visited]: '#3f70dd',\n    [nodeTypeEnum.path]: '#f9a719',\n    [nodeTypeEnum.weighted100]: '#1b1c1e',\n    [nodeTypeEnum.weighted80]: '#1c1e21',\n    [nodeTypeEnum.weighted60]: '#222327',\n    [nodeTypeEnum.weighted40]: '#26272b',\n    [nodeTypeEnum.weighted20]: '#2b2c31'\n};\nObject.freeze(nodeColors);\n\nexport { EMPTY_NODE_BORDER_COLOR, nodeColors };\n\nconst nodeWeight = {\n    [nodeTypeEnum.none]: 1,\n    [nodeTypeEnum.target]: 1,\n    [nodeTypeEnum.wall]: Infinity,\n    [nodeTypeEnum.start]: 1,\n    [nodeTypeEnum.weighted100]: 100,\n    [nodeTypeEnum.weighted80]: 80,\n    [nodeTypeEnum.weighted60]: 60,\n    [nodeTypeEnum.weighted40]: 40,\n    [nodeTypeEnum.weighted20]: 20\n};\nObject.freeze(nodeWeight);\nexport { nodeWeight };\n\n// OBSTACLE TYPES --------------------------------------------------------\nconst obstacleTypes = ['Wall (∞)', 'Weighted (100)', 'Weighted (80)', 'Weighted (60)', 'Weighted (40)', 'Weighted (20)'];\nconst obsEnum = {\n    [obstacleTypes[0]]: nodeColorClass[nodeTypeEnum.wall],\n    [obstacleTypes[1]]: nodeColorClass[nodeTypeEnum.weighted100],\n    [obstacleTypes[2]]: nodeColorClass[nodeTypeEnum.weighted80],\n    [obstacleTypes[3]]: nodeColorClass[nodeTypeEnum.weighted60],\n    [obstacleTypes[4]]: nodeColorClass[nodeTypeEnum.weighted40],\n    [obstacleTypes[5]]: nodeColorClass[nodeTypeEnum.weighted20]\n};\nObject.freeze(obsEnum);\n\nexport { obstacleTypes, obsEnum };\n\n// ALGO INFO BOX --------------------------------------------------------\n\nconst codeBlockCustomStyle = {\n    fontSize: 13,\n    backgroundColor: '#18191c',\n    borderRadius: 4,\n    padding: 20,\n    lineHeight: 1.5,\n    maxHeight: 250,\n    marginTop: 7,\n    marginBottom: 0\n};\n\nconst inLineCodeBlockCustomStyle = {\n    fontSize: 12,\n    backgroundColor: '#18191c',\n    borderRadius: 4,\n    padding: 4,\n    display: 'inline',\n    color: 'white',\n    fontWeight: 600\n};\n\nconst pathfindingAlgoInfo = {\n    [DIJKSTRAS]: {\n        'summary': <h4>{DIJKSTRAS} is a <strong>greedy</strong> pathfinding algorithm that guarantees <strong>optimal (shortest)</strong> paths, even in <strong>weighted</strong> graphs</h4>,\n        'description': null,\n        'pseudocode': <SyntaxHighlighter language=\"python\" style={atomOneDark} showLineNumbers={true} wrapLines={true} customStyle={codeBlockCustomStyle}>\n            {`min_pq = min_heap(start_node: 0)\ndist = { start_node: 0 }\nprev = {}\n\nfor node in nodes:\n    if node != start_node:\n        dist[node] = Infinity\n        min_pq[node] = Infinity\n            \nwhile min_pq.len:\n    curr_node = min_pq.delete_min()\n    \n    if curr_node == target_node:\n        return create_path(prev) # found path to target\n        \n    for neighbour in curr_node.neighbours:\n        new_cost = distance[curr_node] + \n                   edge(curr_node, neighbour).weight\n\n        if new_cost < dist[neighbour]:\n            # found better path, update the distance\n            dist[neighbour] = new_cost\n            min_pq[neighbour] = new_cost\n            prev[neighbour] = curr_node\n\n# no path found\nreturn`}\n        </SyntaxHighlighter>\n    },\n    [ASTAR]: {\n        'summary': <h4>{ASTAR} is an <strong>informed</strong> pathfinding algorithm that guarantees <strong>optimal (shortest)</strong> paths, even in <strong>weighted</strong> graphs</h4>,\n        'description': <><p>The algorithm explores paths that minimize the function <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>f(node) = g(node) + h(node)</SyntaxHighlighter> where <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>g(node)</SyntaxHighlighter> is the cost of the path from <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={{ ...inLineCodeBlockCustomStyle, color: nodeColors[nodeTypeEnum.start] }}>start_node</SyntaxHighlighter> to <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>node</SyntaxHighlighter> and <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>h(node)</SyntaxHighlighter> is the <strong>heuristic function</strong> which estimates the cost of the path from <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>node</SyntaxHighlighter> to <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={{ ...inLineCodeBlockCustomStyle, color: nodeColors[nodeTypeEnum.target] }}>target_node</SyntaxHighlighter>.</p><p>The current chosen heuristic function is known as <strong>Manhattan Distance</strong>, which is just a sum of the differences in the <strong>x</strong> and <strong>y</strong> co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.</p></>,\n        'pseudocode': <SyntaxHighlighter language=\"python\" style={atomOneDark} showLineNumbers={true} wrapLines={true} customStyle={codeBlockCustomStyle}>\n            {`open_set = min_heap(start_node: 0)\nG = { start_node: 0 } # G(n) => tell us the current shortest distance from start node to node n\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\nF = { start_node: 0 } # F(n) = G(n) + H(n)\nprev = {}\n\nfor node in nodes:\n    if node == start_node:\n        continue\n    \n    F[node] = G[node] = H[node] = Infinity\n    \nwhile open_set not empty:\n    curr_node = open_set.delete_min()\n    \n    if curr_node == target_node:\n        return create_path(prev)\n        \n    for neighbour in curr_node.neighbours:\n        new_G_score = G[curr_node] + weight(edge(curr_node, neighbour))\n        \n        if new_G_score < G[curr_node]:\n            # update all scores\n            G[neighbour] = new_G_score\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\n            F[neighbour] = G[neighbour] + H[neighbour];\n            prev[neighbour] = curr_node;\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\n\n# no path found\nreturn`}\n        </SyntaxHighlighter>\n    },\n    [BFS]: {\n        'summary': <h4>{BFS} is an <strong>uninformed/blind</strong> search algorithm that gurantees finding the <strong>optimal (shortest)</strong> paths only in <strong>unweighted</strong> graphs</h4>,\n        'pseudocode': <SyntaxHighlighter language=\"python\" style={atomOneDark} showLineNumbers={true} wrapLines={true} customStyle={codeBlockCustomStyle}>\n            {`queue = [start_node]\nvisited = { start_node: 1 }\nprev = {}\n\nwhile queue.len:\n    curr_node = queue.dequeue()\n    \n    for neighbour in curr_node.neighbours:\n        if neighbour in visited:\n            continue # skip nodes that are already visited\n        \n        prev[neighbour] = curr_node\n        queue.enqueue(neighbour)\n        visited[neighbour] = 1\n\n        if neighbour == target_node:\n            # we path to target_node\n            return create_path(prev)\n\n# no path found \nreturn`}\n        </SyntaxHighlighter>\n    },\n    [DFS]: {\n        'summary': <h4>{DFS} is an <strong>uninformed/blind</strong> search algorithm that is <strong>unoptimal (may or may not find shortest path)</strong> and <strong>unweighted</strong></h4>,\n        'pseudocode': <SyntaxHighlighter language=\"python\" style={atomOneDark} showLineNumbers={true} wrapLines={true} customStyle={codeBlockCustomStyle}>\n            {`stack = [start_node]\nvisited = { start_node: 1 }\n\nwhile stack.len:\n    curr_node = stack.pop()\n    stack.push(curr_node)\n\n    if curr_node == target_node:\n        return stack # our stack is the path to target_node\n    \n    flag = False\n    for neighbour in curr_node.neighbours:\n        if neighbour in visited:\n            continue # skip nodes that are already visited\n        \n        stack.push(neighbour)\n        visited[neighbour] = 1\n        flag = True\n\n    if flag:\n        # no neighbours that need to be visited, pop the node from stack\n        stack.pop()\n\n# no path found \nreturn`}\n        </SyntaxHighlighter>\n    },\n    [GREEDY_BEST_FIRST_SEARCH]: {\n        'summary': <h4>{GREEDY_BEST_FIRST_SEARCH} is an <strong>informed</strong> and <strong>greedy</strong> pathfinding algorithm that is <strong>unoptimal</strong> (may or may not find the shortest paths) and <strong>unweighted</strong></h4>,\n        'description': <><p>Similar to {ASTAR}, this algorithm explores paths that minimize the function <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>f(node) = h(node)</SyntaxHighlighter> where <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>h(node)</SyntaxHighlighter> is the <strong>heuristic function</strong> which estimates the cost of the path from <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>node</SyntaxHighlighter> to <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={{ ...inLineCodeBlockCustomStyle, color: nodeColors[nodeTypeEnum.target] }}>target_node</SyntaxHighlighter>. Unlike {ASTAR}, {GREEDY_BEST_FIRST_SEARCH} does not perform optimally because it only cares about the estimated distance from <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>node</SyntaxHighlighter> to <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={{ ...inLineCodeBlockCustomStyle, color: nodeColors[nodeTypeEnum.target] }}>target_node</SyntaxHighlighter>, however, fails to optimize for the cost to get from <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={{ ...inLineCodeBlockCustomStyle, color: nodeColors[nodeTypeEnum.start] }}>start_node</SyntaxHighlighter> to <SyntaxHighlighter language={'text'} style={atomOneDark} customStyle={inLineCodeBlockCustomStyle}>node</SyntaxHighlighter>.</p><p>The current chosen heuristic function is known as <strong>Manhattan Distance</strong>, which is just a sum of the differences in the <strong>x</strong> and <strong>y</strong> co-ordinates of 2 points. This heuristic was chosen as it works best for grids where there are 4 directions of movement allowed.</p></>,\n        'pseudocode': <SyntaxHighlighter language=\"python\" style={atomOneDark} showLineNumbers={true} wrapLines={true} customStyle={codeBlockCustomStyle}>\n            {`open_set = min_heap(start_node: 0)\nH = { start_node: 0 } # H(n) => tells us the estimated distance from node n to target node\nF = { start_node: 0 } # F(n) = H(n)\nprev = {}\nvisited = {}\n\nfor node in nodes:\n    if node == start_node:\n        continue\n    \n    F[node] = H[node] = Infinity\n    \nwhile open_set not empty:\n    curr_node = open_set.delete_min()\n    \n    if curr_node == target_node:\n        return create_path(prev)\n        \n    for neighbour in curr_node.neighbours:  # check all unvisited neighbours \n        if neighbout not in visited:\n            # update all scores\n            visited[neighbours] = 1\n            H[neighbour] = manhattan_distance_heuristic(neighbour, targetCord); # get estimated cost from neighbour -> target\n            F[neighbour] = H[neighbour];\n            prev[neighbour] = curr_node;\n            openSet[neighbour] = F[neighbour]; # update priority of neighbour in open_set\n\n# no path found\nreturn`}\n        </SyntaxHighlighter>\n    }\n};\nObject.freeze(pathfindingAlgoInfo);\nexport { pathfindingAlgoInfo };\n\n","import React from 'react'\nimport { useEffect, useState } from 'react'\nimport { EMPTY_NODE_BORDER_COLOR, nodeTypeEnum } from '../utils/constants.js'\nimport { getNodeColor } from '../utils/helper.js'\n\nconst Node = ({ nodeId, size, setGridState, draggingSelection, setDraggingSelection, setStartCord, setTargetCord, runningAlgo, selectedObstacle, startingState }) => {\n    const [nodeState, setNodeState] = useState(startingState);\n\n    useEffect(() => {\n        setGridState(prevState => ({ ...prevState, [nodeId]: [startingState, setNodeState] }));\n    }, []);\n\n    const nodeColor = getNodeColor(nodeState);\n    let nodeStyle = {\n        width: size,\n        height: size,\n        backgroundColor: nodeColor,\n        border: `1px solid ${nodeState[0] === nodeTypeEnum.none ? EMPTY_NODE_BORDER_COLOR : nodeColor}`\n    };\n\n    if (!runningAlgo) {\n        if (draggingSelection === nodeTypeEnum.start || draggingSelection === nodeTypeEnum.target) {\n            nodeStyle.cursor = 'grabbing';\n        }\n        else if (draggingSelection === nodeTypeEnum.none && (nodeState[0] === nodeTypeEnum.start || nodeState[0] === nodeTypeEnum.target)) {\n            nodeStyle.cursor = 'grab';\n        }\n    }\n\n    const mouseDowned = () => {\n        if (nodeState[0] <= nodeTypeEnum.none) {\n            setDraggingSelection(nodeTypeEnum[selectedObstacle]);\n            setNodeState(prevState => [nodeTypeEnum[selectedObstacle], nodeTypeEnum.none]);\n            setGridState(prevState => ({ ...prevState, [nodeId]: [[nodeTypeEnum[selectedObstacle], nodeTypeEnum.none], setNodeState] }));\n            return;\n        }\n        else if (nodeState[0] >= nodeTypeEnum.wall) {\n            setNodeState(prevState => prevState.slice(1));\n            setGridState(prevState => ({ ...prevState, [nodeId]: [nodeState.slice(1), setNodeState] }));\n            setDraggingSelection(nodeTypeEnum.remObstacle);\n            return;\n        }\n        else if (nodeState[0] === nodeTypeEnum.start || nodeState[0] === nodeTypeEnum.target) {\n            setGridState(prevState => ({ ...prevState, [nodeId]: [nodeState.slice(1), setNodeState] }));\n        }\n\n        setDraggingSelection(nodeState[0]);\n    };\n\n    const mouseEntered = () => {\n        if (draggingSelection === nodeTypeEnum.remObstacle && nodeState[0] >= nodeTypeEnum.wall) {\n            setNodeState(prevState => prevState.slice(1));\n            setGridState(prevState => ({ ...prevState, [nodeId]: [nodeState.slice(1), setNodeState] }));\n        }\n        else if (draggingSelection === nodeTypeEnum[selectedObstacle] && nodeState[0] <= nodeTypeEnum.none) {\n            setNodeState(prevState => [nodeTypeEnum[selectedObstacle], nodeTypeEnum.none]);\n            setGridState(prevState => ({ ...prevState, [nodeId]: [[nodeTypeEnum[selectedObstacle], nodeTypeEnum.none], setNodeState] }));\n        }\n        else if (draggingSelection === nodeTypeEnum.start) {\n            setNodeState(prevState => [draggingSelection, ...prevState]);\n        }\n        else if (draggingSelection === nodeTypeEnum.target) {\n            setNodeState(prevState => [draggingSelection, ...prevState]);\n        }\n    };\n\n    const mouseLeft = () => {\n        if (draggingSelection === nodeTypeEnum.start || draggingSelection === nodeTypeEnum.target) {\n            setNodeState(prevState => prevState.slice(1));\n            return;\n        }\n    };\n\n    const mouseUped = () => {\n        if (draggingSelection === nodeTypeEnum.start) {\n            setStartCord(nodeId);\n            setGridState(prevState => ({ ...prevState, [nodeId]: [nodeState, setNodeState] }));\n        }\n        else if (draggingSelection === nodeTypeEnum.target) {\n            setTargetCord(nodeId);\n            setGridState(prevState => ({ ...prevState, [nodeId]: [nodeState, setNodeState] }));\n        }\n        if (draggingSelection !== nodeTypeEnum.none) {\n            setDraggingSelection(nodeTypeEnum.none);\n        }\n    };\n\n    return (\n        <div style={nodeStyle} className={`node ${((nodeState[0] >= nodeTypeEnum.wall && draggingSelection === nodeTypeEnum.none) || draggingSelection === nodeTypeEnum.remObstacle) && 'erasing'}\n        ${draggingSelection !== nodeTypeEnum.remObstacle && (nodeState[0] <= nodeTypeEnum.none || draggingSelection >= nodeTypeEnum.wall) && !runningAlgo && 'ready-to-draw'}`} onMouseDown={runningAlgo ? null : mouseDowned} onMouseUp={runningAlgo ? null : mouseUped} onMouseEnter={runningAlgo ? null : mouseEntered} onMouseLeave={runningAlgo ? null : mouseLeft} >\n        </div>\n    );\n};\n\nexport default Node\n","import Node from './Node.js'\nimport React from 'react'\nimport { useState } from 'react'\nimport { nodeTypeEnum } from '../utils/constants.js'\n\nconst Grid = React.memo(({ rows, cols, padding, nodeSize, setGridState, selectedObstacle, setStartCord, setTargetCord, runningAlgo }) => {\n    const [draggingSelection, setDraggingSelection] = useState(nodeTypeEnum.none);\n\n    // fill nodes in the grid\n    console.log(\"RERENDERING GRID\");\n    const nodes = [];\n    for (let x = 0; x < rows; x++) {\n        for (let y = 0; y < cols; y++) {\n            let nodeId = `${x}:${y}`\n\n            let startingState = [nodeTypeEnum.none];\n            if (x === 1 && y === 1) {\n                startingState.unshift(nodeTypeEnum.start);\n            }\n            else if (x === (rows - 2) && y === (cols - 2)) {\n                startingState.unshift(nodeTypeEnum.target);\n            }\n\n            nodes.push(<Node nodeId={nodeId}\n                size={nodeSize} setGridState={setGridState}\n                draggingSelection={draggingSelection}\n                setDraggingSelection={setDraggingSelection}\n                setStartCord={setStartCord} setTargetCord={setTargetCord} runningAlgo={runningAlgo} selectedObstacle={selectedObstacle} startingState={startingState} key={nodeId} />);\n        }\n    }\n\n    const gridDimensions = {\n        width: (cols * nodeSize) + cols,\n        height: (rows * nodeSize) + rows\n    };\n\n    const containerStyle = {\n        paddingLeft: padding,\n        paddingRight: padding\n    }\n\n    return (\n        <div style={containerStyle}>\n            <div className='grid' style={gridDimensions}>\n                {nodes}\n            </div >\n        </div>\n    )\n});\n\nexport default Grid\n","const Reset = ({ clearObstacles, runningAlgo }) => {\n    return (\n        <div className={`button ${runningAlgo ? 'disabled' : 'red'}`} onClick={runningAlgo ? null : clearObstacles}>\n            Clear Obstacles\n        </div >\n    )\n}\n\nexport default Reset\n","import React from 'react'\n\nconst Clear = ({ clearPath, runningAlgo }) => {\n    return (\n        <div className={`button ${runningAlgo ? 'disabled' : 'orange'}`} onClick={runningAlgo ? null : clearPath}>\n            Clear Path\n        </div >\n    )\n}\n\nexport default Clear\n","import { algoFunctions, nodeTypeEnum, PATH_CREATION_SLEEP, algoSleepTimes } from '../utils/constants.js'\nimport { sleep } from '../utils/helper.js'\n\nconst Visualize = ({ rows, cols, selectedAlgo, gridState, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo }) => {\n    const run = async () => {\n        if (startCord === targetCord) {\n            return;\n        }\n\n        clearForReRun();\n        setRunningAlgo(true);\n        console.log(\"STARTING: \", selectedAlgo);\n\n        let path = [];\n        path = await algoFunctions[selectedAlgo](startCord, targetCord, gridState, rows, cols, algoSleepTimes[selectedAlgo]);\n\n        console.log(\"ENDED: \", selectedAlgo);\n\n        for (let i = path.length - 1; i >= 0; i--) {\n            await sleep(PATH_CREATION_SLEEP);\n            const nodeStateFunc = gridState[path[i]][1];\n            nodeStateFunc(prevState => ([nodeTypeEnum.path, ...gridState[path[i]][0]]));\n        }\n\n        setRunningAlgo(false);\n    };\n\n    return (\n        <div className={`button ${runningAlgo ? 'disabled' : 'green'}`} onClick={runningAlgo ? null : run} >\n            Run\n        </div >\n    )\n}\n\nexport default Visualize\n","export default __webpack_public_path__ + \"static/media/down_arrow.8fed4a28.svg\";","export default __webpack_public_path__ + \"static/media/weight.e51e9729.svg\";","export default __webpack_public_path__ + \"static/media/weight_unfilled.cc3c5f2f.svg\";","export default __webpack_public_path__ + \"static/media/optimal.5649a19a.svg\";","export default __webpack_public_path__ + \"static/media/optimal_unfilled.e461ee2c.svg\";","import { useState, useEffect } from 'react'\nimport { isAlgoUnweighted, isAlgoOptimal, isTerrainAlgoUnweighted } from '../utils/helper.js'\nimport { nodeColors, nodeTypeEnum, obsEnum } from '../utils/constants.js'\nimport downArrow from '../images/down_arrow.svg';\nimport weight from '../images/weight.svg'\nimport weightUnfilled from '../images/weight_unfilled.svg'\nimport optimal from '../images/optimal.svg'\nimport optimalUnfilled from '../images/optimal_unfilled.svg'\n\nconst CustomDropdown = ({ setSelection, items, disabled, dropDownWidth, isAlgoSelector, isObstacleSelector, isTerrainSelector }) => {\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const [selectedVal, setSelectedVal] = useState(items[0]);\n    const [selectedId, setSelectedId] = useState(0);\n\n    useEffect(() => {\n        if (disabled && isObstacleSelector) {\n            setSelectedVal(items[0]);\n            setSelectedId(0);\n            setDropDownOpen(false);\n            setSelection(items[0]);\n        }\n    }, [disabled]);\n\n    useEffect(() => {\n        setSelectedVal(items[0]);\n        setSelectedId(0);\n        setDropDownOpen(false);\n        setSelection(items[0]);\n    }, [items]);\n\n    const toggle = () => {\n        setDropDownOpen(prevState => !prevState);\n    }\n\n    const madeSelection = (id) => {\n        setDropDownOpen(prevState => !prevState);\n        setSelectedVal(items[id]);\n        setSelectedId(id);\n        setSelection(items[id]);\n    };\n\n    const style = {\n        width: dropDownWidth\n    }\n\n    const dropdownItems = [];\n    for (let i = 0; i < items.length; i++) {\n        dropdownItems.push(<div style={style} className={`dropdown-list-item ${i === selectedId && 'selected'} ${i === items.length - 1 && 'last'}`} onClick={() => { madeSelection(i) }} key={i}>\n            {items[i]}\n            {isAlgoSelector && (!isAlgoUnweighted(items[i]) ? <img className=\"algo-property-badge\" src={weight} title={`${items[i]} is a weighted path-finding algorithm.`} alt={`${items[i]} is a weighted path-finding algorithm.`}></img> : <img className=\"algo-property-badge\" src={weightUnfilled} title={`${items[i]} is not a weighted path-finding algorithm.`} alt={`${items[i]} is not a weighted path-finding algorithm.`}></img>)}\n            {isAlgoSelector && (isAlgoOptimal(items[i]) ? <img className=\"algo-property-badge\" src={optimal} title={`${items[i]} guarantees shortest path.`} alt={`${items[i]} guarantees shortest path.`}></img> : <img className=\"algo-property-badge\" src={optimalUnfilled} title={`${items[i]} does not guarantee shortest path.`} alt={`${items[i]} does not guarantee shortest path.`}></img>)}\n            {isObstacleSelector && <div style={{ backgroundColor: nodeColors[nodeTypeEnum[obsEnum[items[i]]]] }} className=\"obstacle-preview\"> </div>}\n            {isTerrainSelector && (!isTerrainAlgoUnweighted(items[i]) ? <img className=\"algo-property-badge\" src={weight} title={`${items[i]} makes use of weighted obstacles.`} alt={`${items[i]} makes use of weighted obstacles.`}></img> : <img className=\"algo-property-badge\" src={weightUnfilled} title={`${items[i]} does not use weighted obstacles.`} alt={`${items[i]} does not use weighted obstacles.`}></img>)}\n        </div >)\n    }\n\n    return (\n        <div className='dropdown'>\n            <div style={style} className={`dropdown-header ${dropDownOpen && 'open'} ${disabled && 'disabled'}`} onClick={disabled ? null : toggle}>\n                {selectedVal}\n                {!disabled && <img className=\"down-arrow\" src={downArrow} alt=\"\"></img>}\n            </div>\n            <div style={{ display: (dropDownOpen ? 'flex' : 'none') }} className='dropdown-list'>\n                {dropdownItems}\n            </div>\n        </div >\n    )\n}\n\nexport default CustomDropdown\n","const ShowInfo = ({ toggleInfoBox }) => {\n    return (\n        <div className={`button blue`} onClick={toggleInfoBox} >\n            Info\n        </div >\n    )\n}\n\nexport default ShowInfo\n","import Visualize from './Visualize.js'\nimport CustomDropdown from './CustomDropdown.js'\nimport ShowInfo from './ShowInfo.js'\n\nimport { allPathAlgos } from '../utils/constants.js'\n\nconst ChooseAlgorithm = ({ rows, cols, gridState, setGridState, startCord, targetCord, clearForReRun, runningAlgo, setRunningAlgo, dropDownWidth, toggleInfoBox, selectedAlgo, setSelectedAlgo }) => {\n\n    return (\n        <div className={`choose-algo`}>\n            <CustomDropdown setSelection={setSelectedAlgo} items={allPathAlgos} disabled={runningAlgo} dropDownWidth={dropDownWidth} isAlgoSelector={true} isObstacleSelector={false} />\n            <ShowInfo toggleInfoBox={toggleInfoBox} />\n            <Visualize rows={rows} cols={cols} selectedAlgo={selectedAlgo} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearForReRun={clearForReRun} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} />\n        </div >\n    )\n}\n\nexport default ChooseAlgorithm\n","import { terrainFunctions, terrainAlgoSleepTimes } from '../utils/constants.js'\n\nconst GenerateTerrain = ({ rows, cols, selectedTerrainAlgo, gridState, setGridState, startCord, targetCord, runningAlgo, setRunningAlgo, resetGrid }) => {\n    const run = async () => {\n        await resetGrid();\n\n        setRunningAlgo(true);\n        console.log(\"STARTING: \", selectedTerrainAlgo);\n\n        await terrainFunctions[selectedTerrainAlgo](startCord, targetCord, gridState, setGridState, rows, cols, terrainAlgoSleepTimes[selectedTerrainAlgo]);\n\n        console.log(\"ENDED: \", selectedTerrainAlgo);\n        setRunningAlgo(false);\n    };\n\n    return (\n        <div className={`button ${runningAlgo ? 'disabled' : 'green'}`} onClick={runningAlgo ? null : run} >\n            Run\n        </div >\n    )\n}\n\nexport default GenerateTerrain\n","import CustomDropdown from './CustomDropdown.js'\nimport { useState } from 'react'\nimport { allTerrainAlgos, unweightedTerrainAlgos } from '../utils/constants.js'\nimport { isAlgoUnweighted } from '../utils/helper.js'\nimport GenerateTerrain from './GenerateTerrain.js'\n\nconst ChooseTerrain = ({ rows, cols, gridState, setGridState, startCord, targetCord, runningAlgo, setRunningAlgo, dropDownWidth, resetGrid, selectedAlgo }) => {\n    const [selectedTerrainAlgo, setSelectedTerrainAlgo] = useState(allTerrainAlgos[0]);\n\n    return (\n        <div className={`choose-terrain`}>\n            <CustomDropdown setSelection={setSelectedTerrainAlgo} items={isAlgoUnweighted(selectedAlgo) ? unweightedTerrainAlgos : allTerrainAlgos} disabled={false} dropDownWidth={dropDownWidth} isAlgoSelector={false} isObstacleSelector={false} isTerrainSelector={true} />\n            <GenerateTerrain rows={rows} cols={cols} selectedTerrainAlgo={selectedTerrainAlgo} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} resetGrid={resetGrid} />\n        </div >\n    )\n}\n\nexport default ChooseTerrain\n","import CustomDropdown from './CustomDropdown.js'\nimport { obstacleTypes, obsEnum } from '../utils/constants.js'\n\nconst ChooseObstacle = ({ setSelectedObstacle, weightedObsDisabled, dropDownWidth }) => {\n    const setObstacle = (obstacleName) => {\n        console.log(\"selected obs: \", obsEnum[obstacleName]);\n        setSelectedObstacle(obsEnum[obstacleName]);\n    };\n\n    return (\n        <div className={`choose-obstacle`}>\n            <CustomDropdown setSelection={setObstacle} items={obstacleTypes} disabled={weightedObsDisabled} dropDownWidth={dropDownWidth} isAlgoSelector={false} isObstacleSelector={true} />\n        </div >\n    )\n}\n\nexport default ChooseObstacle\n","import Reset from './Reset.js'\nimport Clear from './Clear.js'\nimport ChooseAlgorithm from './ChooseAlgorithm.js'\nimport ChooseTerrain from './ChooseTerrain.js'\nimport ChooseObstacle from './ChooseObstacle.js'\n\nconst Header = ({ rows, cols, runningAlgo, setRunningAlgo, padding, height, gridState, setGridState, startCord, targetCord, clearObstacles, clearPath, setSelectedObstacle, weightedObsDisabled, toggleInfoBox, selectedAlgo, setSelectedAlgo, resetGrid }) => {\n    const style = {\n        padding: padding,\n        paddingBottom: padding / 2,\n        height: height\n    };\n\n    return (\n        <div style={style} className='header'>\n            <Reset clearObstacles={clearObstacles} runningAlgo={runningAlgo} />\n            <Clear clearPath={clearPath} runningAlgo={runningAlgo} />\n            <ChooseAlgorithm rows={rows} cols={cols} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearForReRun={clearPath} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} dropDownWidth={260} toggleInfoBox={toggleInfoBox} selectedAlgo={selectedAlgo} setSelectedAlgo={setSelectedAlgo} />\n            <ChooseObstacle setSelectedObstacle={setSelectedObstacle} weightedObsDisabled={weightedObsDisabled} dropDownWidth={190} />\n            <ChooseTerrain rows={rows} cols={cols} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} resetGrid={resetGrid} selectedAlgo={selectedAlgo} dropDownWidth={200} />\n        </div>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/close.494fd48f.svg\";","import { useState } from 'react'\nimport closeIcon from '../images/close.svg'\nimport { pathfindingAlgoInfo } from '../utils/constants.js'\n\nconst InfoBox = ({ infoBoxOpen, toggleInfoBox, selectedAlgo, startingPos }) => {\n    const [dragging, setDragging] = useState(false);\n    const [boxCord, setBoxCord] = useState(startingPos);\n\n    const enableDragging = (e) => {\n        setDragging(true);\n    };\n\n    const beingDragged = (e) => {\n        if (dragging) {\n            setBoxCord(prevState => [prevState[0] + e.movementX, prevState[1] + e.movementY]);\n        }\n    };\n\n    const disableDragging = (e) => {\n        setDragging(false);\n    };\n\n    return (\n        <div style={{ left: `${boxCord[0]}px`, top: `${boxCord[1]}px` }} className={`info-box ${infoBoxOpen ? 'visible' : 'hidden'}`} onMouseMove={beingDragged} onMouseUp={disableDragging} onMouseLeave={disableDragging}>\n            <img className='close-info-icon' src={closeIcon} onClick={toggleInfoBox} alt='Close info box' />\n            <h1 onMouseDown={enableDragging} >{selectedAlgo}</h1>\n            {(pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].summary) || <p>No information.</p>}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].description}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].pseudocode && <p className='identifier'>Pseudocode:</p>}\n            {pathfindingAlgoInfo[selectedAlgo] && pathfindingAlgoInfo[selectedAlgo].pseudocode}\n        </div >\n    )\n}\n\nexport default InfoBox\n","import Grid from './components/Grid.js'\nimport Header from './components/Header.js'\nimport InfoBox from './components/InfoBox.js'\n\nimport { allPathAlgos, nodeTypeEnum } from './utils/constants.js'\nimport { useState, useEffect } from 'react'\nimport { isAlgoUnweighted } from './utils/helper.js'\n\nfunction App() {\n  const [gridState, setGridState] = useState({});\n  const [selectedObstacle, setSelectedObstacle] = useState('wall');\n  const [infoBoxOpen, setInfoBoxOpen] = useState(false);\n  const [selectedAlgo, setSelectedAlgo] = useState(allPathAlgos[0]);\n  const [rows, setRows] = useState(0);\n  const [cols, setCols] = useState(0);\n  const [startCord, setStartCord] = useState('0:0');\n  const [targetCord, setTargetCord] = useState('0:0');\n  const [runningAlgo, setRunningAlgo] = useState(false);\n  const [weightedObsDisabled, setWeightedObsDisabled] = useState(false);\n  const margin = 30;\n  const nodeSize = 28;\n  const navBarHeight = 90;\n\n  useEffect(() => {\n    console.log(\"RESETTING BOARD\");\n    initializeGrid();\n  }, []);\n\n  // useEffect(() => {\n  //   window.addEventListener(\"resize\", resizeGrid);\n  //   return () => window.removeEventListener(\"resize\", resizeGrid);\n  // }, []);\n\n  const initializeGrid = () => {\n    const adjustedWinHeight = window.innerHeight - (navBarHeight + (margin * 3));\n    const adjustedWinWidth = window.innerWidth - (2 * margin);\n\n    const currRows = parseInt(adjustedWinHeight / (nodeSize + 1));\n    const currCols = parseInt(adjustedWinWidth / (nodeSize + 1));\n\n    setRunningAlgo(false);\n    setRows(currRows);\n    setCols(currCols);\n    setStartCord('1:1');\n    setTargetCord(`${currRows - 2}:${currCols - 2}`);\n  };\n\n  const clearPath = () => {\n    console.log(\"CLEARING PATH\");\n    for (let x = 0; x < rows; x++) {\n      for (let y = 0; y < cols; y++) {\n        let id = `${x}:${y}`;\n        let nodeState = gridState[id][0];\n        let nodeStateFunc = gridState[id][1];\n        let currState = nodeState[0];\n\n        if ((currState === nodeTypeEnum.start || currState === nodeTypeEnum.target) && (nodeState[1] <= nodeTypeEnum.visiting)) {\n          nodeState.splice(1, 1);\n        }\n        else if (currState <= nodeTypeEnum.visiting) {\n          nodeState.splice(0, 1);\n        }\n\n        nodeStateFunc(prevState => nodeState);\n      }\n    }\n  };\n\n  const clearObstacles = () => {\n    let gridMap = {};\n    let updateGrid = false;\n    for (let x = 0; x < rows; x++) {\n      for (let y = 0; y < cols; y++) {\n        let id = `${x}:${y}`;\n        let nodeState = gridState[id][0];\n        let nodeStateFunc = gridState[id][1];\n        let currState = nodeState[0];\n\n        gridMap[id] = [nodeState, nodeStateFunc];\n\n        // check under start and target node for obstacle\n        if ((currState === nodeTypeEnum.start || currState === nodeTypeEnum.target) && (nodeState[1] >= nodeTypeEnum.wall)) {\n          updateGrid = true;\n          nodeState.splice(1, 1);\n          nodeStateFunc(prev => nodeState);\n          gridMap[id] = [nodeState, nodeStateFunc];\n          continue;\n        }\n\n        if (currState <= nodeTypeEnum.visiting) {\n          currState = nodeState[1];\n        }\n\n        if (currState >= nodeTypeEnum.wall) {\n          updateGrid = true;\n          nodeStateFunc(prev => [nodeTypeEnum.none]);\n          gridMap[id] = [[nodeTypeEnum.none], nodeStateFunc];\n        }\n      }\n    }\n\n    if (updateGrid) {\n      setGridState(prevState => gridMap);\n    }\n  };\n\n  const clearWeightedObstacles = () => {\n    let gridMap = {};\n    let updateGrid = false;\n    for (let x = 0; x < rows; x++) {\n      for (let y = 0; y < cols; y++) {\n        let id = `${x}:${y}`;\n        let nodeState = gridState[id][0];\n        let nodeStateFunc = gridState[id][1];\n        let currState = nodeState[0];\n\n        gridMap[id] = [nodeState, nodeStateFunc];\n\n        // check under start and target node for weighted obstacle\n        if ((currState === nodeTypeEnum.start || currState === nodeTypeEnum.target) && (nodeState[1] > nodeTypeEnum.wall)) {\n          updateGrid = true;\n          nodeState.splice(1, 1);\n          nodeStateFunc(prev => nodeState);\n          gridMap[id] = [nodeState, nodeStateFunc];\n          continue;\n        }\n\n        if (currState <= nodeTypeEnum.visiting) {\n          currState = nodeState[1];\n        }\n\n        if (currState > nodeTypeEnum.wall) {\n          updateGrid = true;\n          nodeStateFunc(prev => [nodeTypeEnum.none]);\n          gridMap[id] = [[nodeTypeEnum.none], nodeStateFunc];\n        }\n      }\n    }\n\n    if (updateGrid) {\n      setGridState(prevState => gridMap);\n    }\n  };\n\n  const resetGrid = () => {\n    let gridMap = {};\n    for (let x = 0; x < rows; x++) {\n      for (let y = 0; y < cols; y++) {\n        let id = `${x}:${y}`;\n        let nodeState = gridState[id][0];\n        let nodeStateFunc = gridState[id][1];\n        let currState = nodeState[0];\n        let newState = [nodeTypeEnum.none];\n\n        if (currState === nodeTypeEnum.start || currState === nodeTypeEnum.target) {\n          newState.unshift(currState);\n        }\n\n        nodeStateFunc(prev => newState);\n        gridMap[id] = [newState, nodeStateFunc];\n      }\n    }\n\n    setGridState(prevState => gridMap);\n  };\n\n  const toggleInfoBox = () => {\n    setInfoBoxOpen(prevState => !prevState);\n  };\n\n  const alteredSetSelectedAlgo = (algoName) => {\n    const unweightedAlgo = isAlgoUnweighted(algoName);\n    setWeightedObsDisabled(unweightedAlgo);\n    setSelectedAlgo(algoName);\n    if (unweightedAlgo) {\n      clearPath();\n      clearWeightedObstacles();\n    }\n  };\n\n  return (\n    <>\n      <Header rows={rows} cols={cols} runningAlgo={runningAlgo} setRunningAlgo={setRunningAlgo} padding={margin} height={navBarHeight} gridState={gridState} setGridState={setGridState} startCord={startCord} targetCord={targetCord} clearObstacles={clearObstacles} clearPath={clearPath} setSelectedObstacle={setSelectedObstacle} weightedObsDisabled={weightedObsDisabled} toggleInfoBox={toggleInfoBox} selectedAlgo={selectedAlgo} setSelectedAlgo={alteredSetSelectedAlgo} resetGrid={resetGrid} />\n      <Grid rows={rows} cols={cols} padding={margin} nodeSize={nodeSize} setGridState={setGridState} selectedObstacle={selectedObstacle} setStartCord={setStartCord} setTargetCord={setTargetCord} runningAlgo={runningAlgo} />\n      <InfoBox infoBoxOpen={infoBoxOpen} toggleInfoBox={toggleInfoBox} selectedAlgo={selectedAlgo} startingPos={[(window.innerWidth / 2) - 285, (navBarHeight + (margin * 2))]} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]}}